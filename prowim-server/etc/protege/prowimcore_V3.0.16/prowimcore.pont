; Mon Apr 18 09:22:37 CEST 2011
; 
;+ (version "3.2")
;+ (build "Build 355")


(defclass %3ACLIPS_TOP_LEVEL_SLOT_CLASS "Fake class to save top-level slot information"
	(is-a USER)
	(role abstract)
	(single-slot wird_verantwortet_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Organisationselement)
;+		(cardinality 0 1)
;+		(inverse-slot verantwortet)
		(create-accessor read-write))
	(multislot hat_Prozessinformation
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozessinformation)
;+		(inverse-slot ist_Prozessinformation_von)
		(create-accessor read-write))
	(single-slot ist_vom_Informationstyp
;+		(comment "3.0.1 Allowed Superclasses fehlte")
		(type SYMBOL)
;+		(allowed-parents Informationtyp)
;+		(cardinality 1 1)
;+		(inverse-slot ist_Informationstyp_von)
		(create-accessor read-write))
	(single-slot setzt_aktiv
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t Verkn%C3%BCpfung Entscheidung)
;+		(cardinality 1 1)
;+		(inverse-slot wird_aktiv_gesetzt_von)
		(create-accessor read-write))
	(single-slot geh%C3%B6rt_zum_Verbesserungsprojekt
		(type INSTANCE)
;+		(allowed-classes Verbesserungsprojekt)
;+		(cardinality 0 1)
;+		(inverse-slot b%C3%BCndelt_Ma%C3%9Fnahme)
		(create-accessor read-write))
	(multislot b%C3%BCndelt_Ma%C3%9Fnahme
		(type INSTANCE)
;+		(allowed-classes Ma%C3%9Fnahme)
;+		(inverse-slot geh%C3%B6rt_zum_Verbesserungsprojekt)
		(create-accessor read-write))
	(multislot beinhaltet_L%C3%B6sungskomponente
		(type INSTANCE)
;+		(allowed-classes L%C3%B6sungskomponente)
;+		(inverse-slot gehoert_zu_Anwendung)
		(create-accessor read-write))
	(single-slot RuleBody
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot Werteablageattribut
		(type INSTANCE)
;+		(allowed-classes %3ASTANDARD-SLOT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot HYPERLINKS
		(type STRING)
		(create-accessor read-write))
	(multislot teilt_berechtigung_fuer
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Rechtrolle)
;+		(inverse-slot ist_berechtigt_als)
		(create-accessor read-write))
	(single-slot VERSION_NOT_VALID
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Regelbesetzung
		(type SYMBOL)
;+		(allowed-parents Rollenbesetzung)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot wird_angek%C3%BCndigt_durch
		(type INSTANCE)
;+		(allowed-classes prowimcore_Class_50001)
;+		(inverse-slot k%C3%BCndigt_an)
		(create-accessor read-write))
	(multislot ist_Bedienmethode_f%C3%BCr
		(type INSTANCE)
;+		(allowed-classes Feature)
;+		(inverse-slot hat_Bedienmethode)
		(create-accessor read-write))
	(multislot umfasst_Anwendung
		(type INSTANCE)
;+		(allowed-classes Anwendung)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot geh%C3%B6rt_zur_Anwendungsgruppe)
		(create-accessor read-write))
	(multislot geh%C3%B6rt_zur_Anwendungsgruppe
		(type INSTANCE)
;+		(allowed-classes Anwendungsgruppe)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot umfasst_Anwendung)
		(create-accessor read-write))
	(multislot uebt_aus
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes T%C3%A4tigkeit)
;+		(inverse-slot wird_ausgeuebt_durch)
		(create-accessor read-write))
	(multislot hat_Fertigregel
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes ActivityRules)
;+		(inverse-slot ist_Fertigregel_von)
		(create-accessor read-write))
	(multislot enthaelt
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Produkt)
;+		(inverse-slot befindet_sich_in)
		(create-accessor read-write))
	(multislot wird_benoetigt_fuer
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes PROWIM-CLASS SYS_PROWIM-CLASS)
;+		(inverse-slot hat_Wissensbedarf_an)
		(create-accessor read-write))
	(single-slot Ende
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot Rechtrolle_wird_besetzt_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Person)
;+		(inverse-slot hat_Rechtrolle)
		(create-accessor read-write))
	(single-slot Inhalt_Festkommazahl
;+		(comment "--")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot benutzerdefinierte_Version
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Adresse
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot wird_aktiv_gesetzt_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Kontrollfluss)
;+		(inverse-slot setzt_aktiv)
		(create-accessor read-write))
	(single-slot wurde_eingestellt_durch
		(type INSTANCE)
;+		(allowed-classes Organisationselement)
;+		(cardinality 0 1)
;+		(inverse-slot hat_eingestellt)
		(create-accessor read-write))
	(multislot hat_Wissensbedarf_an
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Wissensobjekt)
;+		(inverse-slot wird_benoetigt_fuer)
;+		(associated-facet ProWim_Facet_10005)
		(create-accessor read-write))
	(single-slot Start
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot French_Description
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Vorname
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ist_Prozessinformation_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes PROCESS-CLASS)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot hat_Prozessinformation)
		(create-accessor read-write))
	(multislot k%C3%BCndigt_an
		(type INSTANCE)
;+		(allowed-classes Risiko)
;+		(inverse-slot wird_angek%C3%BCndigt_durch)
		(create-accessor read-write))
	(single-slot Inhalt
;+		(comment "--")
;+		(type ANY)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ist_Installiert_bei_Kunde
		(type INSTANCE)
;+		(allowed-classes Organisationseinheit)
		(create-accessor read-write))
	(multislot RuleInput
		(type STRING)
		(create-accessor read-write))
	(single-slot RuleCreationDate
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot wurde_gestartet_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Person)
;+		(cardinality 0 1)
;+		(inverse-slot hat_gestartet)
		(create-accessor read-write))
	(single-slot Eintrittswahrscheinlichkeit
;+		(comment "5 bis 25, 25 bis 50, 50 bis 75, 75 bis 95")
		(type SYMBOL)
		(allowed-values ziemlich_unwahrscheinlich Kann_eintreten ziemlich_wahrscheinlich nahezu_sicher)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot geh%C3%B6rt_zur_Produktfamilie
		(type INSTANCE)
;+		(allowed-classes Produktfamilie)
;+		(cardinality 1 1)
;+		(inverse-slot hat_Anwendungselement)
		(create-accessor read-write))
	(multislot besetzt
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Rolle)
;+		(inverse-slot wird_besetzt_durch)
		(create-accessor read-write))
	(single-slot IS-MODEL
;+		(comment "--")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ist_Endaktivitaet_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozess)
;+		(cardinality 0 1)
;+		(inverse-slot endet_mit)
		(create-accessor read-write))
	(multislot stellt_bereit
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Produkt)
;+		(inverse-slot wird_bereitgestellt_von)
		(create-accessor read-write))
	(multislot Inhalt_Relation
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes PROWIM-CLASS)
		(create-accessor read-write))
	(single-slot wird_ausgeuebt_durch
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Rolle)
;+		(cardinality 1 1)
;+		(inverse-slot uebt_aus)
		(create-accessor read-write))
	(single-slot Erf%C3%BCllungsgrad
		(type INTEGER)
		(range 0 100)
		(default 0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot RuleOutput
		(type STRING)
		(create-accessor read-write))
	(multislot darf_geaendert_werden_von
		(type INSTANCE)
;+		(allowed-classes Organisationseinheit Person Rolle)
		(create-accessor read-write))
	(single-slot DESCRIPTION-OF
		(type INSTANCE)
;+		(allowed-classes SYS_PROWIM-CLASS SYS_MODEL-SLOT PROWIM-CLASS)
;+		(cardinality 1 1)
;+		(inverse-slot DESCRIPTION)
		(create-accessor read-write))
	(multislot befindet_sich_in
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Ablage)
;+		(inverse-slot enthaelt)
		(create-accessor read-write))
	(multislot erfordert_Ma%C3%9Fnahme
		(type INSTANCE)
;+		(allowed-classes Ma%C3%9Fnahme)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot beseitigt_oder_beeinflu%C3%9Ft_die_Wirkung_der_Ursache)
		(create-accessor read-write))
	(multislot Schlagworte
;+		(comment "--")
		(type STRING)
		(create-accessor read-write))
	(multislot hat_Rechtrolle
		(type INSTANCE)
;+		(allowed-classes Rechtrolle)
		(default [Rechterolle_10003])
;+		(inverse-slot Rechtrolle_wird_besetzt_von)
		(create-accessor read-write))
	(multislot beseitigt_oder_beeinflu%C3%9Ft_die_Wirkung_der_Ursache
		(type INSTANCE)
;+		(allowed-classes Ursache)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot erfordert_Ma%C3%9Fnahme)
		(create-accessor read-write))
	(single-slot geh%C3%B6rt_zum_Gr%C3%B6%C3%9Fentyp
		(type SYMBOL)
;+		(allowed-parents prowim_Class_70002)
;+		(cardinality 1 1)
;+		(associated-facet prowim_Facet_80002)
		(create-accessor read-write))
	(single-slot wird_benachrichtigt
;+		(comment "--")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot Bezeichnung
;+		(comment "--")
		(type STRING)
;+		(cardinality 1 1)
;+		(associated-facet ProWim_Facet_0)
		(create-accessor read-write))
	(single-slot Vorgangsstatus
		(type SYMBOL)
		(allowed-values ruht aktiv fertig)
		(default ruht)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot wird_konsumiert_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t)
;+		(inverse-slot konsumiert)
		(create-accessor read-write))
	(multislot ist_berechtigt_als
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Berechtigung)
;+		(inverse-slot teilt_berechtigung_fuer)
		(create-accessor read-write))
	(multislot aktiviert
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Kontrollfluss)
;+		(inverse-slot wird_aktiviert_von)
		(create-accessor read-write))
	(multislot hat_exklusiven_Zugriff_auf
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Produkt Ablage Wissensdomaene Wissensobjekt Wissensverweis)
;+		(inverse-slot mit_exklusiven_Zugriff_durch)
		(create-accessor read-write))
	(single-slot Outputprodukt
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot mit_exklusiven_Zugriff_durch
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Organisationselement)
;+		(inverse-slot hat_exklusiven_Zugriff_auf)
		(create-accessor read-write))
	(multislot ist_Startregel_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozess Aktivit%C3%A4t)
;+		(inverse-slot hat_Startregel)
		(create-accessor read-write))
	(multislot geh%C3%B6rt_zum_Anforderungsbereich
		(type INSTANCE)
;+		(allowed-classes Anforderungsbereich)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot besteht_aus_Anforderungselement)
		(create-accessor read-write))
	(single-slot endet_mit
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t)
;+		(cardinality 0 1)
;+		(inverse-slot ist_Endaktivitaet_von)
		(create-accessor read-write))
	(single-slot angelegt_am
;+		(comment "--")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot Nachname
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Webservice_URL
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot wird_bereitgestellt_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Ablage)
;+		(inverse-slot stellt_bereit)
		(create-accessor read-write))
	(multislot ist_Transferstart_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Produktweg)
;+		(inverse-slot geht_aus_von)
		(create-accessor read-write))
	(single-slot RuleCreator
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot hat_L%C3%B6sungskomponente
		(type INSTANCE)
;+		(allowed-classes L%C3%B6sungskomponente)
;+		(inverse-slot ist_L%C3%B6sungskomponente_f%C3%BCr_Leistungsmerkmal)
		(create-accessor read-write))
	(single-slot Standard
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot wurde_fertiggesetzt_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Person)
		(create-accessor read-write))
	(single-slot X-Postion
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Anwendungsziel
;+		(comment "Gegenstand, auf den sich die Anforderungen beziehen, mit Angaben zum Einsatzbereich und den Benutzergruppen.\n\nDas Ziel, das mit der Anwendung ereicht werden soll. Bei mehreren zu erreichenden Zielen soll die Rangordnung ihrer Wichtigkeit erkennbar sein.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot befasst_sich_fachlich_mit
		(type INSTANCE)
;+		(allowed-classes Wissensdomaene)
;+		(inverse-slot ist_fachliches_Thema_in)
		(create-accessor read-write))
	(single-slot SHAPEMAP-SMALL
		(type STRING)
		(default "config2.png")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot f%C3%BChrt_zum_Risiko
		(type INSTANCE)
;+		(allowed-classes Risiko)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot ist_Folge_der_Ursache)
		(create-accessor read-write))
	(multislot wird_besetzt_durch
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Person Organisationseinheit)
;+		(inverse-slot besetzt)
		(create-accessor read-write))
	(single-slot Bild
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot verweist_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Wissensobjekt)
;+		(cardinality 0 1)
;+		(inverse-slot verweist_ueber)
		(create-accessor read-write))
	(single-slot is_shape_of
		(type INSTANCE)
;+		(allowed-classes PROWIM-CLASS)
;+		(cardinality 0 1)
;+		(inverse-slot has_shape)
		(create-accessor read-write))
	(single-slot gehoert_zu
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Organisationseinheit)
;+		(cardinality 0 1)
;+		(inverse-slot ist_aufgeteilt_in)
		(create-accessor read-write))
	(multislot setzt_sich_zusammen_aus
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes T%C3%A4tigkeit)
;+		(inverse-slot wird_ausgefuehrt_in)
		(create-accessor read-write))
	(single-slot SHAPEMAP-BIG
		(type STRING)
		(default "config3.png")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot Ist_Version_der_L%C3%B6sungskomponente
		(type INSTANCE)
;+		(allowed-classes L%C3%B6sungskomponente)
;+		(inverse-slot liegt_vor_in_Version)
		(create-accessor read-write))
	(multislot gef%C3%A4hrdet_das_Ziel
		(type INSTANCE)
;+		(allowed-classes Ziel)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot wird_gef%C3%A4hrdet_durch_Risiko)
		(create-accessor read-write))
	(single-slot IS-CORE
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
;+		(associated-facet prowim_Facet_0)
		(create-accessor read-write))
	(single-slot ist_Teil_des_Anwendungsfalls
		(type INSTANCE)
;+		(allowed-classes prowim_Class_5)
;+		(cardinality 0 1)
;+		(inverse-slot besteht_aus_Anwendungsfall)
		(create-accessor read-write))
	(single-slot Funktionsberechtigungsstufe
		(type INTEGER)
		(default 0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Auswahlattribut
		(type INSTANCE)
;+		(allowed-classes %3ASTANDARD-SLOT SYS_ALGERNON-CLASS)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot DENOTATION
		(type STRING)
;+		(cardinality 1 1)
;+		(associated-facet ProWim_Facet_3)
		(create-accessor read-write))
	(multislot wird_verwiesen_ueber
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Wissensverweis)
;+		(inverse-slot verweist_auf)
		(create-accessor read-write))
	(single-slot BOFIT_ID
		(type STRING)
;+		(cardinality 0 1)
;+		(associated-facet ProWim_Facet_1)
		(create-accessor read-write))
	(multislot wird_aktiviert_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t Verkn%C3%BCpfung Entscheidung)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot aktiviert)
		(create-accessor read-write))
	(multislot hat_Risikoelement
		(type INSTANCE)
;+		(allowed-classes Risikoelement)
;+		(inverse-slot geh%C3%B6rt_zum_Risikobereich)
		(create-accessor read-write))
	(single-slot Benutzername
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot IS-CONSTRAINT-OF
		(type INSTANCE)
;+		(allowed-classes SYS_MODEL-SLOT)
;+		(inverse-slot HAS-CONSTRAINT)
		(create-accessor read-write))
	(multislot ist_Fertigregel_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozess Aktivit%C3%A4t)
;+		(inverse-slot hat_Fertigregel)
		(create-accessor read-write))
	(single-slot wird_ausgefuehrt_in
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t)
;+		(cardinality 1 1)
;+		(inverse-slot setzt_sich_zusammen_aus)
		(create-accessor read-write))
	(multislot has_shape
		(type INSTANCE)
;+		(allowed-classes SHAPE)
;+		(inverse-slot is_shape_of)
		(create-accessor read-write))
	(multislot ist_aufgeteilt_in
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Organisationseinheit)
;+		(inverse-slot gehoert_zu)
		(create-accessor read-write))
	(multislot wird_unterst%C3%BCtzt_durch_Anwendungsgruppe
		(type INSTANCE)
;+		(allowed-classes Anwendungsgruppe)
;+		(inverse-slot unterst%C3%BCtzt_Zielsystem)
		(create-accessor read-write))
	(multislot erfordert_Durchf%C3%BChrung_von
		(type INSTANCE)
;+		(allowed-classes Ma%C3%9Fnahme)
;+		(inverse-slot wird_durchgef%C3%BChrt_bei)
		(create-accessor read-write))
	(single-slot SETermin
;+		(comment "Spätester Endetermim eines Vorgangs")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ist_fachliches_Thema_in
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t Prozess)
;+		(inverse-slot befasst_sich_fachlich_mit)
		(create-accessor read-write))
	(multislot wird_gef%C3%A4hrdet_durch_Risiko
		(type INSTANCE)
;+		(allowed-classes Risiko)
;+		(inverse-slot gef%C3%A4hrdet_das_Ziel)
		(create-accessor read-write))
	(single-slot Unit
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Informationstyp
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Wert Dokument Ganzzahl Text Datum Liste Ja_Nein Relation Link)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot DELETE
		(type STRING)
		(create-accessor read-write))
	(single-slot geh%C3%B6rt_zum_Risikobereich
		(type INSTANCE)
;+		(allowed-classes Risikobereich)
;+		(cardinality 0 1)
;+		(inverse-slot hat_Risikoelement)
		(create-accessor read-write))
	(single-slot ist_SubInput
		(type INSTANCE)
;+		(allowed-classes Produkt)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ist_SubTaetigkeit
		(type INSTANCE)
;+		(allowed-classes T%C3%A4tigkeit)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot besteht_aus_Leistungsmerkmal
		(type INSTANCE)
;+		(allowed-classes Feature)
;+		(inverse-slot geh%C3%B6rt_zum_Leistungsmerkmal)
		(create-accessor read-write))
	(multislot ist_Risiko_f%C3%BCr
		(type INSTANCE)
;+		(allowed-classes PROWIM-CLASS)
;+		(inverse-slot hat_Risiko)
		(create-accessor read-write))
	(multislot fuehrt_aus
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Funktion)
;+		(inverse-slot wird_ausgefuehrt_von)
		(create-accessor read-write))
	(single-slot HAS-ELEMENTCLASS
		(type SYMBOL)
;+		(allowed-parents PROWIM-CLASS)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ALIAS
		(type STRING)
;+		(associated-facet %3ASYNONYM)
		(create-accessor read-write))
	(single-slot L%C3%B6sungsverfahren
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot geh%C3%B6rt_zum_Leistungsmerkmal
		(type INSTANCE)
;+		(allowed-classes Feature)
;+		(cardinality 0 1)
;+		(inverse-slot besteht_aus_Leistungsmerkmal)
		(create-accessor read-write))
	(single-slot DEFAULT
		(type INSTANCE)
;+		(allowed-classes prowim_Class_70007)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot Prozesslandkarte
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot wird_erf%C3%BCllt_durch
		(type INSTANCE)
;+		(allowed-classes %3ATHING)
		(create-accessor read-write))
	(multislot l%C3%A4uft_aktuell_mit_Version
		(type INSTANCE)
;+		(allowed-classes Version_der_L%C3%B6sungskomponente)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot unterst%C3%BCtzt_aktuell_Zielsystem)
		(create-accessor read-write))
	(single-slot Minimum
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Vorgangstyp
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Geschaeftsprozess Teilprozess Aktivitaet Entscheidung Verkn%C3%BCpfung)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Icon
		(type STRING)
		(default "P:\\Tools\\ProWim\\SRV-PICTOR\\Protege\\icons\\config1.png")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot Schadensklasse
		(type SYMBOL)
		(allowed-values erh%C3%B6hte_Kosten Umsatzausfall Markenbesch%C3%A4digung)
		(cardinality 1 3)
		(create-accessor read-write))
	(multislot besteht_aus_Anwendungsfall
		(type INSTANCE)
;+		(allowed-classes prowim_Class_5)
;+		(inverse-slot ist_Teil_des_Anwendungsfalls)
		(create-accessor read-write))
	(single-slot Geltungsbereich
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Global Local)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot liegt_vor_in_Version
		(type INSTANCE)
;+		(allowed-classes Version_der_L%C3%B6sungskomponente)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot Ist_Version_der_L%C3%B6sungskomponente)
		(create-accessor read-write))
	(single-slot RGB-R
		(type INTEGER)
		(range 0 255)
		(default 0)
;+		(cardinality 1 1)
;+		(associated-facet prowim_Facet_20003)
		(create-accessor read-write))
	(single-slot French_Denotation
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Verweis
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot hat_Risiko
		(type INSTANCE)
;+		(allowed-classes Risiko)
;+		(inverse-slot ist_Risiko_f%C3%BCr)
		(create-accessor read-write))
	(single-slot wird_ausgefuehrt_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Mittel)
;+		(cardinality 1 1)
;+		(inverse-slot fuehrt_aus)
		(create-accessor read-write))
	(multislot besteht_aus_Anforderungselement
		(type INSTANCE)
;+		(allowed-classes prowim_Class_4)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot geh%C3%B6rt_zum_Anforderungsbereich)
		(create-accessor read-write))
	(single-slot Ablageort
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot RuleDenotation
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot Zahlenfeld
;+		(comment "--")
		(type INTEGER)
		(create-accessor read-write))
	(multislot leitet
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Organisationseinheit)
;+		(inverse-slot wird_geleitet_von)
		(create-accessor read-write))
	(multislot Rolle_definiert_in
;+		(comment "Stellt die Verbindung der Rolle zu einer Organisationseinheit")
		(type INSTANCE)
;+		(allowed-classes Organisationseinheit)
;+		(inverse-slot Hat_Rollen)
		(create-accessor read-write))
	(single-slot wird_geleitet_von
		(type INSTANCE)
;+		(allowed-classes Person)
;+		(cardinality 0 1)
;+		(inverse-slot leitet)
		(create-accessor read-write))
	(multislot ist_verwandt_mit
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes PROWIM-CLASS)
;+		(inverse-slot ist_verwandt_mit)
		(create-accessor read-write))
	(multislot hat_eingestellt
		(type INSTANCE)
;+		(allowed-classes Wissensobjekt)
;+		(inverse-slot wurde_eingestellt_durch)
		(create-accessor read-write))
	(multislot ist_Teil_von_TOPOPortfolio
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes)
		(create-accessor read-write))
	(single-slot hat_Verkn%C3%BCpfungsregel
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes CombinationRule)
;+		(cardinality 0 1)
;+		(inverse-slot ist_Verkn%C3%BCpfungsregel_von)
		(create-accessor read-write))
	(multislot wurde_fertig_gesetzt_von
		(type INSTANCE)
;+		(allowed-classes Person)
		(create-accessor read-write))
	(single-slot HAS-SHAPE
		(type SYMBOL)
;+		(allowed-parents SHAPE SHAPE-GROUP)
;+		(cardinality 0 1)
;+		(inverse-slot IS-SHAPE-OF)
		(create-accessor read-write))
	(multislot Relationsfeld
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes %3ATHING)
		(create-accessor read-write))
	(multislot Hat_Rollen
;+		(comment "Stellt die Verbindung einer Organisationseinheit zu einer Rolle.")
		(type INSTANCE)
;+		(allowed-classes Rolle)
;+		(inverse-slot Rolle_definiert_in)
		(create-accessor read-write))
	(multislot darf_gelesen_werden_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Rolle Organisationseinheit Person)
		(create-accessor read-write))
	(multislot hat_Startrecht_f%C3%BCr
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozess)
;+		(inverse-slot darf_gestartet_werden_von)
		(create-accessor read-write))
	(single-slot VISIBLE
;+		(comment ";; TELL-Regel für UPDATE (alle True)\n((:INSTANCE SYS_MODEL-SLOT ?X)\n(:BIND ?VI VISIBLE)\n(?VI ?X :TRUE))")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot unterst%C3%BCtzt_aktuell_Zielsystem
		(type INSTANCE)
;+		(allowed-classes Zielsystem)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot l%C3%A4uft_aktuell_mit_Version)
		(create-accessor read-write))
	(multislot ist_Unterkategorie_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes ProcessType)
;+		(inverse-slot hat_Unterkategorien)
		(create-accessor read-write))
	(single-slot hat_Vorgangsregel
;+		(comment "2.0.1 2.0.2")
		(type INSTANCE)
;+		(allowed-classes ActivityRules)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Email
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot wird_durchgef%C3%BChrt_bei
		(type INSTANCE)
;+		(allowed-classes prowimcore_Class_50001)
;+		(inverse-slot erfordert_Durchf%C3%BChrung_von)
		(create-accessor read-write))
	(multislot darf_besetzt_werden_von
		(type INSTANCE)
;+		(allowed-classes Person)
;+		(inverse-slot darf_besetzen)
		(create-accessor read-write))
	(single-slot RGB-G
		(type INTEGER)
		(range 0 255)
		(default 0)
;+		(cardinality 1 1)
;+		(associated-facet prowim_Facet_20005)
		(create-accessor read-write))
	(multislot ist_Pflichtattribute_von
		(type INSTANCE)
;+		(allowed-classes SYS_PROWIM-CLASS)
;+		(inverse-slot Pflichtattribute)
		(create-accessor read-write))
	(single-slot IS-SHAPE-OF
		(type SYMBOL)
;+		(allowed-parents PROWIM-CLASS)
;+		(cardinality 0 1)
;+		(inverse-slot HAS-SHAPE)
		(create-accessor read-write))
	(multislot wird_beherrscht_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Person)
;+		(inverse-slot beherrscht)
		(create-accessor read-write))
	(single-slot Beschreibung
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Telefon
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot geht_aus_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t)
;+		(cardinality 1 1)
;+		(inverse-slot ist_Transferstart_von)
		(create-accessor read-write))
	(single-slot HAS-ELEMENTRELATION
		(type INSTANCE)
;+		(allowed-classes SYS_COMPONENT-SLOT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Inhalt_String
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Vorgangsart
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Kernprozesse Nebenprozesse Unterst%C3%BCtzungsprozesse)
		(default Kernprozesse)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot unterstuetzt
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t)
;+		(cardinality 1 1)
;+		(inverse-slot wird_unterstuetzt_von)
		(create-accessor read-write))
	(multislot STANDARD
		(type SYMBOL)
;+		(allowed-parents prowim_Class_70002)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot Inputprodukt
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot unterst%C3%BCtzt_Zielsystem
		(type INSTANCE)
;+		(allowed-classes Zielsystem)
;+		(inverse-slot wird_unterst%C3%BCtzt_durch_Anwendungsgruppe)
		(create-accessor read-write))
	(multislot Textfeld
;+		(comment "--")
		(type STRING)
		(create-accessor read-write))
	(multislot setzt_ein
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Person)
;+		(inverse-slot wird_eingesetzt_in)
		(create-accessor read-write))
	(multislot wird_unterstuetzt_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Funktion)
;+		(inverse-slot unterstuetzt)
		(create-accessor read-write))
	(multislot darf_Dienste_aufrufen
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Webservice)
		(create-accessor read-write))
	(multislot enth%C3%A4lt_Leistungsmerkmal
		(type INSTANCE)
;+		(allowed-classes Feature)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot wird_eingesetzt_in_Anwendung)
		(create-accessor read-write))
	(single-slot DESCRIPTION
		(type INSTANCE)
;+		(allowed-classes DESCRIPTION-CLASS)
;+		(cardinality 0 1)
;+		(inverse-slot DESCRIPTION-OF)
;+		(associated-facet ProWim_Facet_20006)
		(create-accessor read-write))
	(multislot gehoert_zur_Domaene
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Wissensdomaene)
;+		(inverse-slot mit_Wissen)
		(create-accessor read-write))
	(single-slot ist_Mitglied_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Organisationseinheit)
;+		(cardinality 0 1)
;+		(inverse-slot hat_Mitglied)
		(create-accessor read-write))
	(multislot wird_eingesetzt_in
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Organisationseinheit)
;+		(inverse-slot setzt_ein)
		(create-accessor read-write))
	(single-slot ist_SubOutput
		(type INSTANCE)
;+		(allowed-classes Produkt)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ist_Startaktivitaet_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozess)
;+		(cardinality 0 1)
;+		(inverse-slot startet_mit)
		(create-accessor read-write))
	(multislot ist_Informationstyp_von
		(type INSTANCE)
;+		(allowed-classes Prozessinformation Wissensverweis)
;+		(inverse-slot ist_vom_Informationstyp)
		(create-accessor read-write))
	(single-slot Hyperlinktyp
		(type SYMBOL)
		(allowed-values Filesystem Buch Papierdokument Datenbank Web Wiki DMS)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot mit_Wissen
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Wissensobjekt)
;+		(inverse-slot gehoert_zur_Domaene)
		(create-accessor read-write))
	(single-slot hat_Aktivierungsregel
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes ActivationRules)
;+		(cardinality 0 1)
;+		(inverse-slot ist_Aktivierungsregel_von)
		(create-accessor read-write))
	(single-slot Anrede
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Alfrescoversion
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ist_Verkn%C3%BCpfungsregel_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Kontrollfluss Verkn%C3%BCpfung)
;+		(inverse-slot hat_Verkn%C3%BCpfungsregel)
		(create-accessor read-write))
	(single-slot startet_mit
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t)
;+		(cardinality 0 1)
;+		(inverse-slot ist_Startaktivitaet_von)
		(create-accessor read-write))
	(multislot ist_Aktivierungsregel_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t Entscheidung)
;+		(inverse-slot hat_Aktivierungsregel)
		(create-accessor read-write))
	(single-slot Risikokategorie
		(type SYMBOL)
		(allowed-values Finanzen Markt_und_Wettbewerb Betriebsmittel Personal Rechtsanwendung)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot hat_Akteur
		(type INSTANCE)
;+		(allowed-classes Akteur)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot ist_Akteur_f%C3%BCr)
		(create-accessor read-write))
	(multislot ist_L%C3%B6sungskomponente_f%C3%BCr_Leistungsmerkmal
		(type INSTANCE)
;+		(allowed-classes Feature)
;+		(inverse-slot hat_L%C3%B6sungskomponente)
		(create-accessor read-write))
	(multislot ist_Teil_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozess)
;+		(inverse-slot besteht_aus)
		(create-accessor read-write))
	(single-slot Anwendungsnuzten
;+		(comment "Der Nutzen, den die Anwendung erbringen wird.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot English_Denotation
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot verweist_ueber
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Wissensverweis)
;+		(inverse-slot verweist_von)
		(create-accessor read-write))
	(single-slot RuleType
		(type SYMBOL)
		(allowed-values ASK TELL)
		(default ASK)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Auswahlliste
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot DIRECTION
		(type SYMBOL)
		(allowed-values input output none)
;+		(cardinality 1 1)
;+		(associated-facet ProWim_Facet_7)
		(create-accessor read-write))
	(single-slot SHAPEMAP
		(type STRING)
		(default "config1.png")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot HAS-CONSTRAINT
		(type SYMBOL)
;+		(allowed-parents Constraints)
;+		(inverse-slot IS-CONSTRAINT-OF)
;+		(associated-facet ProWim_Facet_10001)
		(create-accessor read-write))
	(single-slot SINGLE-SHAPE
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Freigabetyp
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Alle Jeder Verantwortlicher)
		(default Jeder)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot CHANGE
		(type INSTANCE)
;+		(allowed-classes SYS_ALGERNON-CLASS SYS_PROWIM-CLASS SYS_OWN-SYSTEM-CLASS SYS_OWN-SYSTEM-SLOT SYS_ALGERNON-SLOT SYS_MODEL-SLOT)
;+		(inverse-slot ONTOLOGIEVERSION)
		(create-accessor read-write))
	(multislot ist_Folge_der_Ursache
		(type INSTANCE)
;+		(allowed-classes Ursache)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot f%C3%BChrt_zum_Risiko)
		(create-accessor read-write))
	(multislot ist_Submodell_von
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t)
;+		(inverse-slot hat_Submodell)
		(create-accessor read-write))
	(single-slot Subprozess
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ist_aktiviert
;+		(comment "--")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot German_Denotation
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot GUI
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot German_Description
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot generiert
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Produkt)
;+		(inverse-slot wird_generiert_von)
		(create-accessor read-write))
	(single-slot ist_aktive_Version
;+		(comment "Flag, der beschreibt, ob die Instanz die aktive Version ist. Wird genutzt für die Prozessmodelle.")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot Inhalt_List
		(type STRING)
		(create-accessor read-write))
	(multislot hat_Startregel
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes ActivityRules)
;+		(inverse-slot ist_Startregel_von)
		(create-accessor read-write))
	(multislot hat_Mitglied
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Person)
;+		(inverse-slot ist_Mitglied_von)
		(create-accessor read-write))
	(multislot beherrscht
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Wissensobjekt)
;+		(inverse-slot wird_beherrscht_von)
		(create-accessor read-write))
	(single-slot darf_ge%C3%A4ndert_werden
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot hat_Submodell
		(type INSTANCE)
;+		(allowed-classes Prozess)
;+		(cardinality 0 1)
;+		(inverse-slot ist_Submodell_von)
		(create-accessor read-write))
	(single-slot Variante
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ist_Prozesstyp_von
		(type INSTANCE)
;+		(allowed-classes Prozess)
;+		(inverse-slot ist_vom_Prozesstyp)
		(create-accessor read-write))
	(multislot wurde_erstellt_von
		(type INSTANCE)
;+		(allowed-classes Person)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot Passwort
;+		(comment "--")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ProWimPortal
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ist_Version_von
;+		(comment "Beinhaltet die Originalversion des Prozesses.")
		(type INSTANCE)
;+		(allowed-classes Prozess Prozesselement)
;+		(cardinality 0 1)
;+		(inverse-slot hat_Versionen)
		(create-accessor read-write))
	(multislot hat_Teilursache
		(type INSTANCE)
;+		(allowed-classes Ursache)
;+		(inverse-slot ist_Teilursache_von)
		(create-accessor read-write))
	(multislot verantwortet
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes PROWIM-CLASS)
;+		(inverse-slot wird_verantwortet_von)
		(create-accessor read-write))
	(single-slot RGB-B
		(type INTEGER)
		(range 0 255)
		(default 0)
;+		(cardinality 1 1)
;+		(associated-facet prowim_Facet_20007)
		(create-accessor read-write))
	(multislot konsumiert
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Produkt)
;+		(inverse-slot wird_konsumiert_von)
		(create-accessor read-write))
	(multislot hat_Unterkategorien
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes ProcessType)
;+		(inverse-slot ist_Unterkategorie_von)
		(create-accessor read-write))
	(multislot besetzt_stellvertretend
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Rolle)
;+		(inverse-slot wird_stellvertretend_besetzt_durch)
		(create-accessor read-write))
	(multislot ist_Teilursache_von
		(type INSTANCE)
;+		(allowed-classes Ursache)
;+		(inverse-slot hat_Teilursache)
		(create-accessor read-write))
	(multislot hat_Versionen
;+		(comment "Beinhaltet alle Prozessversionen.")
		(type INSTANCE)
;+		(allowed-classes Prozess Prozesselement)
;+		(inverse-slot ist_Version_von)
		(create-accessor read-write))
	(single-slot UNIT
		(type INSTANCE)
;+		(allowed-classes %3ATHING)
;+		(cardinality 0 1)
;+		(associated-facet ProWim_Facet_20003)
		(create-accessor read-write))
	(single-slot DMS_Schlagworte
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot Auswahl-Liste
		(type STRING)
		(create-accessor read-write))
	(multislot ist_Zwischenregel_von
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t)
;+		(inverse-slot hat_Zwischenregel)
		(create-accessor read-write))
	(multislot wird_stellvertretend_besetzt_durch
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Person)
;+		(inverse-slot besetzt_stellvertretend)
		(create-accessor read-write))
	(single-slot ist_vom_Prozesstyp
		(type INSTANCE)
;+		(allowed-classes ProcessType)
;+		(cardinality 1 1)
;+		(inverse-slot ist_Prozesstyp_von)
		(create-accessor read-write))
	(single-slot Basis-Einheit
		(type INSTANCE)
;+		(allowed-classes prowim_Class_70007)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot besteht_aus_Domaene
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Wissensdomaene)
;+		(inverse-slot ist_Teil_der_Domaene)
		(create-accessor read-write))
	(single-slot HAS-TAXRELATION
		(type INSTANCE)
;+		(allowed-classes SYS_COMPONENT-SLOT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot VALIDITY
		(type SYMBOL)
		(allowed-values Local Global LocalGlobal)
		(default Global)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot hat_Template
		(type INSTANCE)
;+		(allowed-classes PROCESS-CLASS)
;+		(inverse-slot aus_Template)
		(create-accessor read-write))
	(single-slot wird_betreut_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Person)
;+		(cardinality 0 1)
;+		(inverse-slot betreut)
		(create-accessor read-write))
	(single-slot Folge
;+		(comment "--")
		(type INTEGER)
		(default 0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot darf_besetzen
		(type INSTANCE)
;+		(allowed-classes Rolle)
;+		(inverse-slot darf_besetzt_werden_von)
		(create-accessor read-write))
	(multislot gehoert_zu_Anwendung
		(type INSTANCE)
;+		(allowed-classes Anwendung)
;+		(inverse-slot beinhaltet_L%C3%B6sungskomponente)
		(create-accessor read-write))
	(multislot ist_Transferende_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Produktweg)
;+		(inverse-slot endet_in)
		(create-accessor read-write))
	(multislot hat_Bedienmethode
		(type INSTANCE)
;+		(allowed-classes Bedienmethode)
;+		(inverse-slot ist_Bedienmethode_f%C3%BCr)
		(create-accessor read-write))
	(single-slot English_Description
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot betreut
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Organisationseinheit)
;+		(inverse-slot wird_betreut_von)
		(create-accessor read-write))
	(single-slot aus_Template
		(type INSTANCE)
;+		(allowed-classes PROCESS-CLASS)
;+		(cardinality 0 1)
;+		(inverse-slot hat_Template)
		(create-accessor read-write))
	(multislot realisiert_Leistungsmerkmal
		(type INSTANCE)
;+		(allowed-classes Feature)
;+		(inverse-slot ist_realisiert_in_Version)
		(create-accessor read-write))
	(single-slot Hyperlink
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Maximum
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot hat_Anwendungselement
		(type INSTANCE)
;+		(allowed-classes Anwendungselement)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot geh%C3%B6rt_zur_Produktfamilie)
		(create-accessor read-write))
	(multislot wird_transferiert_%C3%BCber
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Produktweg)
;+		(inverse-slot transferiert)
		(create-accessor read-write))
	(multislot wird_eingesetzt_in_Anwendung
		(type INSTANCE)
;+		(allowed-classes Anwendung)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot enth%C3%A4lt_Leistungsmerkmal)
		(create-accessor read-write))
	(multislot besteht_aus
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozesselement Organisationselement Wissenselement prowim_Class_4 Anwendungselement)
;+		(inverse-slot ist_Teil_von)
		(create-accessor read-write))
	(single-slot VERSION
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ONTOLOGIEVERSION
		(type SYMBOL)
;+		(allowed-parents ProWimVersion)
		(default prowimcore_Class_150000)
;+		(inverse-slot CHANGE)
;+		(associated-facet prowim_Facet_10000)
		(create-accessor read-write))
	(multislot Pflichtattribute
		(type INSTANCE)
;+		(allowed-classes %3ASTANDARD-SLOT)
;+		(inverse-slot ist_Pflichtattribute_von)
		(create-accessor read-write))
	(single-slot Pflichtfeld
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Y-Position
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot transferiert
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Produkt)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot wird_transferiert_%C3%BCber)
		(create-accessor read-write))
	(single-slot Autovorgang
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot endet_in
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t)
;+		(cardinality 0 1)
;+		(inverse-slot ist_Transferende_von)
		(create-accessor read-write))
	(multislot hat_Zwischenregel
		(type INSTANCE)
;+		(allowed-classes ActivityRules)
;+		(inverse-slot ist_Zwischenregel_von)
		(create-accessor read-write))
	(multislot ist_realisiert_in_Version
		(type INSTANCE)
;+		(allowed-classes Version_der_L%C3%B6sungskomponente)
;+		(inverse-slot realisiert_Leistungsmerkmal)
		(create-accessor read-write))
	(multislot ist_Teil_der_Domaene
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Wissensdomaene)
;+		(inverse-slot besteht_aus_Domaene)
		(create-accessor read-write))
	(single-slot darf_gestartet_werden_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Rolle)
;+		(cardinality 0 1)
;+		(inverse-slot hat_Startrecht_f%C3%BCr)
		(create-accessor read-write))
	(single-slot Dokument_Version
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot hat_gestartet
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozess)
;+		(inverse-slot wurde_gestartet_von)
		(create-accessor read-write))
	(multislot wird_generiert_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t)
;+		(inverse-slot generiert)
		(create-accessor read-write))
	(multislot ist_Akteur_f%C3%BCr
		(type INSTANCE)
;+		(allowed-classes prowim_Class_5)
		(cardinality 1 ?VARIABLE)
;+		(inverse-slot hat_Akteur)
		(create-accessor read-write))
	(single-slot verweist_auf
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Wissensspeicher)
;+		(cardinality 0 1)
;+		(inverse-slot wird_verwiesen_ueber)
		(create-accessor read-write))
	(single-slot RuleSubject
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Inhalt_Ganzzahl
;+		(comment "--")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SYS_ALGERNON-CLASS
	(is-a %3ASTANDARD-CLASS)
	(role concrete)
	(single-slot RuleBody
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot RuleDenotation
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot RuleType
		(type SYMBOL)
		(allowed-values ASK TELL)
		(default ASK)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot RuleCreator
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot RuleOutput
		(type STRING)
		(create-accessor read-write))
	(multislot ONTOLOGIEVERSION
		(type SYMBOL)
;+		(allowed-parents ProWimVersion)
		(default prowimcore_Class_150000)
		(create-accessor read-write))
	(multislot RuleInput
		(type STRING)
		(create-accessor read-write))
	(single-slot RuleCreationDate
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot IS-CORE
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass SYS_CONSTRAINT-CLASS
	(is-a SYS_ALGERNON-CLASS)
	(role concrete)
	(multislot IS-CONSTRAINT-OF
		(type INSTANCE)
;+		(allowed-classes SYS_MODEL-SLOT)
		(create-accessor read-write)))

(defclass SYS_PROWIM-CLASS
	(is-a %3ASTANDARD-CLASS)
	(role concrete)
	(multislot hat_Wissensbedarf_an
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Wissensobjekt)
		(create-accessor read-write))
	(single-slot DESCRIPTION
		(type INSTANCE)
;+		(allowed-classes DESCRIPTION-CLASS)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ALIAS
		(type STRING)
		(create-accessor read-write))
	(single-slot DENOTATION
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot HYPERLINKS
		(type STRING)
		(create-accessor read-write))
	(multislot ONTOLOGIEVERSION
		(type SYMBOL)
;+		(allowed-parents ProWimVersion)
		(default prowimcore_Class_150000)
		(create-accessor read-write))
	(multislot Pflichtattribute
		(type INSTANCE)
;+		(allowed-classes %3ASTANDARD-SLOT)
		(create-accessor read-write)))

(defclass SYS_MODEL-CLASS
	(is-a SYS_PROWIM-CLASS)
	(role concrete)
	(single-slot SINGLE-SHAPE
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot HAS-SHAPE
		(type SYMBOL)
;+		(allowed-parents SHAPE SHAPE-GROUP)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot VALIDITY
		(type SYMBOL)
		(allowed-values Local Global LocalGlobal)
		(default Global)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot IS-CORE
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass SYS_COMPONENT-CLASS
	(is-a SYS_MODEL-CLASS)
	(role concrete)
	(single-slot HAS-ELEMENTRELATION
		(type INSTANCE)
;+		(allowed-classes SYS_COMPONENT-SLOT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot HAS-ELEMENTCLASS
		(type SYMBOL)
;+		(allowed-parents PROWIM-CLASS)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot HAS-TAXRELATION
		(type INSTANCE)
;+		(allowed-classes SYS_COMPONENT-SLOT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot IS-MODEL
;+		(comment "--")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass SYS_PROCESS-COMPONENT-CLASS
	(is-a SYS_COMPONENT-CLASS)
	(role concrete))

(defclass SYS_RISK-COMPONENT-CLASS
	(is-a SYS_COMPONENT-CLASS)
	(role concrete))

(defclass SYS_REQUIREMENT-COMPONENT-CLASS
	(is-a SYS_COMPONENT-CLASS)
	(role concrete))

(defclass SYS_APPLICATION-COMPONENT-CLASS
	(is-a SYS_COMPONENT-CLASS)
	(role concrete))

(defclass SYS_CONNECTION-CLASS
	(is-a SYS_MODEL-CLASS)
	(role concrete))

(defclass SYS_PROCESS-CONNECTION-CLASS
	(is-a SYS_CONNECTION-CLASS)
	(role concrete))

(defclass SYS_SHAPE-CLASS
	(is-a SYS_PROWIM-CLASS)
	(role concrete)
	(single-slot RGB-B
		(type INTEGER)
		(range 0 255)
		(default 0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot IS-SHAPE-OF
		(type SYMBOL)
;+		(allowed-parents PROWIM-CLASS)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot RGB-R
		(type INTEGER)
		(range 0 255)
		(default 0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot SHAPEMAP-BIG
		(type STRING)
		(default "config3.png")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot SHAPEMAP-SMALL
		(type STRING)
		(default "config2.png")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot RGB-G
		(type INTEGER)
		(range 0 255)
		(default 0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot Icon
		(type STRING)
		(default "P:\\Tools\\ProWim\\SRV-PICTOR\\Protege\\icons\\config1.png")
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot SHAPEMAP
		(type STRING)
		(default "config1.png")
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SYS_UNIT-CLASS
	(is-a SYS_PROWIM-CLASS)
	(role concrete)
	(single-slot DEFAULT
		(type INSTANCE)
;+		(allowed-classes prowim_Class_70007)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass SYS_UNIT-TYPE-CLASS
	(is-a SYS_PROWIM-CLASS)
	(role concrete)
	(multislot STANDARD
		(type SYMBOL)
;+		(allowed-parents prowim_Class_70002)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write)))

(defclass SYS_ADMIN-CLASS
	(is-a SYS_PROWIM-CLASS)
	(role concrete)
	(multislot CHANGE
		(type INSTANCE)
;+		(allowed-classes SYS_ALGERNON-CLASS SYS_PROWIM-CLASS SYS_OWN-SYSTEM-CLASS SYS_OWN-SYSTEM-SLOT SYS_ALGERNON-SLOT SYS_MODEL-SLOT)
		(create-accessor read-write))
	(single-slot %3ACREATOR
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ACREATION-TIMESTAMP
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot DELETE
		(type STRING)
		(create-accessor read-write))
	(single-slot VERSION
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot VERSION_NOT_VALID
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SYS_INFORMATION-CLASS
	(is-a SYS_PROWIM-CLASS)
	(role concrete)
	(single-slot Auswahlattribut
		(type INSTANCE)
;+		(allowed-classes %3ASTANDARD-SLOT SYS_ALGERNON-CLASS)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Maximum
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ist_Informationstyp_von
		(type INSTANCE)
;+		(allowed-classes Prozessinformation Wissensverweis)
		(create-accessor read-write))
	(single-slot Minimum
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Werteablageattribut
		(type INSTANCE)
;+		(allowed-classes %3ASTANDARD-SLOT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot GUI
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Standard
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SYS_OWN-SYSTEM-CLASS
	(is-a %3ASTANDARD-CLASS)
	(role concrete)
	(single-slot DENOTATION
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot ONTOLOGIEVERSION
		(type SYMBOL)
;+		(allowed-parents ProWimVersion)
		(default prowimcore_Class_150000)
		(create-accessor read-write)))

(defclass SYS_OWN-SYSTEM-SLOT
	(is-a %3ASTANDARD-SLOT)
	(role concrete)
	(single-slot DENOTATION
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot ONTOLOGIEVERSION
		(type SYMBOL)
;+		(allowed-parents ProWimVersion)
		(default prowimcore_Class_150000)
		(create-accessor read-write)))

(defclass SYS_ALGERNON-SLOT
	(is-a %3ASTANDARD-SLOT)
	(role concrete)
	(multislot ONTOLOGIEVERSION
		(type SYMBOL)
;+		(allowed-parents ProWimVersion)
		(default prowimcore_Class_150000)
		(create-accessor read-write)))

(defclass SYS_MODEL-SLOT
	(is-a %3ASTANDARD-SLOT)
	(role concrete)
	(single-slot DESCRIPTION
		(type INSTANCE)
;+		(allowed-classes DESCRIPTION-CLASS)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ALIAS
		(type STRING)
		(create-accessor read-write))
	(single-slot DENOTATION
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot VISIBLE
;+		(comment ";; TELL-Regel für UPDATE (alle True)\n((:INSTANCE SYS_MODEL-SLOT ?X)\n(:BIND ?VI VISIBLE)\n(?VI ?X :TRUE))")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot ONTOLOGIEVERSION
		(type SYMBOL)
;+		(allowed-parents ProWimVersion)
		(default prowimcore_Class_150000)
		(create-accessor read-write))
	(multislot HAS-CONSTRAINT
		(type SYMBOL)
;+		(allowed-parents Constraints)
		(create-accessor read-write)))

(defclass SYS_COMPONENT-SLOT
	(is-a SYS_MODEL-SLOT)
	(role concrete)
	(single-slot UNIT
		(type INSTANCE)
;+		(allowed-classes %3ATHING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SYS_PROCESS-COMPONENT-SLOT
	(is-a SYS_COMPONENT-SLOT)
	(role concrete))

(defclass SYS_CONNECTOR-SLOT
	(is-a SYS_MODEL-SLOT)
	(role concrete)
	(single-slot UNIT
		(type INSTANCE)
;+		(allowed-classes %3ATHING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot DIRECTION
		(type SYMBOL)
		(allowed-values input output none)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass SYS_PROCESS-CONNECTOR-SLOT
	(is-a SYS_CONNECTOR-SLOT)
	(role concrete))

(defclass SYS_UNIT-SLOT
	(is-a SYS_MODEL-SLOT)
	(role concrete)
	(single-slot geh%C3%B6rt_zum_Gr%C3%B6%C3%9Fentyp
		(type SYMBOL)
;+		(allowed-parents prowim_Class_70002)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass PROWIM-CLASS "--"
	(is-a USER)
	(role abstract)
	(single-slot wird_verantwortet_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Organisationselement)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot DENOTATION
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot Schlagworte
;+		(comment "--")
		(type STRING)
		(create-accessor read-write))
	(single-slot Bezeichnung
;+		(comment "--")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot ist_verwandt_mit
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes PROWIM-CLASS)
		(create-accessor read-write))
	(single-slot Folge
;+		(comment "--")
		(type INTEGER)
		(default 0)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot has_shape
		(type INSTANCE)
;+		(allowed-classes SHAPE)
		(create-accessor read-write))
	(multislot Textfeld
;+		(comment "--")
		(type STRING)
		(create-accessor read-write))
	(single-slot Bild
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot hat_Wissensbedarf_an
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Wissensobjekt)
		(create-accessor read-write))
	(single-slot DESCRIPTION
		(type INSTANCE)
;+		(allowed-classes DESCRIPTION-CLASS)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot angelegt_am
;+		(comment "--")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot Geltungsbereich
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Global Local)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Beschreibung
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot hat_Risiko
		(type INSTANCE)
;+		(allowed-classes Risiko)
		(create-accessor read-write))
	(multislot Relationsfeld
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes %3ATHING)
		(create-accessor read-write))
	(single-slot %3ANAME
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot HYPERLINKS
		(type STRING)
		(create-accessor read-write))
	(multislot Zahlenfeld
;+		(comment "--")
		(type INTEGER)
		(create-accessor read-write)))

(defclass PROCESS-CLASS "--"
	(is-a PROWIM-CLASS)
	(role abstract)
	(single-slot aus_Template
		(type INSTANCE)
;+		(allowed-classes PROCESS-CLASS)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot hat_Prozessinformation
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozessinformation)
		(create-accessor read-write))
	(multislot hat_Versionen
;+		(comment "Beinhaltet alle Prozessversionen.")
		(type INSTANCE)
;+		(allowed-classes Prozess Prozesselement)
		(create-accessor read-write))
	(multislot hat_Template
		(type INSTANCE)
;+		(allowed-classes PROCESS-CLASS)
		(create-accessor read-write))
	(multislot darf_gelesen_werden_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Rolle Organisationseinheit Person)
		(create-accessor read-write))
	(single-slot ist_Version_von
;+		(comment "Beinhaltet die Originalversion des Prozesses.")
		(type INSTANCE)
;+		(allowed-classes Prozess Prozesselement)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot darf_geaendert_werden_von
		(type INSTANCE)
;+		(allowed-classes Organisationseinheit Person Rolle)
		(create-accessor read-write)))

(defclass Prozesselement "--"
	(is-a PROCESS-CLASS)
	(role abstract)
	(multislot ist_Teil_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozess)
		(create-accessor read-write)))

(defclass Produkt "--"
	(is-a Prozesselement)
	(role concrete)
	(single-slot Outputprodukt
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ist_SubInput
		(type INSTANCE)
;+		(allowed-classes Produkt)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot mit_exklusiven_Zugriff_durch
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Organisationselement)
		(create-accessor read-write))
	(multislot befindet_sich_in
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Ablage)
		(create-accessor read-write))
	(single-slot Geltungsbereich
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Global Local)
		(default Local)
;+		(cardinality 0 1)
;+		(user-facet prowim_Facet_10000 prowim_Class_20000 prowimcore_Class_10002)
		(create-accessor read-write))
	(single-slot ist_SubOutput
		(type INSTANCE)
;+		(allowed-classes Produkt)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot wird_bereitgestellt_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Ablage)
		(create-accessor read-write))
	(multislot wird_transferiert_%C3%BCber
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Produktweg)
		(create-accessor read-write))
	(single-slot Inputprodukt
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot wird_konsumiert_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t)
		(create-accessor read-write))
	(multislot wird_generiert_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t)
		(create-accessor read-write)))

(defclass Funktion "--"
	(is-a Prozesselement)
	(role concrete)
	(single-slot Geltungsbereich
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Global Local)
;+		(value Local)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot wird_ausgefuehrt_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Mittel)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot unterstuetzt
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass T%C3%A4tigkeit "--"
	(is-a Prozesselement)
	(role concrete)
	(single-slot Geltungsbereich
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Global Local)
;+		(value Local)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot wurde_fertig_gesetzt_von
		(type INSTANCE)
;+		(allowed-classes Person)
		(create-accessor read-write))
	(single-slot wird_ausgeuebt_durch
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Rolle)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot ist_SubTaetigkeit
		(type INSTANCE)
;+		(allowed-classes T%C3%A4tigkeit)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot wird_ausgefuehrt_in
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Ablage "--"
	(is-a Prozesselement)
	(role concrete)
	(multislot mit_exklusiven_Zugriff_durch
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Organisationselement)
		(create-accessor read-write))
	(single-slot Geltungsbereich
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Global Local)
;+		(value Global)
;+		(cardinality 0 1)
;+		(user-facet prowim_Facet_10000 prowim_Class_20000 prowimcore_Class_10002)
		(create-accessor read-write))
	(multislot enthaelt
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Produkt)
		(create-accessor read-write))
	(single-slot Ablageort
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot stellt_bereit
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Produkt)
		(create-accessor read-write)))

(defclass Kontrollfluss "--"
	(is-a Prozesselement)
	(role concrete)
	(single-slot hat_Verkn%C3%BCpfungsregel
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes CombinationRule)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Geltungsbereich
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Global Local)
;+		(value Local)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ist_aktiviert
;+		(comment "--")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot wird_aktiviert_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t Verkn%C3%BCpfung Entscheidung)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot setzt_aktiv
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t Verkn%C3%BCpfung Entscheidung)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Produktweg "--"
	(is-a Prozesselement)
	(role concrete)
	(multislot transferiert
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Produkt)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot endet_in
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Geltungsbereich
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Global Local)
		(default Local)
;+		(cardinality 0 1)
;+		(user-facet prowim_Facet_10000 prowim_Class_20000 prowimcore_Class_10002)
		(create-accessor read-write))
	(single-slot geht_aus_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Prozessinformation "--"
	(is-a Prozesselement)
	(role concrete)
	(single-slot darf_ge%C3%A4ndert_werden
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot Auswahlattribut
		(type INSTANCE)
;+		(allowed-classes %3ASTANDARD-SLOT SYS_ALGERNON-CLASS)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Inhalt_String
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ist_vom_Informationstyp
;+		(comment "3.0.1 Allowed Superclasses fehlte")
		(type SYMBOL)
;+		(allowed-parents Informationtyp)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot Minimum
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Inhalt_Festkommazahl
;+		(comment "--")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot Inhalt_Relation
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes PROWIM-CLASS)
		(create-accessor read-write))
	(single-slot Geltungsbereich
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Global Local)
		(default Local)
;+		(cardinality 0 1)
;+		(user-facet prowim_Facet_10000 prowim_Class_20000 prowimcore_Class_10002)
		(create-accessor read-write))
	(single-slot Maximum
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ist_Prozessinformation_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes PROCESS-CLASS)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot Informationstyp
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Wert Dokument Ganzzahl Text Datum Liste Ja_Nein Relation Link)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot Auswahl-Liste
		(type STRING)
		(create-accessor read-write))
	(multislot Inhalt_List
		(type STRING)
		(create-accessor read-write))
	(single-slot Auswahlliste
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Inhalt
;+		(comment "--")
;+		(type ANY)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Inhalt_Ganzzahl
;+		(comment "--")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Pflichtfeld
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Rolle "--"
	(is-a Prozesselement)
	(role concrete)
	(single-slot Regelbesetzung
		(type SYMBOL)
;+		(allowed-parents Rollenbesetzung)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot wird_besetzt_durch
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Person Organisationseinheit)
		(create-accessor read-write))
	(multislot Rolle_definiert_in
;+		(comment "Stellt die Verbindung der Rolle zu einer Organisationseinheit")
		(type INSTANCE)
;+		(allowed-classes Organisationseinheit)
		(create-accessor read-write))
	(single-slot Geltungsbereich
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Global Local)
		(default Local)
;+		(cardinality 0 1)
;+		(user-facet prowim_Facet_10000 prowim_Class_20000 prowimcore_Class_10002)
		(create-accessor read-write))
	(multislot uebt_aus
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes T%C3%A4tigkeit)
		(create-accessor read-write))
	(multislot hat_Startrecht_f%C3%BCr
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozess)
		(create-accessor read-write))
	(multislot darf_besetzt_werden_von
		(type INSTANCE)
;+		(allowed-classes Person)
		(create-accessor read-write))
	(multislot wird_stellvertretend_besetzt_durch
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Person)
		(create-accessor read-write)))

(defclass Mittel "--"
	(is-a Prozesselement)
	(role concrete)
	(multislot fuehrt_aus
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Funktion)
		(create-accessor read-write))
	(single-slot Geltungsbereich
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Global Local)
;+		(value Global)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Aktivit%C3%A4t "--"
	(is-a Prozesselement)
	(role concrete)
	(multislot wurde_fertiggesetzt_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Person)
		(create-accessor read-write))
	(single-slot Freigabetyp
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Alle Jeder Verantwortlicher)
		(default Jeder)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot befasst_sich_fachlich_mit
		(type INSTANCE)
;+		(allowed-classes Wissensdomaene)
		(create-accessor read-write))
	(single-slot ist_Endaktivitaet_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozess)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ist_Transferende_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Produktweg)
		(create-accessor read-write))
	(multislot wird_unterstuetzt_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Funktion)
		(create-accessor read-write))
	(multislot setzt_sich_zusammen_aus
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes T%C3%A4tigkeit)
		(create-accessor read-write))
	(single-slot ist_Startaktivitaet_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozess)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot generiert
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Produkt)
		(create-accessor read-write))
	(multislot hat_Startregel
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes ActivityRules)
		(create-accessor read-write))
	(single-slot hat_Aktivierungsregel
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes ActivationRules)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot hat_Submodell
		(type INSTANCE)
;+		(allowed-classes Prozess)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Autovorgang
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot hat_Vorgangsregel
;+		(comment "2.0.1 2.0.2")
		(type INSTANCE)
;+		(allowed-classes ActivityRules)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot hat_Zwischenregel
		(type INSTANCE)
;+		(allowed-classes ActivityRules)
		(create-accessor read-write))
	(multislot hat_Fertigregel
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes ActivityRules)
		(create-accessor read-write))
	(single-slot Vorgangsstatus
		(type SYMBOL)
		(allowed-values ruht aktiv fertig)
		(default ruht)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot Ende
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot has_shape
		(type INSTANCE)
;+		(allowed-classes prowim_Class_40018)
		(create-accessor read-write))
	(single-slot Vorgangstyp
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Geschaeftsprozess Teilprozess Aktivitaet Entscheidung Verkn%C3%BCpfung)
		(default Aktivitaet)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot aktiviert
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Kontrollfluss)
		(create-accessor read-write))
	(multislot wird_aktiv_gesetzt_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Kontrollfluss)
		(create-accessor read-write))
	(single-slot Geltungsbereich
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Global Local)
;+		(value Local)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Start
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot SETermin
;+		(comment "Spätester Endetermim eines Vorgangs")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot konsumiert
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Produkt)
		(create-accessor read-write))
	(single-slot Verweis
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ist_Transferstart_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Produktweg)
		(create-accessor read-write))
	(single-slot DMS_Schlagworte
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Verkn%C3%BCpfung "Die Klasse wurde an die Developer angepasst und beide gleiche Version verpasst.\nBestand Fehler bei Geltungsbereich"
	(is-a Prozesselement)
	(role concrete)
	(multislot wird_aktiv_gesetzt_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Kontrollfluss)
		(create-accessor read-write))
	(single-slot hat_Verkn%C3%BCpfungsregel
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes CombinationRule)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Geltungsbereich
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Global Local)
;+		(value Local)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot aktiviert
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Kontrollfluss)
		(create-accessor read-write)))

(defclass Entscheidung "Die Klasse wurde an die Developer angepasst und beide gleiche Version verpasst.\nBestand Fehler bei Geltungsbereich"
	(is-a Prozesselement)
	(role concrete)
	(multislot wird_aktiv_gesetzt_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Kontrollfluss)
		(create-accessor read-write))
	(single-slot Geltungsbereich
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Global Local)
;+		(value Local)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot aktiviert
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Kontrollfluss)
		(create-accessor read-write))
	(single-slot hat_Aktivierungsregel
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes ActivationRules)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Prozess "--"
	(is-a PROCESS-CLASS)
	(role concrete)
	(single-slot wurde_gestartet_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Person)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Alfrescoversion
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ist_Submodell_von
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t)
		(create-accessor read-write))
	(single-slot Vorgangsart
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Kernprozesse Nebenprozesse Unterst%C3%BCtzungsprozesse)
		(default Kernprozesse)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Subprozess
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot hat_Fertigregel
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes ActivityRules)
		(create-accessor read-write))
	(single-slot Vorgangsstatus
		(type SYMBOL)
		(allowed-values ruht aktiv fertig)
		(default ruht)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot befasst_sich_fachlich_mit
		(type INSTANCE)
;+		(allowed-classes Wissensdomaene)
		(create-accessor read-write))
	(single-slot darf_gestartet_werden_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Rolle)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Ende
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot startet_mit
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Vorgangstyp
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Geschaeftsprozess Teilprozess Aktivitaet Entscheidung Verkn%C3%BCpfung)
		(default Geschaeftsprozess)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot benutzerdefinierte_Version
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot endet_mit
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Geltungsbereich
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Global Local)
;+		(value Local)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Start
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ist_aktive_Version
;+		(comment "Flag, der beschreibt, ob die Instanz die aktive Version ist. Wird genutzt für die Prozessmodelle.")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot DMS_Schlagworte
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Prozesslandkarte
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot hat_Startregel
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes ActivityRules)
		(create-accessor read-write))
	(multislot besteht_aus
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozesselement Organisationselement Wissenselement prowim_Class_4 Anwendungselement)
		(create-accessor read-write))
	(single-slot ist_vom_Prozesstyp
		(type INSTANCE)
;+		(allowed-classes ProcessType)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass RISK-CLASS
	(is-a PROWIM-CLASS)
	(role abstract))

(defclass Risikobereich "Tipps zum Risikomanagement:\n- Managen Sie Projekte, indem Sie ihre Risiken managen\n- Setzen Sie sich mit den Ursachen auseinander, statt nur die unerwünschten Folgen zu sehen\n- Schätzen Sie für jedes Risiko die Wahrscheinlichkeit seines Auftretens und die Kosten ab\n- Antizipieren Sie das allererste Symptom, mit dem sich ein Problem vermutlich ankündigen wird\n-  Risikovermeidung ist fatal: Sie führt dazu, daß die mit einem Risiko verbundenen Chancen ungenutzt bleiben"
	(is-a RISK-CLASS)
	(role concrete)
	(multislot hat_Risikoelement
		(type INSTANCE)
;+		(allowed-classes Risikoelement)
		(create-accessor read-write)))

(defclass Risikoelement
	(is-a RISK-CLASS)
	(role abstract)
	(single-slot geh%C3%B6rt_zum_Risikobereich
		(type INSTANCE)
;+		(allowed-classes Risikobereich)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ist_Teil_von_TOPOPortfolio
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes)
		(create-accessor read-write)))

(defclass Ziel "Ziele erwachsen aus Wünschen.- Die Chance diese zu erreichen wird gesehen. Aber Gefahren und Risiken lauern auf dem Weg zum Ziel.\nWer ein Ziel verfolgt, der unternimmt etwas. - Wer etwas unternimmt, geht Risiken ein."
	(is-a Risikoelement)
	(role concrete)
	(multislot wird_gef%C3%A4hrdet_durch_Risiko
		(type INSTANCE)
;+		(allowed-classes Risiko)
		(create-accessor read-write)))

(defclass Risiko "Sobald ich etwas unternehme (ein Ziel verfolge) setze ich mich auf jeden Fall Risiken aus, die dieses Unternehmen beinflussen. Dabei haben Risiken Ursachen auf die ich mehr oder weniger oder auch gar keinen Einfluß habe."
	(is-a Risikoelement)
	(role concrete)
	(multislot wird_angek%C3%BCndigt_durch
		(type INSTANCE)
;+		(allowed-classes prowimcore_Class_50001)
		(create-accessor read-write))
	(multislot Schadensklasse
		(type SYMBOL)
		(allowed-values erh%C3%B6hte_Kosten Umsatzausfall Markenbesch%C3%A4digung)
		(cardinality 1 3)
		(create-accessor read-write))
	(single-slot Eintrittswahrscheinlichkeit
;+		(comment "5 bis 25, 25 bis 50, 50 bis 75, 75 bis 95")
		(type SYMBOL)
		(allowed-values ziemlich_unwahrscheinlich Kann_eintreten ziemlich_wahrscheinlich nahezu_sicher)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot Risikokategorie
		(type SYMBOL)
		(allowed-values Finanzen Markt_und_Wettbewerb Betriebsmittel Personal Rechtsanwendung)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ist_Folge_der_Ursache
		(type INSTANCE)
;+		(allowed-classes Ursache)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot ist_Risiko_f%C3%BCr
		(type INSTANCE)
;+		(allowed-classes PROWIM-CLASS)
		(create-accessor read-write))
	(multislot gef%C3%A4hrdet_das_Ziel
		(type INSTANCE)
;+		(allowed-classes Ziel)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write)))

(defclass Ursache "Frage 5 mal WARUM, damit du auch die richtigen Ursachen findest?\nUrsachen fördern die Eintrittswahrscheinlichkeit von Risiken und ggf. auch die Schadensauswirkung eines Risikos."
	(is-a Risikoelement)
	(role concrete)
	(multislot erfordert_Ma%C3%9Fnahme
		(type INSTANCE)
;+		(allowed-classes Ma%C3%9Fnahme)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot ist_Teilursache_von
		(type INSTANCE)
;+		(allowed-classes Ursache)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot f%C3%BChrt_zum_Risiko
		(type INSTANCE)
;+		(allowed-classes Risiko)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot hat_Teilursache
		(type INSTANCE)
;+		(allowed-classes Ursache)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Ma%C3%9Fnahme "Eine Maßnahme soll eine Ursache verhindern oder zumindest die Auswirkung eines Risikos mindern."
	(is-a Risikoelement)
	(role concrete)
	(multislot beseitigt_oder_beeinflu%C3%9Ft_die_Wirkung_der_Ursache
		(type INSTANCE)
;+		(allowed-classes Ursache)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot wird_durchgef%C3%BChrt_bei
		(type INSTANCE)
;+		(allowed-classes prowimcore_Class_50001)
		(create-accessor read-write))
	(single-slot geh%C3%B6rt_zum_Verbesserungsprojekt
		(type INSTANCE)
;+		(allowed-classes Verbesserungsprojekt)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Verbesserungsprojekt
	(is-a Risikoelement)
	(role concrete)
	(single-slot b%C3%BCndelt_Ma%C3%9Fnahme
		(type INSTANCE)
;+		(allowed-classes Ma%C3%9Fnahme)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass prowimcore_Class_50001 "Ein Indikator zeigt an, dass sich ein Risikofall ankündigt und die Durchführung einer vorgesehenen Maßnahme erfordert."
	(is-a Risikoelement)
	(role concrete)
	(multislot erfordert_Durchf%C3%BChrung_von
		(type INSTANCE)
;+		(allowed-classes Ma%C3%9Fnahme)
		(create-accessor read-write))
	(multislot k%C3%BCndigt_an
		(type INSTANCE)
;+		(allowed-classes Risiko)
		(create-accessor read-write)))

(defclass REQUIREMENT-CLASS
	(is-a PROWIM-CLASS)
	(role abstract))

(defclass Anforderungsbereich
	(is-a REQUIREMENT-CLASS)
	(role concrete)
	(single-slot Anwendungsziel
;+		(comment "Gegenstand, auf den sich die Anforderungen beziehen, mit Angaben zum Einsatzbereich und den Benutzergruppen.\n\nDas Ziel, das mit der Anwendung ereicht werden soll. Bei mehreren zu erreichenden Zielen soll die Rangordnung ihrer Wichtigkeit erkennbar sein.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot Anwendungsnuzten
;+		(comment "Der Nutzen, den die Anwendung erbringen wird.")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot besteht_aus_Anforderungselement
		(type INSTANCE)
;+		(allowed-classes prowim_Class_4)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write)))

(defclass prowim_Class_4
	(is-a REQUIREMENT-CLASS)
	(role abstract)
	(multislot geh%C3%B6rt_zum_Anforderungsbereich
		(type INSTANCE)
;+		(allowed-classes Anforderungsbereich)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot ist_Teil_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozess)
		(create-accessor read-write)))

(defclass Akteur
	(is-a prowim_Class_4)
	(role concrete)
	(multislot ist_Akteur_f%C3%BCr
		(type INSTANCE)
;+		(allowed-classes prowim_Class_5)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write)))

(defclass prowim_Class_5
	(is-a prowim_Class_4)
	(role concrete)
	(single-slot ist_Teil_des_Anwendungsfalls
		(type INSTANCE)
;+		(allowed-classes prowim_Class_5)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot besteht_aus_Anwendungsfall
		(type INSTANCE)
;+		(allowed-classes prowim_Class_5)
		(create-accessor read-write))
	(multislot hat_Akteur
		(type INSTANCE)
;+		(allowed-classes Akteur)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot Erf%C3%BCllungsgrad
		(type INTEGER)
		(range 0 100)
		(default 0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot wird_erf%C3%BCllt_durch
		(type INSTANCE)
;+		(allowed-classes %3ATHING)
		(create-accessor read-write)))

(defclass KNOWLEDGE-CLASS "Version 2.0.3: Geltungsbereich auf Template Value = Global gesetzt"
	(is-a PROWIM-CLASS)
	(role abstract)
	(single-slot Geltungsbereich
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Global Local)
;+		(value Global)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot darf_gelesen_werden_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Rolle Organisationseinheit Person)
		(create-accessor read-write))
	(multislot darf_geaendert_werden_von
		(type INSTANCE)
;+		(allowed-classes Organisationseinheit Person Rolle)
		(create-accessor read-write)))

(defclass Wissenselement "--"
	(is-a KNOWLEDGE-CLASS)
	(role abstract)
	(multislot ist_Teil_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozess)
		(create-accessor read-write))
	(multislot ist_Teil_von_TOPOPortfolio
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes)
		(create-accessor read-write)))

(defclass Wissensobjekt "--"
	(is-a Wissenselement)
	(role concrete)
	(multislot mit_exklusiven_Zugriff_durch
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Organisationselement)
		(create-accessor read-write))
	(single-slot wurde_eingestellt_durch
		(type INSTANCE)
;+		(allowed-classes Organisationselement)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot gehoert_zur_Domaene
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Wissensdomaene)
		(create-accessor read-write))
	(multislot wird_beherrscht_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Person)
		(create-accessor read-write))
	(multislot verweist_ueber
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Wissensverweis)
		(create-accessor read-write))
	(multislot wird_benoetigt_fuer
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes PROWIM-CLASS SYS_PROWIM-CLASS)
		(create-accessor read-write)))

(defclass Wissensdomaene "--"
	(is-a Wissenselement)
	(role concrete)
	(multislot mit_exklusiven_Zugriff_durch
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Organisationselement)
		(create-accessor read-write))
	(multislot besteht_aus_Domaene
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Wissensdomaene)
		(create-accessor read-write))
	(multislot ist_fachliches_Thema_in
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t Prozess)
		(create-accessor read-write))
	(multislot ist_Teil_der_Domaene
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Wissensdomaene)
		(create-accessor read-write))
	(multislot mit_Wissen
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Wissensobjekt)
		(create-accessor read-write)))

(defclass Wissensspeicher "--"
	(is-a Wissenselement)
	(role concrete)
	(multislot wird_verwiesen_ueber
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Wissensverweis)
		(create-accessor read-write))
	(single-slot Ablageort
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Wissensverweis "--"
	(is-a Wissenselement)
	(role concrete)
	(single-slot Inhalt_String
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ist_vom_Informationstyp
;+		(comment "3.0.1 Allowed Superclasses fehlte")
		(type SYMBOL)
;+		(allowed-parents Informationtyp)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot Dokument_Version
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Inhalt_Festkommazahl
;+		(comment "--")
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot Inhalt_Relation
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes PROWIM-CLASS)
		(create-accessor read-write))
	(multislot mit_exklusiven_Zugriff_durch
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Organisationselement)
		(create-accessor read-write))
	(single-slot verweist_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Wissensobjekt)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Hyperlink
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Geltungsbereich
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Global Local)
;+		(value Global)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot verweist_auf
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Wissensspeicher)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Hyperlinktyp
		(type SYMBOL)
		(allowed-values Filesystem Buch Papierdokument Datenbank Web Wiki DMS)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot Inhalt_List
		(type STRING)
		(create-accessor read-write))
	(single-slot Inhalt
;+		(comment "--")
;+		(type ANY)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Inhalt_Ganzzahl
;+		(comment "--")
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass ORGANISATION-CLASS
	(is-a PROWIM-CLASS)
	(role abstract))

(defclass Organisationselement "--"
	(is-a ORGANISATION-CLASS PROCESS-CLASS)
	(role abstract)
	(single-slot Funktionsberechtigungsstufe
		(type INTEGER)
		(default 0)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot verantwortet
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes PROWIM-CLASS)
		(create-accessor read-write))
	(multislot ist_Teil_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozess)
		(create-accessor read-write))
	(multislot hat_eingestellt
		(type INSTANCE)
;+		(allowed-classes Wissensobjekt)
		(create-accessor read-write))
	(multislot hat_exklusiven_Zugriff_auf
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Produkt Ablage Wissensdomaene Wissensobjekt Wissensverweis)
		(create-accessor read-write)))

(defclass Person "--"
	(is-a Organisationselement)
	(role concrete)
	(single-slot Anrede
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Email
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot leitet
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Organisationseinheit)
		(create-accessor read-write))
	(multislot hat_Rechtrolle
		(type INSTANCE)
;+		(allowed-classes Rechtrolle)
		(default [Rechterolle_10003])
		(create-accessor read-write))
	(multislot besetzt
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Rolle)
		(create-accessor read-write))
	(single-slot wird_benachrichtigt
;+		(comment "--")
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot Benutzername
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Passwort
;+		(comment "--")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot darf_besetzen
		(type INSTANCE)
;+		(allowed-classes Rolle)
		(create-accessor read-write))
	(multislot hat_gestartet
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozess)
		(create-accessor read-write))
	(single-slot Adresse
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot betreut
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Organisationseinheit)
		(create-accessor read-write))
	(single-slot Geltungsbereich
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Global Local)
;+		(value Global)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Nachname
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ist_Mitglied_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Organisationseinheit)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Vorname
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot wird_eingesetzt_in
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Organisationseinheit)
		(create-accessor read-write))
	(multislot besetzt_stellvertretend
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Rolle)
		(create-accessor read-write))
	(single-slot Telefon
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot beherrscht
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Wissensobjekt)
		(create-accessor read-write)))

(defclass Organisationseinheit "--"
	(is-a Organisationselement)
	(role concrete)
	(single-slot Email
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Geltungsbereich
;+		(comment "--")
		(type SYMBOL)
		(allowed-values Global Local)
;+		(value Global)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot gehoert_zu
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Organisationseinheit)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot Hat_Rollen
;+		(comment "Stellt die Verbindung einer Organisationseinheit zu einer Rolle.")
		(type INSTANCE)
;+		(allowed-classes Rolle)
		(create-accessor read-write))
	(single-slot wird_geleitet_von
		(type INSTANCE)
;+		(allowed-classes Person)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot wird_betreut_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Person)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Telefon
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ist_aufgeteilt_in
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Organisationseinheit)
		(create-accessor read-write))
	(multislot hat_Mitglied
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Person)
		(create-accessor read-write))
	(multislot setzt_ein
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Person)
		(create-accessor read-write))
	(single-slot Adresse
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Rechtrolle "--"
	(is-a Organisationselement)
	(role concrete)
	(multislot Rechtrolle_wird_besetzt_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Person)
		(create-accessor read-write))
	(multislot ist_berechtigt_als
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Berechtigung)
		(create-accessor read-write)))

(defclass Berechtigung "--"
	(is-a Organisationselement)
	(role concrete)
	(multislot darf_Dienste_aufrufen
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Webservice)
		(create-accessor read-write))
	(multislot teilt_berechtigung_fuer
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Rechtrolle)
		(create-accessor read-write)))

(defclass APPLICATION-CLASS
	(is-a PROWIM-CLASS)
	(role abstract)
	(single-slot Hyperlink
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Produktfamilie "Unter einer Produktfamilie ist hier ein IT-Produkt für bestimmte Einsatzbereiche zu verstehen. Beispiele: MS-Projekt, Outlook, PM-Tool, NextGen, ProCut, BoFiT etc."
	(is-a APPLICATION-CLASS)
	(role concrete)
	(multislot hat_Anwendungselement
		(type INSTANCE)
;+		(allowed-classes Anwendungselement)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write)))

(defclass Anwendungselement
	(is-a APPLICATION-CLASS)
	(role abstract)
	(single-slot geh%C3%B6rt_zur_Produktfamilie
		(type INSTANCE)
;+		(allowed-classes Produktfamilie)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot ist_Teil_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozess)
		(create-accessor read-write)))

(defclass Zielsystem "In einem Zielsystem wirken (unter anderem) Menschen, Anwendungen und andere technische Einrichtungen zusammen.\nEine oder mehrere verschiedene Anwendungen haben den Zweck ein Zielsystem in der Erbringung seiner Aufgaben zu unterstützen.\nBeispiele: BoFiT unterstützt die Zielsysteme \"Kraftwerkseinsatzplanung\" oder \"Energiehandel\" im Zusammenwirken mit anderen Anwendungen und Menschen (in verschiedenen Rollen).\nDie CNC300-Anwendung unterstützt den Zuschnitt von Bekleidung in Zusammenwirken von Maschinen (\"Cutter\") und Menschen (Bediener\")."
	(is-a Anwendungselement)
	(role concrete)
	(multislot wird_unterst%C3%BCtzt_durch_Anwendungsgruppe
		(type INSTANCE)
;+		(allowed-classes Anwendungsgruppe)
		(create-accessor read-write))
	(multislot l%C3%A4uft_aktuell_mit_Version
		(type INSTANCE)
;+		(allowed-classes Version_der_L%C3%B6sungskomponente)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot ist_Installiert_bei_Kunde
		(type INSTANCE)
;+		(allowed-classes Organisationseinheit)
		(create-accessor read-write)))

(defclass Anwendungsgruppe "Enthält unterschiedliche Anwendungen, die zur Unterstützung des Zielsystems miteinander (über externe Schnittstellen) kooperieren."
	(is-a Anwendungselement)
	(role concrete)
	(multislot umfasst_Anwendung
		(type INSTANCE)
;+		(allowed-classes Anwendung)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot unterst%C3%BCtzt_Zielsystem
		(type INSTANCE)
;+		(allowed-classes Zielsystem)
		(create-accessor read-write)))

(defclass Anwendung "Ein Anwendungsprogramm (kurz Anwendung) ist ein Computerprogramm, das für den Anwender nützliche Leistungsmermale ausführt"
	(is-a Anwendungselement)
	(role concrete)
	(multislot enth%C3%A4lt_Leistungsmerkmal
		(type INSTANCE)
;+		(allowed-classes Feature)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot geh%C3%B6rt_zur_Anwendungsgruppe
		(type INSTANCE)
;+		(allowed-classes Anwendungsgruppe)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot beinhaltet_L%C3%B6sungskomponente
		(type INSTANCE)
;+		(allowed-classes L%C3%B6sungskomponente)
		(create-accessor read-write)))

(defclass Feature "Ist eine für den Benutzer nützliche Eigenschaft (Funktion) in einer Anwendung."
	(is-a Anwendungselement)
	(role concrete)
	(multislot hat_Bedienmethode
		(type INSTANCE)
;+		(allowed-classes Bedienmethode)
		(create-accessor read-write))
	(single-slot geh%C3%B6rt_zum_Leistungsmerkmal
		(type INSTANCE)
;+		(allowed-classes Feature)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot L%C3%B6sungsverfahren
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot wurde_erstellt_von
		(type INSTANCE)
;+		(allowed-classes Person)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot ist_realisiert_in_Version
		(type INSTANCE)
;+		(allowed-classes Version_der_L%C3%B6sungskomponente)
		(create-accessor read-write))
	(multislot wird_eingesetzt_in_Anwendung
		(type INSTANCE)
;+		(allowed-classes Anwendung)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot besteht_aus_Leistungsmerkmal
		(type INSTANCE)
;+		(allowed-classes Feature)
		(create-accessor read-write))
	(multislot hat_L%C3%B6sungskomponente
		(type INSTANCE)
;+		(allowed-classes L%C3%B6sungskomponente)
		(create-accessor read-write)))

(defclass Bedienmethode "Beschreibt die Art und Weise wie ein Bediener mit einem Leistungsmerkmal korrespondiert."
	(is-a Anwendungselement)
	(role concrete)
	(multislot ist_Bedienmethode_f%C3%BCr
		(type INSTANCE)
;+		(allowed-classes Feature)
		(create-accessor read-write)))

(defclass L%C3%B6sungskomponente "Ist eine funktionale Einheit (Software oder Hardware), die einen oder mehrere Lösungsbeiträge zu einem oder meheren Leistungsmermalen erbringt."
	(is-a Anwendungselement)
	(role concrete)
	(single-slot Variante
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot liegt_vor_in_Version
		(type INSTANCE)
;+		(allowed-classes Version_der_L%C3%B6sungskomponente)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot ist_L%C3%B6sungskomponente_f%C3%BCr_Leistungsmerkmal
		(type INSTANCE)
;+		(allowed-classes Feature)
		(create-accessor read-write))
	(multislot gehoert_zu_Anwendung
		(type INSTANCE)
;+		(allowed-classes Anwendung)
		(create-accessor read-write)))

(defclass Version_der_L%C3%B6sungskomponente "Ist eine bestimmte Variante/Ausgabestand einer Lösungskomponente."
	(is-a Anwendungselement)
	(role concrete)
	(multislot unterst%C3%BCtzt_aktuell_Zielsystem
		(type INSTANCE)
;+		(allowed-classes Zielsystem)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot realisiert_Leistungsmerkmal
		(type INSTANCE)
;+		(allowed-classes Feature)
		(create-accessor read-write))
	(multislot Ist_Version_der_L%C3%B6sungskomponente
		(type INSTANCE)
;+		(allowed-classes L%C3%B6sungskomponente)
		(create-accessor read-write)))

(defclass GENERAL-PURPOSE-CLASS
	(is-a USER)
	(role abstract))

(defclass ADMIN-CLASS
	(is-a GENERAL-PURPOSE-CLASS)
	(role abstract))

(defclass ProWimVersion "Hinweis: Die Versionsangabe gibt die aktuelle Version an, die eingecheckt ist.\nV3.0.14 von 10.10.2010\nV3.0.13 von 29.09.2010\nN.3.0.11 vom 12.07.2010"
	(is-a ADMIN-CLASS)
	(role abstract))

(defclass prowim_Class_20000 "ProWim Core Basisversion"
	(is-a ProWimVersion)
	(role abstract))

(defclass prowim_Class_0 "Ontologieänderungen:\n	Änderungen:\n		+ Klassename von Aktivät auf Vorgang geändert (glöscht,neu)\n		+ Attribut (wird_aussgeuebt_in in wird_ausgefuehrt_in geändert (glöscht,neu)\n		+ Attribut Ablageort für Wissensspeicher übernommen\n		+ Vorganstyp auf Aktivitaet erweitert und Domain Aktivität zusätzlich zugeordnet Default entsprechend gesetzt (Prozess : Geschaeftsprozess, Aktivität: Aktivitaet)\n		+ Attribut Vorgangsstatus in Prozess übernommen\n		+ Default für Freigabetyp auf Jeder gesetzt\n		+ Attribut Auto nach Autovorgang geändert (glöscht,neu)\n		+ Attribute RULEBODY usw in RuleBody geändert\n\n	Neu:\n		+ Atribute aus_Template, hat_Template eingeführt (PROZESS)\n		- Attribut wurde_fertig_gesetzt einführt (Tätigkeit)\n		- Attribut Start eingeführt (Prozess, Aktivität)\n		- Relation hat_eingestellt (wurde_eingestellt_durch) Wissensobjekt - Organisationseinheit\n		- Attribut Hyperlinktyp (Wissenverweis) eingeführt\n		- Attribut Ende in Aktivität und Prozess eingeführt\n		- Attribut Verweis eingeführt (Aktivität)\n		- Attribut befasst_sich_fachlich_mit (ist_fachliches_Thema_in) eingeführt (Aktivität, Wissensdomäne)\n		- Relation Regelbestzung eingeführt (Rolle -> Rollenbestzung)\n		- Realation hat_Vorgangsregel zusätzlich eingeführt (Vorgang)\n		- Attribut DMS_Schlagworte eingeführt (Vorgang, Prozess)\n		- Attribut Subprozess eingeführt\n\nNOCH FEHLENDE REGELN\nCL4_getTerminActivities: vorhanden, auskommentiert, Klasse Prozessstarter fehlt noch\nCL5_getObjekattribut (gehoert_zum_Projekt)\n\nTODO:\nPROZESSSTARTER"
	(is-a ProWimVersion)
	(role abstract))

(defclass prowim_Class_10000 "Ontologieänderungen:	Klasse ProWimVersion jetzt mit Subklassen für Versionen (Version x.x.x)\n		Slot Ontologieversion in SYS_ALGERNON-CLASS eingeführt und ausgefüllt\n		Slot hat_Vorgangsregel jetzt für ActivityRules\n\nNeue Regeln: 	CL_getSubprozesse (Workflow)\n		CL_connectSubprozess (Workflow)\n		CL_connectSubInput (Workflow)\n		CL_connectSubOutut (Workflow)\n		CL_connectSubRolle (Workflow)\n		CL4_getCallprozess (ProWimV1Rules)\n		\nNeue Regelgruppe	Subprozesse (ProWimV1Rules)\n\ngeänderte Regeln:	CL_createInstanceRelationsGlobalAndAttribut (Workflow)\n		CL4_getProzesswissenVonAktivitaet\n		CL4_getWissensObjekt\n		CL6_genWissensverweis\n		CL6_genWissensobjekt\n		CL_createProcessRelations\n		CL8_getStartParameter\n		CL4_getProcessStartEnd\nOffene Punkte:\n		CL5_delProzesinstanzObjekt\n		CL5_Prozessinstanz_loeschen\n		PROZESSSTARTER\n\nProbleme:"
	(is-a ProWimVersion)
	(role abstract))

(defclass prowim_Class_30000 "Ontologieänderungen:	Inverse Slot für ONTOLOGIEVERSION  in SYS_ALGERNON-CLASS eingeführt (CHANGE)	\n\nOffene Punkte:	CL5_delProzesinstanzObjekt\n		CL5_Prozessinstanz_loeschen\n		PROZESSTARTER\n\nProbleme:		CL5_delProzesinstanzObjekt\n		CL5_Prozessinstanz_loeschen"
	(is-a ProWimVersion)
	(role abstract))

(defclass prowimcore_Class_0 "Version zum Abschluss der Portierung für ProWim 1.10"
	(is-a ProWimVersion)
	(role abstract))

(defclass prowimcore_Class_10000 "1) Eigenständiger Start eines Subprozesses jetzt möglich.\nABER ACHTUNG: FORMALE PARAMETER INPIUT UND TÄTIGKEIT BLEIBEN NATÜRLCHE LEER.\nSind solche im Subprozess vorhanden müssen die per spezieller Regel z.B. aus Prozessparameter übernommen werden.\nDie Regel muss erkennen können, ob der Prozess als Hauptprozess oder Subprozess gestartet wurde.\n2) Prozessstarter (aus Autovorgang mit StartProcessPlugin) ist jetzt ebenfalls realisiert.\n3) Problem bei Löschen von Prozessen mit Subprozessen gelöst\n4) Regel CL_getProWimVersion eingeführt"
	(is-a ProWimVersion)
	(role abstract))

(defclass prowimcore_Class_2 "1. Neues Konzept Input und Outputparameter in Subprozessen\n2. Nur Template-Wissen im Portal anzeigen\n3. Fehlende Regel CL4_genWissenobjektDomaene ergänzt (am 24.03.2009 zu Fuß in den Mandantensystemen nachgezogen)"
	(is-a ProWimVersion)
	(role abstract))

(defclass prowimcore_Class_20000 "- geänderte Regeln: 	CL4_getActivities"
	(is-a ProWimVersion)
	(role abstract))

(defclass prowimcore_Class_30000 "Ab dieser Version funktioniert das Ontologie Management\n\n- neue Regeln: 	OntologyUpdate (Regelklasse)\n		CL_getPropertiesAsAlgernon\n\n- neue Slots:		ist_Teilursache_von\n		hat_Teilursache\n		HAS-TAXRELATION\n\n- gänderte Klassen:	Ursache (mit neuen Slots ist_Teilursache_von, hat_Teilursache)\n		Organisationeinheit, Wissendomäne,Ursache,Anwendungsdfall (HAS-TAXRELATION zugeordnet)"
	(is-a ProWimVersion)
	(role abstract))

(defclass prowimcore_Class_30001 "Erweiterung zum Risiko Management"
	(is-a ProWimVersion)
	(role abstract))

(defclass ProWim-2-0-0_Class_1 "- Create one new structure"
	(is-a ProWimVersion)
	(role abstract))

(defclass prowimcore_Class_50000 "Merge von 3.0.1 procom und 3.0.1 ebcot\n\nprocom\n- Risikobeiziehung nicht auf Risikoelement sondern auf Klasse Risiko\n- neuer Informationstyp: Auswahlbox_Kontrollflus\n- Änderung Bezeichung Wissensdomäne nach Wissensbereich\n- ÄNDERUNG DER ID DES SLOTS Personen AUF Persons. ACHTUNG BEIM UPDATE\n- ÄNDERUNG DER ID DES SLOTS Organisationeseinheiten auf OrganizationalUnit. ACHTUNG BEIM UPDATE\n- im Slot \"ist_vom_Informationstyp\" fehlte der Wert für Allowed Superclasses (Informationstyp); Fehler ab 2.2.1\n- für das neue Informationstyp-Verfahren: neues Attribut Auswahl-Liste\n- neuer Informationstyp: Auswahlbox_Kontrollfluss\n- Regel getOutControlflowsOfActivity für Informationstyp Auswahlbox_Kontrollfluss\n\nebcot\n- verschiedene neue Regeln"
	(is-a ProWimVersion)
	(role abstract))

(defclass prowimcore_Class_40000
	(is-a ProWimVersion)
	(role abstract))

(defclass prowimcore_Class_60000
	(is-a ProWimVersion)
	(role abstract))

(defclass prowimcore_Class_70002
	(is-a ProWimVersion)
	(role abstract))

(defclass prowimcore_Class_70000
	(is-a ProWimVersion)
	(role abstract))

(defclass prowimcore_Class_80000 "ProxessType class"
	(is-a ProWimVersion)
	(role abstract))

(defclass prowimcore_Class_90000 "--"
	(is-a ProWimVersion)
	(role abstract))

(defclass prowimcore_Class_100000 "--"
	(is-a ProWimVersion)
	(role abstract))

(defclass prowimcore_Class_110000 "--"
	(is-a ProWimVersion)
	(role concrete))

(defclass prowimcore_Class_120001 "--"
	(is-a ProWimVersion)
	(role concrete))

(defclass prowimcore_Class_10002 "Oliver Specht, Mantis Task 3751: Versionisierung der Prozessmodelle/Historisierung"
	(is-a ProWimVersion)
	(role concrete))

(defclass prowimcore_Class_130001 "Version 3.0.12"
	(is-a ProWimVersion)
	(role concrete))

(defclass prowimcore_Class_120000 "Version 3.0.13"
	(is-a ProWimVersion)
	(role concrete))

(defclass prowimcore_Class_130000
	(is-a ProWimVersion)
	(role concrete))

(defclass prowimcore_Class_140000
	(is-a ProWimVersion)
	(role concrete))

(defclass prowimcore_Class_150000
	(is-a ProWimVersion)
	(role concrete))

(defclass KnowledgeBase
	(is-a ADMIN-CLASS)
	(role concrete)
	(single-slot Webservice_URL
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ACREATOR
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot %3ADOCUMENTATION
		(type STRING)
		(create-accessor read-write))
	(single-slot %3ANAME
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ACREATION-TIMESTAMP
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ProWimPortal
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass UNIT-CLASS
	(is-a GENERAL-PURPOSE-CLASS)
	(role abstract))

(defclass prowim_Class_70007
	(is-a UNIT-CLASS)
	(role abstract)
	(single-slot Basis-Einheit
		(type INSTANCE)
;+		(allowed-classes prowim_Class_70007)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Hyperlink
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Beschreibung
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Bezeichnung
;+		(comment "--")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ANAME
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Unit
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass prowim_Class_70001
	(is-a prowim_Class_70007)
	(role concrete)
	(single-slot Basis-Einheit
		(type INSTANCE)
;+		(allowed-classes prowim_Class_70001)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass W%C3%A4hrungseinheiten
	(is-a prowim_Class_70007)
	(role concrete)
	(single-slot Basis-Einheit
		(type INSTANCE)
;+		(allowed-classes W%C3%A4hrungseinheiten)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass prowim_Class_60000
	(is-a prowim_Class_70007)
	(role concrete)
	(single-slot Basis-Einheit
		(type INSTANCE)
;+		(allowed-classes prowim_Class_60000)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass prowim_Class_80001
	(is-a prowim_Class_70007)
	(role concrete)
	(single-slot Basis-Einheit
		(type INSTANCE)
;+		(allowed-classes prowim_Class_80001)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass prowim_Class_90003
	(is-a prowim_Class_70007)
	(role concrete)
	(single-slot Basis-Einheit
		(type INSTANCE)
;+		(allowed-classes prowim_Class_90003)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass prowim_Class_90004
	(is-a prowim_Class_70007)
	(role concrete)
	(single-slot Basis-Einheit
		(type INSTANCE)
;+		(allowed-classes prowim_Class_90004)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass prowim_Class_90007
	(is-a prowim_Class_70007)
	(role concrete)
	(single-slot Basis-Einheit
		(type INSTANCE)
;+		(allowed-classes prowim_Class_90007)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass prowim_Class_110003
	(is-a prowim_Class_70007)
	(role concrete))

(defclass prowim_Class_110006
	(is-a prowim_Class_70007)
	(role concrete))

(defclass prowim_Class_70002
	(is-a UNIT-CLASS)
	(role abstract))

(defclass prowim_Class_60004
	(is-a prowim_Class_70002)
	(role abstract))

(defclass prowim_Class_100003
	(is-a prowim_Class_60004)
	(role concrete))

(defclass prowim_Class_100005
	(is-a prowim_Class_60004)
	(role concrete))

(defclass prowim_Class_80005
	(is-a prowim_Class_70002)
	(role abstract))

(defclass prowim_Class_110000
	(is-a prowim_Class_80005)
	(role concrete))

(defclass prowim_Class_70000
	(is-a prowim_Class_70002)
	(role abstract))

(defclass prowim_Class_110004
	(is-a prowim_Class_70000)
	(role concrete))

(defclass prowim_Class_110005
	(is-a prowim_Class_70000)
	(role concrete))

(defclass prowim_Class_60003
	(is-a prowim_Class_70002)
	(role abstract))

(defclass prowim_Class_80000
	(is-a prowim_Class_60003)
	(role concrete))

(defclass prowim_Class_110002
	(is-a prowim_Class_60003)
	(role concrete))

(defclass prowim_Class_60005
	(is-a prowim_Class_70002)
	(role abstract))

(defclass prowim_Class_110007
	(is-a prowim_Class_60005)
	(role concrete))

(defclass prowim_Class_90000
	(is-a prowim_Class_70002)
	(role abstract))

(defclass prowim_Class_90001
	(is-a prowim_Class_90000)
	(role concrete))

(defclass prowim_Class_120001
	(is-a prowim_Class_70002)
	(role concrete))

(defclass prowim_Class_120002
	(is-a prowim_Class_120001)
	(role concrete))

(defclass LAYOUT-CLASS
	(is-a GENERAL-PURPOSE-CLASS)
	(role abstract)
	(single-slot DENOTATION
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot Beschreibung
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Bezeichnung
;+		(comment "--")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ANAME
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SHAPE-GROUP
	(is-a LAYOUT-CLASS)
	(role abstract))

(defclass prowim_Class_10001
	(is-a SHAPE-GROUP)
	(role abstract))

(defclass prowim_Class_20001
	(is-a SHAPE-GROUP)
	(role abstract))

(defclass prowim_Class_20002
	(is-a SHAPE-GROUP)
	(role abstract))

(defclass prowim_Class_130010
	(is-a SHAPE-GROUP)
	(role abstract))

(defclass prowim_Class_20003
	(is-a SHAPE-GROUP)
	(role abstract))

(defclass SHAPE
	(is-a SHAPE-GROUP)
	(role abstract)
	(single-slot Y-Position
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot is_shape_of
		(type INSTANCE)
;+		(allowed-classes PROWIM-CLASS)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot X-Postion
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass prowim_Class_40014
	(is-a SHAPE)
	(role concrete))

(defclass ProWim_Class_50004
	(is-a SHAPE)
	(role concrete)
	(single-slot is_shape_of
		(type INSTANCE)
;+		(allowed-classes Mittel)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass prowim_Class_1
	(is-a SHAPE)
	(role concrete))

(defclass Shp_Produkt
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_40005
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_40009
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_40010
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_40011
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_40012
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_40006
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_40007
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_40008
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_40013
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_40015
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_40016
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_40017
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_40018
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_40019
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_40020
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_40021
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_40022
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_40023
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_40024
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_40026
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_40025
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_130011
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_130012
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_130013
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_10004
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_20011
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_120000
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_130001
	(is-a SHAPE)
	(role concrete))

(defclass prowim_Class_160003
	(is-a SHAPE)
	(role concrete))

(defclass DESCRIPTION-CLASS
	(is-a GENERAL-PURPOSE-CLASS)
	(role concrete)
	(single-slot English_Description
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot French_Description
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot German_Description
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot French_Denotation
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot English_Denotation
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ANAME
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot German_Denotation
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot DESCRIPTION-OF
		(type INSTANCE)
;+		(allowed-classes SYS_PROWIM-CLASS SYS_MODEL-SLOT PROWIM-CLASS)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass RULE-CLASS
	(is-a GENERAL-PURPOSE-CLASS)
	(role abstract))

(defclass ModelRules
	(is-a RULE-CLASS)
	(role abstract))

(defclass M_Model
	(is-a ModelRules)
	(role abstract))

(defclass GlobalRule
	(is-a M_Model)
	(role abstract))

(defclass G_Rules
	(is-a GlobalRule)
	(role abstract))

(defclass G_R_CreateRules
	(is-a G_Rules)
	(role abstract))

(defclass genProcessInformation "Generiert eine neue ProzessInformation."
	(is-a G_R_CreateRules)
	(role concrete))

(defclass G_R_DeleteRules
	(is-a G_Rules)
	(role abstract))

(defclass G_R_SetRules "Beinhaltet die rules zum setzen der attribute"
	(is-a G_Rules)
	(role abstract))

(defclass setSlotValue "Setzt den Wert eines Slot."
	(is-a G_R_SetRules)
	(role concrete))

(defclass clearSlotValue "Löscht den Inhalt des Slots mit der id = slotID \n Der alte Inhalt muss angegeben werden als parameter."
	(is-a G_R_SetRules)
	(role concrete))

(defclass G_R_GetRules "beinhaltet die rules zum lesen des Wertes eines Attribute"
	(is-a G_Rules)
	(role abstract))

(defclass getSlotValue "Liefert den Wert eines Slots."
	(is-a G_R_GetRules)
	(role concrete))

(defclass getSelectionAttribute "Gets the rule name to be executed to get the posiible selection list for a process information frame\n input   : paramID  the id of the process information frame\n output : rule name"
	(is-a G_R_GetRules)
	(role concrete))

(defclass getSelectionAttributeFromInfoType "Name : getSelectionAttributeFromProcessInformation \nZweck : liefert den Inhalt des Auswahlattribute von der InformationType\nInput : ?paramID der id des process information frame\noutput: ?ruleName der Name der Regel, die ausgeführt werden muss, um die Auswahlmenge zu erzeugen"
	(is-a G_R_GetRules)
	(role concrete))

(defclass getTemplateInformation "Liefert ID, Name und createTime des ProcesElement Instanz."
	(is-a G_R_GetRules)
	(role concrete))

(defclass getTemplateID "Liefert ID des Templates eines ProcesElement Instanz."
	(is-a G_R_GetRules)
	(role concrete))

(defclass getFrameToProcessInformation
	(is-a G_R_GetRules)
	(role concrete))

(defclass getFrameToOutputProduct
	(is-a G_R_GetRules)
	(role concrete))

(defclass isProduct
	(is-a G_R_GetRules)
	(role concrete))

(defclass isFrameFromInformationType "(ist_vom_Informationstyp ?frameID ?h)\n(:BIND ?NAME :NAME)\n(?NAME ?h ?infoType)\n(:TEST (:JAVA (org.prowim.utils.StringUtility.equals ?infoType 'Document')))"
	(is-a G_R_GetRules)
	(role concrete))

(defclass isInfoTypeDocument
	(is-a G_R_GetRules)
	(role concrete))

(defclass getInstanceCount "Liefert die Anzahl der vorhandenen Instanzen eines Objekts."
	(is-a G_R_GetRules)
	(role concrete))

(defclass getProcessElements "Liefert die ProcessElemente Klassen-IDs"
	(is-a G_R_GetRules)
	(role concrete))

(defclass getProcessElementsInstances "Liefert die Elementsinstanzen zu einem Modell"
	(is-a G_R_GetRules)
	(role concrete))

(defclass getName "Liefert die Bezeichnung eines Instanzes."
	(is-a G_R_GetRules)
	(role concrete))

(defclass getParentProcess "Liefert die ID des Process, in dem eines Element definiert ist."
	(is-a G_R_GetRules)
	(role concrete))

(defclass isGlobal "Return, if given element is global."
	(is-a G_R_GetRules)
	(role concrete))

(defclass G_R_ClearRules "G_R_ClearRules"
	(is-a G_Rules)
	(role abstract))

(defclass clearRelationValue "Löscht den Inhalt eines Slot in einer gegebenen Frame"
	(is-a G_R_ClearRules)
	(role concrete))

(defclass G_Time
	(is-a GlobalRule)
	(role abstract))

(defclass G_Units
	(is-a GlobalRule)
	(role abstract))

(defclass G_Connections
	(is-a GlobalRule)
	(role abstract))

(defclass G_Language
	(is-a GlobalRule)
	(role abstract))

(defclass G_Ontology
	(is-a GlobalRule)
	(role abstract))

(defclass getProWimOntologyVersion ";;Name:     getProWimOntologyVersion\n;;Desc:     Get current version of Ontology\n;;Input:     -\n;;Output:  ?version: version of ontology\n;;Typ:       ASK"
	(is-a G_Ontology)
	(role concrete))

(defclass G_PDMSProperties
	(is-a GlobalRule)
	(role abstract))

(defclass G_Gui
	(is-a GlobalRule)
	(role abstract))

(defclass getInformationTypes "Liefert alle InformationType zurück."
	(is-a G_Gui)
	(role concrete))

(defclass getProcessInformationConstraint "Liefert die Werte der slots Minimum, Maximum , Pflichtfeld\n\nBemerkung: Wenn diese Slots in der eingegebenen ProzessInformation keine Werte haben, werden die Werte aus InformationTyp gelesen"
	(is-a G_Gui)
	(role concrete))

(defclass M_Activity
	(is-a ModelRules)
	(role abstract))

(defclass getActivitiesOfProcess ";;Name	getActivitiesOfProcess\n;;Desc:	Get all Activites of a process\n;;Input: 	?processID:      ID of Process\n;;Output:	?activityIdent: Bezeichnung einer Aktivität\n;;                    ?activityID:   ID der Aktivität\n;;Typ:	 ASK\n\n(:BIND ?NAME :NAME)\n(besteht_aus ?processID ?activity)\n(:DIRECT-CLASS ?activity Aktivität)\n(?NAME ?activity ?activityID)\n(Bezeichnung ?activity ?activityIdent)"
	(is-a M_Activity)
	(role concrete))

(defclass getActiveActivities "Liefert die aktive Aktivitäten innheralb eines Prozess."
	(is-a M_Activity)
	(role concrete))

(defclass getMyActiveActivities "Name	getMyActiveActivities (17.06.2009)\nZweck	Liefert alle aktiven Aktivitäten, in denen eine Person Tätigkeiten verrichtet\nInput	?personID: ID  der Person\nOutput	?ID: ID der Aktivität\n              ?BEZT : Bezeichnung des Templates der Aktivität\n              ?pname: Bezeichnung des zugeodneten GP-Templates (auch SUB-Prozess)\n              ?PROZESS: Bezeichnung der zugeordneten GP-Instanz (auch SUB-Prozess)\n              ?prozess: Bezeichnung des zugehörigen Prozessinstanz\n              ?Verweis: Leerstring, falls kein Verweis\n              ?Start Sartzeitpunkt\nTyp	 ASK"
	(is-a M_Activity)
	(role concrete))

(defclass getActivities "Liefert alle Aktivitäten innerhalb eines Prozess."
	(is-a M_Activity)
	(role concrete))

(defclass getEnableType "Liefert den Wert des Freigabetype Slot."
	(is-a M_Activity)
	(role concrete))

(defclass setActivityState "Name	setActivityState siehe CL4_setActivityState (13.09.2006 RT)\nZweck	Setzt den Status einer Aktivität und Sart bzw. Endezeitpunkt ein\n	Bei der Endaktivität wir auch der Prozess fertig gesetzt\nInput	?AKT: ID der Aktivität\n	?STATUS fertig, aktiv oder ruht (String)\nOutput	?DEB	'1': Prozess wurde fertig gesetzt\n		'2': nur Aktivität wurd fertig gesetzt\n		'3': Aktivät wurde aktiv (oder ruht) gesetzt)\n	?ID	ID des Prozesses falls ?DEB  = '1'\nTyp	TELL"
	(is-a M_Activity)
	(role concrete))

(defclass getResponsiblePersonForActivity "Liefert die ID der verantwortlichen Person für eine Aktivität."
	(is-a M_Activity)
	(role concrete))

(defclass sendArbeitsauftrag "Name	sendArbeitsauftrag > CL4_sendArbeitsauftrag (12.09.2006 RT)\nZweck	Sende einen Arbeitsauftrag an die beteiligten einesr Aktivität\nInput	?AKT : ID einer Aktivität\nOutput	?DZ : 'OK' wenn geklappt und 'Error' wenn Fehler\nTyp	ASK\nTest	12.09.06 206 RT"
	(is-a M_Activity)
	(role concrete))

(defclass getActivity "Liefert die Aktivität zurück."
	(is-a M_Activity)
	(role concrete))

(defclass getActivityRoles "Liefert die ID der Rollen, die in einer Aktivität definiert sind."
	(is-a M_Activity)
	(role concrete))

(defclass clearDoneFromRelationOfActivty ";;Name:	CL6_clearFertiggesetzt\n;;Zweck:  Löscht die Relationen wurde_fertig_gesetzt_von\n;;Input:   ?V: ID Vorgang\n;;Output: -\n;;Typ:      ASK"
	(is-a M_Activity)
	(role concrete))

(defclass getSubProcessOfActivity "Entnommen von CL4_getSubprozessA\nGet the sub procces, which this avtivity calls"
	(is-a M_Activity)
	(role concrete))

(defclass setSubProcessOfActivity "Set for a actitvity, which is defined as sub process starter, the subprocess ID. Sets hat_submodell"
	(is-a M_Activity)
	(role concrete))

(defclass setActitvityAsAuto "Sets an actitvity as auto actitvtiy"
	(is-a M_Activity)
	(role concrete))

(defclass isEndAcivity ";;Liefert die ID des Prozess, wo die Aktivität definiert ist."
	(is-a M_Activity)
	(role concrete))

(defclass finishRestActiveActivities ";; Setzt den Status von Aktivitäten, die noch aktiv sind auf 'ruht', nachdem der Workflow beendet ist."
	(is-a M_Activity)
	(role concrete))

(defclass getActivtiyMeans "Returns all mean, which are conected with given activity"
	(is-a M_Activity)
	(role concrete))

(defclass M_Workflow
	(is-a ModelRules)
	(role abstract))

(defclass getOutControlflowsOfActivity "Liefert die ausgehenden Kontollfüsse einer Aktivität."
	(is-a M_Workflow)
	(role concrete))

(defclass getOutControlflowsOfActivityEPK "Liefert die ausgehenden Kontrollfüsse einer Entschiedungsraute, die einer Aktivität folgt"
	(is-a M_Workflow)
	(role concrete))

(defclass getOutControlflowsOfProduct "Liefert die ausgehenden Kontollfüsse einer Aktivität.zu einem Output-Produkt\nAchtung: das Produkt darf nur von einer einzigen Aktivität generiert werden"
	(is-a M_Workflow)
	(role concrete))

(defclass createInstanceOfGlobalRelationsAndAttributs "Create a instance of global relations and attributes for given attributes.\nThe input parameter is the id of process instance"
	(is-a M_Workflow)
	(role concrete))

(defclass createInstanceOfLocalRelations "Create instances of local relations for given process instance id\n\n;;TODO: Anschlussslots nur für Verbinder setzen (sonst doppelt) Übernommen von dem alten Regeln. Nachfragen, ob das noch gilt"
	(is-a M_Workflow)
	(role concrete))

(defclass createProcessRelations "Create the existing relations for the given process"
	(is-a M_Workflow)
	(role concrete))

(defclass setProcessStarter "Sets the starter of given process"
	(is-a M_Workflow)
	(role concrete))

(defclass activateStartActivity ";;Name	activateStartActivity\n;;Zweck	Startaktivität einer Prozessinstanz ermitteln und activ setzen\n;;Input	?processInsID: ID der Prozessinstanz\n;;Output	?ID: ID der Startaktivität\n;;Typ	TELL\n;;Test	12.09.06 RT"
	(is-a M_Workflow)
	(role concrete))

(defclass createProcessInstance "Version 3.0.8: Set 'ist_vom_Prozesstyp', Maziar Khodaei"
	(is-a M_Workflow)
	(role concrete))

(defclass createInstanceElements "Version 3.0.11\n->Gelöscht\n(Geltungsbereich ?x ?GB)        \n->Hinzugefügt\n(?NAME ?class ?classname)\n(:NEQ ?classname 'Mittel')\n(:NEQ ?classname 'Ablage')"
	(is-a M_Workflow)
	(role concrete))

(defclass getActiveAutoActivities ";;Name	CL4_getActiveAutoActivities (07.09.2006 RT)\n;;Zweck	liefert alle aktiven Auto Aktivitäten aller instanziierten Prozesse\n;;Input	Kein\n;;Output	?ID	Instanz der Aktivität\n;;	?BEZT	Bezeichnung der Aktivität aus Template\n;;	?Verweis	Aufzurufende Methode/Klasse, Leerstring, falls kein Verweis\n;;	?Start	Sartzeitpunkt\n;;	?Ende	Endezeitpunk\n;;Typ	ASK\n;;Test	07.09.06 RT"
	(is-a M_Workflow)
	(role concrete))

(defclass setJobFinish "abgeleitet von     CL4_setTaetigkeitFertig\n;;Zweck:   Person registrieren, die eine Aktivität fertig gesetzt hat             \n;;Input:    ?AKT: ID der Aktivität\n;;              ?Person: ID der Person die Fertig gesetzt hat\n;;Output:  -\n;;Typ:      TELL"
	(is-a M_Workflow)
	(role concrete))

(defclass getPersonsFinishedActivity "Entnommen von: 	CL4_getPersonenVonAktivitaet\n;;Zweck:	ermittelt Anzahl der Personen die Aktivität fertig gesetzt haben\n;;Input:	?AKT \n;;Output	-"
	(is-a M_Workflow)
	(role concrete))

(defclass getDoneRule "Entnommenvon:   CL6_getFertigRegel\n;;Zweck:  ermittle Aktivierungsregel eines Vorgangs bzw Prozesses\n;;Input:   ?VG: ID Vorgang\n;;Output: ?AR: ID der Aktivierungsregel\n;;Typ:      ASK"
	(is-a M_Workflow)
	(role concrete))

(defclass getActivateRule "Entnommen von:   CL4_getAKRegel\n;;Zweck:  ermittle Aktivierungsregel eines Vorgangs\n;;Input:   ?VG: ID Vorgang\n;;Output: ?AR: ID der Aktivierungsregel\n;;Typ:      ASK"
	(is-a M_Workflow)
	(role concrete))

(defclass defaultActivateRule "Entnommen von    CL4_RGA_Standardaktivierung\n;;Zweck:  liefert alle Ausgangskontrollflüsse zu aktivieren\n;;Input:    ?V: Vorgang\n;;Output:  ?KF: zu aktivierende Kontrollflüsse\n;;Typ:       ASK"
	(is-a M_Workflow)
	(role concrete))

(defclass setControlFlowActive ";;Name:	CL4_setKFaktiv\n;;Zweck:	Kontrollfluss aktivieren\n;;Input: 	?KF ID des Kontrollflusses\n;;Output:	-\n;;Typ:	TELL"
	(is-a M_Workflow)
	(role concrete))

(defclass getConnectionRule "Entnommen von  CL4_getKFRegel\n;;Zweck:   ermittle Verknüpfungsregel eines Kontrollflusses\n;;Input:   ?KF: ID Kontrollfluss\n;;Output:  ?VR: ID der Verknüpfungsregel\n;;Typ:     ASK"
	(is-a M_Workflow)
	(role concrete))

(defclass setControlFlowInactive "Entnommen von CL4_setKFinaktiv\n\nSets the given contrlowflow inactive"
	(is-a M_Workflow)
	(role concrete))

(defclass getSubProcesses "Gets the id of sub porcess and the activity, which starts this process."
	(is-a M_Workflow)
	(role concrete))

(defclass setHasSubModelAtrr "Set the Attibute 'hat_Submodel' for created instance"
	(is-a M_Workflow)
	(role concrete))

(defclass setSubProcessInputs "Entnommen von CL_connectSub\nSets inputs of sup porcess instance"
	(is-a M_Workflow)
	(role concrete))

(defclass setSubProcessOutputs "Entnommen von CL_connectSubOutput\nSet the outputs of subprocess in instances"
	(is-a M_Workflow)
	(role concrete))

(defclass setSubProcessRoles "Entnommen von CL_connectSubRolle\nSets the roles of sub process"
	(is-a M_Workflow)
	(role concrete))

(defclass setSubProcessElements "Entnommen von CL_connectSubelements\nSet all Elements of sub process as a part of main process"
	(is-a M_Workflow)
	(role concrete))

(defclass getAssignmentRoles "Entnommen von 	CL4_Prozessrollen (11.06.2006 RT)\n;;Zweck	Liefert alle instanzierten Rollen ein Prozessinstanz mit Rollenbesetzungsregeln\n;;Input	?INS Name der Prozessinstanz\n;;Output	?ID ID der Rolle\n;;	?BEZ Bezeichnung der Rolle\n;;	?Bezeichnung der Rolle\n;;	?Regelbesetzung \n;;Typ	ASK\n;;Test	-"
	(is-a M_Workflow)
	(role concrete))

(defclass getInformationTypeOfFollowingDecision "This rule check first the following controlflows of given activity. Than checks the folowing instanceses of contrloflow. If this is a 'Entscheidung', than get the proccess information iof this and give it back."
	(is-a M_Workflow)
	(role concrete))

(defclass M_Knowledge
	(is-a ModelRules)
	(role abstract))

(defclass getKnowledgeObjectsDomains "Name	getKnowledgeobjectsDomains\nZweck	Liefert die Subdomaenen einer Vaterdomäne\nInput	?DOM: ID der Domäne\nOutput	?BEZ: Bezeichnung Wissensobjekt\n	?ID: ID Wissensobjekt\n	?ANGELEGT: Anlage-Zeitstempel des Wissensobjektes\nTyp	ASK"
	(is-a M_Knowledge)
	(role concrete))

(defclass getInstanceKnowledgeObjects "Name	getKnowledgeObjects\nZweck	Liefert Wissensobjekt zum vorgegebenen Prozesselement\nInput	?INS: ID eines Prozesselements\nOutput:	?wissensobjekt: Bezeichnung des Wissensobjekts\n	?wissensobjektID: ID des Wissensobjekts\n	?createTime: Anlagedatum des Wissensobjekts; Leerstring, falls nichts eingetragen\nTyp:	ASK"
	(is-a M_Knowledge)
	(role concrete))

(defclass genKnowledgeObjectWithElement "Name	genKnowledgeObject   ==  CL6_genWissensobjekt (06.02.2007 RT)\nZweck	Generiert Wissensobjekt\nInput	?name: Bezeichnung des Wissensobjektes\n	?personID: ID der Person, die Wissensobjekt einstellt\n	?processElementID: ID eines Prozesselements, welches das Wissensobjekt benötigt\nOutput	?knowledgeObjectID: ID des Wissensobjekts\nTyp	ASK\nTest	06.02.07 RT"
	(is-a M_Knowledge)
	(role concrete))

(defclass getKnowledgeObject
	(is-a M_Knowledge)
	(role concrete))

(defclass getKnowledgeRepositories
	(is-a M_Knowledge)
	(role concrete))

(defclass getKnowledgeObjectDominators
	(is-a M_Knowledge)
	(role concrete))

(defclass genKnowledgeLink "Name	genKnowledgeLink <- CL6_genWissensverweis (11.01.2007 RT)\nZweck	Generiert Wissensverweis\nInput	?name Bezeichnung des Wissensverweises\n	?knowledgeObjectID: ID des Wissensobjekt\n	?ws: ID Wissensspeicher\n	?link: Wissenslink (String)\n	?linkType (Web,Wiki,DMS,Filesystem,Buch,Papierdokument,Datenbank)\nOutput	?knowledgeLinkID: ID des Wissensverweises\nTyp	ASK\nTest	06.09.06 RT"
	(is-a M_Knowledge)
	(role concrete))

(defclass getKnowledgeLink
	(is-a M_Knowledge)
	(role concrete))

(defclass getKnowledgeDomain
	(is-a M_Knowledge)
	(role concrete))

(defclass getBusinessDomains
	(is-a M_Knowledge)
	(role concrete))

(defclass getKnowledgeObjectLinks
	(is-a M_Knowledge)
	(role concrete))

(defclass getAllKnowledgeObjects
	(is-a M_Knowledge)
	(role concrete))

(defclass getKnowledgeObjectCreatorNumber "Liefert die Anzahl der Personen, die das Wissensobject eingestellt haben.\n\nBemerkung: In der Regel ist diese Anzahl immer <= 1. Die Regel wird benutzt, um die DataException zu vermeiden bei Algernon."
	(is-a M_Knowledge)
	(role concrete))

(defclass getKnowledgeObjectCreator "Liefert die ID der Person, die das Wissensobjekt eingestellt hat."
	(is-a M_Knowledge)
	(role concrete))

(defclass searchLinks "Sucht nach den Wissensobjekte, die einen Wissensverweis haben, in denen das Schlagwort  in der Bezeichnung vorkommt."
	(is-a M_Knowledge)
	(role concrete))

(defclass getCountOfKnowledgeLinks
	(is-a M_Knowledge)
	(role concrete))

(defclass searchKnowledgeObjects "Sucht in den Namen des Wissensobjekte"
	(is-a M_Knowledge)
	(role concrete))

(defclass getKnowledgeLinkForKnowledgeObject "Liefert die ID der links zu einem Wissensobjekt"
	(is-a M_Knowledge)
	(role concrete))

(defclass searchKnowledgeDomains "Sucht in den Namen des Wissensobjekte"
	(is-a M_Knowledge)
	(role concrete))

(defclass genKnowledgeObject "Name	genKnowledgeObject   ==  CL6_genWissensobjekt (06.02.2007 RT)\nZweck	Generiert Wissensobjekt\nInput	?name: Bezeichnung des Wissensobjektes\n	?personID: ID der Person, die Wissensobjekt einstellt\n	?processElementID: ID eines Prozesselements, welches das Wissensobjekt benötigt\nOutput	?knowledgeObjectID: ID des Wissensobjekts\nTyp	ASK\nTest	06.02.07 RT"
	(is-a M_Knowledge)
	(role concrete))

(defclass getKnowledgeObjectsOfProcess "Returns all knowledge objeckts of given process id"
	(is-a M_Knowledge)
	(role concrete))

(defclass createProcessElementsForCloning "Creates instances of ProcessElements, which are included in given process. This method is to used for cloning a process and not for create a workflow.\nThe different to createInstanceElements is, that this method dose not create a instance of global ProcessElement like Role, Means and ResultsMemory"
	(is-a M_Knowledge)
	(role concrete))

(defclass setRelationOfGlobalElementsToProcess "Set relation between global elements and the given process"
	(is-a M_Knowledge)
	(role concrete))

(defclass getRelationsOfKnowledgeObject "Returns all element, which the given knowledge object has a relation to it"
	(is-a M_Knowledge)
	(role concrete))

(defclass searchKnowledgeObjectKeyWords "Sucht nach Schlagwörtern in ein Wissensobjekt."
	(is-a M_Knowledge)
	(role concrete))

(defclass getKeyWordsOfKnowledgeObject "Returns key words of given knowledge object"
	(is-a M_Knowledge)
	(role concrete))

(defclass M_Role
	(is-a ModelRules)
	(role abstract))

(defclass getRoles "Name:    getRoles\nZweck:   Liefert alle instanzspezifischen Rollen einer  Prozessinstanz mit den zugeordneten Personen\nInput:    ?INS: ID der ProzessID\nOutput: ?BEZ: Bezeichnung der Rolle\n             ?BEZP: Bezeichnung der Person\n             ?ID: ID der Rolle\n             ?IDP: ID der Person\n             ?ident: Bezeichnung des Templates der Rolle\n             ?TYP: "
	(is-a M_Role)
	(role concrete))

(defclass getAssignedPersons "Name	getAssignedPersons\nZweck	Liefert alle Personen, die die Rolle mit der gegebenen id besetzen\nInput	?roleID: ID  der Role\nOutput	?person: ID der Person\nTyp	 ASK"
	(is-a M_Role)
	(role concrete))

(defclass getRoleAssignementRule
	(is-a M_Role)
	(role concrete))

(defclass getRole "Liefert eine Rolle zurück."
	(is-a M_Role)
	(role concrete))

(defclass getPreSelection "Liefert die IDs der Personen die eine Rolle besetzen dürfen."
	(is-a M_Role)
	(role concrete))

(defclass isRoleDefinedInOrganization "Checks ob die Rolle bereits in der OE definiert ist."
	(is-a M_Role)
	(role concrete))

(defclass addRoleToOrganization "Fügt eine Rolle zu einer Organisation hinzu."
	(is-a M_Role)
	(role concrete))

(defclass getRolesToOrganization "Liefert die definierten Rollen innerhalb einer Organisation."
	(is-a M_Role)
	(role concrete))

(defclass getGlobalRoles "Returns all global roles"
	(is-a M_Role)
	(role concrete))

(defclass M_SubProcess
	(is-a ModelRules)
	(role abstract))

(defclass getSubProcessCaller "Entnommen von	CL4_GetCallprozess\nGet the activitey, which calls the sup process"
	(is-a M_SubProcess)
	(role concrete))

(defclass getAllExistSubProcesses "Returns all sub processes."
	(is-a M_SubProcess)
	(role concrete))

(defclass setSubProcessFlagForActivity "Set the activity as sub process activty"
	(is-a M_SubProcess)
	(role concrete))

(defclass setSubProcessFlagForProcess "Set a process as sub process"
	(is-a M_SubProcess)
	(role concrete))

(defclass isSubProcess "Check if given process is a sub process"
	(is-a M_SubProcess)
	(role concrete))

(defclass M_Organisation "Beinhaltet Regel zu Organisationselement"
	(is-a ModelRules)
	(role abstract))

(defclass getUsers "Name:   getUsers\nZweck:   Liefert Infos zu  Person(en)\nInput:   ?BEZ : Bezeichnung der Person (ohne Input werden alle Personen geliefert)\nOutput:  ?ID: ID der Person\n             ?BEZ: Bezeichnung der Person\n             ?Nachname\n             ?Vorname\n             ?Adresse\n             ?Telefon\n             ?Beschreibung\n             ?Email\n	?ist_Mitglied_von\n    Typ:     ASK"
	(is-a M_Organisation)
	(role concrete))

(defclass getOrganisations "Name:    getOrganisations\nZweck:   Liefert alle Organisationseinheiten\nInput:      -\nOutput:  ?org: instanzen der class Organisationseinheit\n              ?ID: der id der organisationeinheit instance.\n              ?createTime: datum, wann die Organisation gegründet wurde.\n              ?BEZ: die Bezeichnung der Organisationseinheit.\n              ?address\n              ?telefon\n              ?description\n    Typ:     ASK"
	(is-a M_Organisation)
	(role concrete))

(defclass getUser "Name:     getUser\nZweck:   Liefert info zu  einer Person\nInput:   ?p : ID der Person\nOutput	?BEZ: Bezeichnung der Person\n             ?lastName\n             ?firstName\n             ?address\n             ?telefon\n             ?description\n             ?Email\n             ?BEZ\n             ?password\n    Typ:     ASK"
	(is-a M_Organisation)
	(role concrete))

(defclass getOrganisation "Name	getOrganisation\nZweck	Liefert die Organisation mit der gegebenen id\nInput	?orgID: ID  der Organisation\nOutput	?person: ID der Person\n                   ?address: Addresse der Organisation\n                   ?Email: die Email Addresse der Organisation\n                   ?description: die Beschreibung der Organistion\n                   ?telefon: die Telefonnummer der Organisation\n                   ?BEZ: die Bezeichnung der Organisation\nTyp	 ASK"
	(is-a M_Organisation)
	(role concrete))

(defclass getMembers "Liefert die ID der Mitglieder einer Organisationseinheit"
	(is-a M_Organisation)
	(role concrete))

(defclass getTopOrganizations "Name:    getToplevelOrganizations\nZweck:   Liefert alle Organisationseinheiten auf dem ersten Level\nInput:      -\nOutput:  ?org: instanzen der class Organisationseinheit\n              ?ID: der id der organisationeinheit instance.\n              ?createTime: datum, wann die Organisation gegründet wurde.\n              ?BEZ: die Bezeichnung der Organisationseinheit.\n              ?address\n              ?telefon\n              ?description\n    Typ:     ASK"
	(is-a M_Organisation)
	(role concrete))

(defclass getSubOrganizations "Name:    getSubOrganizations\nZweck:   Liefert alle Organisationseinheiten auf dem ersten Level\nInput:      orgID ID des Parentorganisation\nOutput:  ?org: instanzen der class Organisationseinheit\n              ?ID: der id der organisationeinheit instance.\n              ?createTime: datum, wann die Organisation gegründet wurde.\n              ?BEZ: die Bezeichnung der Organisationseinheit.\n              ?address\n              ?telefon\n              ?description\n    Typ:     ASK"
	(is-a M_Organisation)
	(role concrete))

(defclass M_ControlFlow "M_ControlFlow"
	(is-a ModelRules)
	(role abstract))

(defclass getControlFlow "Liefert den KontrollFluss."
	(is-a M_ControlFlow)
	(role concrete))

(defclass getFollowerOfControlFlow "Get all followers of given controlflow. These can be 'Aktivität', 'Entscheidung' and 'Verküpfung'."
	(is-a M_ControlFlow)
	(role concrete))

(defclass M_Product "Beinhaltet Regel zum Product-Bearbeiten"
	(is-a ModelRules)
	(role abstract))

(defclass getProductProcessInformations "Liefert die ProcessInformation instanzen, die für ein Product definiert sind."
	(is-a M_Product)
	(role concrete))

(defclass getProcessInformation "Liefert die Daten eines ProcessInformation-Instanz"
	(is-a M_Product)
	(role concrete))

(defclass getActivityInputProducts "Lifert die Inout Produkte zu einer Aktivität."
	(is-a M_Product)
	(role concrete))

(defclass getActivityOutputProducts "Lifert die output Produkte zu einer Aktivität."
	(is-a M_Product)
	(role concrete))

(defclass getProduct "Liefert ein product zurück."
	(is-a M_Product)
	(role concrete))

(defclass getProductWay "Liefert ein ProduktWeg zurück."
	(is-a M_Product)
	(role concrete))

(defclass getPossibleSelection "Liefert die Auswahlliste einer Prozessinformation vom typ Multilist"
	(is-a M_Product)
	(role concrete))

(defclass M_Process
	(is-a ModelRules)
	(role abstract))

(defclass getAllTypesOfProcess ";;Name:     getAllTypesOfProcess\n;;Desc:   Get all ProcessType, which are possible for a process\n;;Input:     -\n;;Output:  ?processTypes: All process types\n;;Typ:       ASK\n\n(:SLOT-VALUE-TYPE Vorgangsart ?processTypes)\n(:NEQ ?processTypes 'Symbol')"
	(is-a M_Process)
	(role concrete))

(defclass getAllProcesses ";;Name	getAllProcesses\nVersion 3.0.5: Vorgangsart ist nach ist_vom_Prozesstyp geändert worden"
	(is-a M_Process)
	(role concrete))

(defclass getRunningProcesses "Zweck	liefert die aktiven Prozesse\nInput	-\nOutput	?ID ID der Prozessinstanz\n	?v Bezeichnung der Prozessinstanz\n	?Start Sartzeitpunkt\n	?Ende Endezeitpunkt\n	?Starter: ID des Starters\n	?SBEZ: Kürzel des Starters\nTyp:	ASK\nName	getRunningProcesses"
	(is-a M_Process)
	(role concrete))

(defclass getProcessInformations "getProcessInformations\n input :   processID\n output:   ProcessInformation list"
	(is-a M_Process)
	(role concrete))

(defclass getFinishedProcesses "Name	getFinishedProcesses\nZweck	liefert die abgeschlossenen Prozesse\nInput	-\nOutput:	ID ID der Prozessinstanz\n	?v Bezeichnung der Prozessinstanz\n	?Start Sartzeitpunkt\n	?Ende Endezeitpunkt\n	?Starter\nTyp	ASK"
	(is-a M_Process)
	(role concrete))

(defclass getStartableProcesses "Name	getStartableProcesses\nZweck	startbare prozesse ermitteln\nInput	?personID: ID der Person\nOutput	Liste der startbare prozesse, die der user starten darf\nTyp	ASK\n\nVersion 3.0.5: Vorgangsart ist nach ist_vom_Prozesstyp geändert worden"
	(is-a M_Process)
	(role concrete))

(defclass getProcessParameters "Zweck	liefert die definierten Parameter zu einem Prozess oder Aktivität-Instanz\nInput	?PINS ID des Prozess- bzw Aktivität-Instanz \nOutput	?infoType liste der InformationTyp\n	?parameterName name des Parameters\n	?infoTypeName name des informationtype\n	?content Wert des parameters falls es existiert.\nTyp:	ASK\nName	getProcessParameters"
	(is-a M_Process)
	(role concrete))

(defclass getProcessTemplateParameters "Zweck	liefert die definierten Parameter zu einem Prozess-Template\nInput	?PTEM id des Prozess-Template\nOutput	?infoType liste der InformationTyp\n	?parameterName name des Parameters\n	?infoTypeName name des informationtype\n	?content Wert des parameters falls es existiert.\n\nTyp:	ASK\nName	getProcessTemplateParameters"
	(is-a M_Process)
	(role concrete))

(defclass getParameterSelectList ";; ProzessInformation haben eine Auswahlliste. Sie beinhaltet die Elemente, die ausgewählt werden können.\n;; Dieser Regel liefert die Auswahl-Liste zu einer ProzessInformation."
	(is-a M_Process)
	(role concrete))

(defclass getParameterValue "Liefert den Wert eines ProzessInformation Instanz."
	(is-a M_Process)
	(role concrete))

(defclass getParameterScalarValue "Liefert den(ie) Wert(e) einer ProzessInformation, ihr InformationsType NICHT vom Type Inhalt_Relation ist.;"
	(is-a M_Process)
	(role concrete))

(defclass getProcessBrowserChartPath
	(is-a M_Process)
	(role concrete))

(defclass getNotEditableProcessInformations "Liefert die ID des nicht editierbare ProcessInformation."
	(is-a M_Process)
	(role concrete))

(defclass getStartActivity
	(is-a M_Process)
	(role concrete))

(defclass isProcessTemplate "Checks if an ID is of a Process Template."
	(is-a M_Process)
	(role concrete))

(defclass getProcessType "Name:       getProcessType\nDesc:        Get the prozess type of one process"
	(is-a M_Process)
	(role concrete))

(defclass setProcessType "setzt Prozeestype"
	(is-a M_Process)
	(role concrete))

(defclass createProcessType
	(is-a M_Process)
	(role concrete))

(defclass getAllProcessTypes "Liefer alle definierten Prozesstypen"
	(is-a M_Process)
	(role concrete))

(defclass getSubprocesses "Liefert die Subprozesse zu einem Prozess."
	(is-a M_Process)
	(role concrete))

(defclass setProcessTypeParent "Setzt ein ProcessType als Untercategorie anderen Typ."
	(is-a M_Process)
	(role concrete))

(defclass getSubProcessTypes "Version 3.0.11\nAktualisiert\n(:OR ((Beschreibung ?t ?processTypeDesc))\n((:FAIL (Beschreibung ?t ?processTypeDescX))"
	(is-a M_Process)
	(role concrete))

(defclass getTypeProcesses "Liefert die Prozesse, die unter dem ProcessType untergebracht sind."
	(is-a M_Process)
	(role concrete))

(defclass getAllProcessTypesWithoutSubs "Version 3.0.11\nDie Beschreibung ktualisiert\n(:OR ((Beschreibung ?t ?processTypeDesc))\n((:FAIL (Beschreibung ?t ?processTypeDescX))\n(:BIND ?processTypeDesc '')))"
	(is-a M_Process)
	(role concrete))

(defclass deleteInstances
	(is-a M_Process)
	(role concrete))

(defclass getStartRole "Getting the startRole from the given process."
	(is-a M_Process)
	(role concrete))

(defclass getElementsOfProcess "Returns all elements, which a process included"
	(is-a M_Process)
	(role concrete))

(defclass getEnabledProcessesOfType
	(is-a M_Process)
	(role concrete))

(defclass getProcess "Returns the process with given id."
	(is-a M_Process)
	(role concrete))

(defclass searchProcesses "Gibt allle prozesse zurück, die das Suchwort in der Nme beinhalten"
	(is-a M_Process)
	(role concrete))

(defclass isProcessLandscape "Check if process is define as land scape"
	(is-a M_Process)
	(role concrete))

(defclass M_Editor
	(is-a ModelRules)
	(role abstract))

(defclass testScope "testet den Geltungsbereich eines Objekts."
	(is-a M_Editor)
	(role concrete))

(defclass getTypeID "Succeedded wenn das eingegebenen object ist vom Typ  'SYS_COMPONENT-CLASS' oder 'SYS_CONNECTION-CLASS'"
	(is-a M_Editor)
	(role concrete))

(defclass isFrame "Testet ob ein ID Frame ist."
	(is-a M_Editor)
	(role concrete))

(defclass addInstance "Erzeugt einen neuen Instanz einer Klasse."
	(is-a M_Editor)
	(role concrete))

(defclass getInstanceProperties "Liefert die Eigenschaften eines Instanzes."
	(is-a M_Editor)
	(role concrete))

(defclass getDirectClassOfInstance "Liefert die Super klasse zu einer gegebenen Instance ID."
	(is-a M_Editor)
	(role concrete))

(defclass setElementToModel "Setzt ein Element zu einem Modell"
	(is-a M_Editor)
	(role concrete))

(defclass getProcessModels "Liefert die Liste aller Prozesse.\nVorgangsart durch ist_vom_Prozesstyp erstz worden"
	(is-a M_Editor)
	(role concrete))

(defclass setScope
	(is-a M_Editor)
	(role concrete))

(defclass ConnectRules
	(is-a M_Editor)
	(role abstract))

(defclass activateControlFlow "Aktiviert einen Kontrolfluss."
	(is-a ConnectRules)
	(role concrete))

(defclass setActivityActive
	(is-a ConnectRules)
	(role concrete))

(defclass connectActivityRole
	(is-a ConnectRules)
	(role concrete))

(defclass getRelations "Liefert alle mögliche Relationen mit VISEBLE = :TRUE zwischen 2 Objekte."
	(is-a ConnectRules)
	(role concrete))

(defclass setRelation2Objects
	(is-a ConnectRules)
	(role concrete))

(defclass setProductOut "Aktivität generiert ein Produkt mit der ID = productID."
	(is-a ConnectRules)
	(role concrete))

(defclass setProductIn "Die Aktivität mit der ID = activityID wird das Produkt mit der ID = ProductID konsumieren."
	(is-a ConnectRules)
	(role concrete))

(defclass connectActivityMittel
	(is-a ConnectRules)
	(role concrete))

(defclass isInformationType
	(is-a M_Editor)
	(role concrete))

(defclass getControlFlowsCount
	(is-a M_Editor)
	(role concrete))

(defclass getCombinationRules "Get all defined CombinationRule"
	(is-a M_Editor)
	(role concrete))

(defclass getConstraintRule "Liefert die Constraint-Regel zurück."
	(is-a M_Editor)
	(role concrete))

(defclass getInstanceRelations
	(is-a M_Editor)
	(role concrete))

(defclass getInstanceDefinedRelations "Liefert die gestzten Beziehungen zu einem Objekt"
	(is-a M_Editor)
	(role concrete))

(defclass getActivationRules "Return all rules, which are defined in ActivationRules class"
	(is-a M_Editor)
	(role concrete))

(defclass getDescription "Liefert den Wert des Attributes Beschreibung."
	(is-a G_R_GetRules M_Editor)
	(role concrete))

(defclass deleteElementFromModel "Löscht die Verbindung zwischen ein Element und seine Model (prozess)"
	(is-a M_Editor)
	(role concrete))

(defclass setProcessLandscapeFlag "Set process as a landscape"
	(is-a M_Editor)
	(role concrete))

(defclass M_Mittel "M_Mittel"
	(is-a ModelRules)
	(role concrete))

(defclass getMittel "Liefert ein Mittel zurück."
	(is-a M_Mittel)
	(role concrete))

(defclass getGlobalMeans "Returns all global mean"
	(is-a M_Mittel)
	(role concrete))

(defclass M_processinformation "M_processinformation"
	(is-a ModelRules)
	(role abstract))

(defclass getProcessinformation "Liefert die Entitiy processinformation"
	(is-a M_processinformation)
	(role concrete))

(defclass getInformationTypeID
	(is-a M_processinformation)
	(role concrete))

(defclass getInformationType
	(is-a M_processinformation)
	(role concrete))

(defclass M_Ablage "M_Ablage"
	(is-a ModelRules)
	(role abstract))

(defclass getResultsMemory "Liefert eine Ablage zurück."
	(is-a M_Ablage)
	(role concrete))

(defclass getGlobalResultsMemory "Returns all global meamories"
	(is-a M_Ablage)
	(role concrete))

(defclass M_Work "M_Work : Work is Tätigkeit"
	(is-a ModelRules)
	(role abstract))

(defclass getWork "Liefert eine Tätigkeit zurück."
	(is-a M_Work)
	(role concrete))

(defclass M_Admin "M_Admin"
	(is-a ModelRules)
	(role abstract))

(defclass getVersion
	(is-a M_Admin)
	(role concrete))

(defclass searchPersons "Sucht nach Personen mit Eingabe eins Schlüsselworts."
	(is-a M_Admin)
	(role concrete))

(defclass isPasswordCorrect "Überprüft, ob das Benutzerpasswort richtig ist."
	(is-a M_Admin)
	(role concrete))

(defclass changePassword "Setzt das Passwort für einen Benutzer."
	(is-a M_Admin)
	(role concrete))

(defclass checkUserPassword "Liefert die BenutzerID mit dem einegegeben Name."
	(is-a M_Admin)
	(role concrete))

(defclass getUserWithName "Liefert die UserID für die Person mit dem Benutzername = name."
	(is-a M_Admin)
	(role concrete))

(defclass addWebservice
	(is-a M_Admin)
	(role concrete))

(defclass M_Update "M_Update"
	(is-a ModelRules)
	(role abstract))

(defclass getAllVersions "Liefet alle Versionen."
	(is-a M_Update)
	(role concrete))

(defclass getUpdateFrames "Liefert die frames, die hinzugefügt wurden oder geändert wurden."
	(is-a M_Update)
	(role concrete))

(defclass getUpdateFrameProperties "Liefert die Attribute einer Frame."
	(is-a M_Update)
	(role concrete))

(defclass isClass "Checks, on ein Frame ein Class ist."
	(is-a M_Update)
	(role concrete))

(defclass isSlot "Checks, on ein Frame ein Slot ist."
	(is-a M_Update)
	(role concrete))

(defclass isInstance "Checks, ob ein frame ein Instanz ist."
	(is-a M_Update)
	(role concrete))

(defclass getVersionProperties "Liefert die Eigenschaften einer version."
	(is-a M_Update)
	(role concrete))

(defclass testRule
	(is-a M_Update)
	(role concrete))

(defclass getDeleteFrames "Liefert die IDs von frames, die bei der Migration auf eine gelöscht werden müssen."
	(is-a M_Update)
	(role concrete))

(defclass setVersionInvalid ";; Setzt die Version als nicht valid. Wenn bei dem Update eine Fehler auftritt."
	(is-a M_Update)
	(role concrete))

(defclass setVersionValid ";; Setzt die Version als nicht valid. Wenn bei dem Update eine Fehler auftritt."
	(is-a M_Update)
	(role concrete))

(defclass isVersionValid
	(is-a M_Update)
	(role concrete))

(defclass V1RuleClass
	(is-a ModelRules)
	(role abstract))

(defclass DateAndTime
	(is-a V1RuleClass)
	(role abstract))

(defclass CL_getDateAndTime
	(is-a DateAndTime)
	(role concrete))

(defclass RL_setTimeToDate ";;Name	CL4_getWissensObjekt\n(:BIND ?NAME :NAME)\n(hat_Wissensbedarf_an ?INS ?W)\n\n(:OR	(	(angelegt_am ?W ?DT)\n		(:BIND ?ANGELEGT (:JAVA (de.procom.wivu.util.DateUtility.StandardDateToTimestamp ?DT)))\n	)\n	(	(:BIND ?ANGELEGT '')\n	)\n)\n(Bezeichnung ?W ?wissensobjekt)(?NAME ?W ?wissensobjektID)"
	(is-a DateAndTime)
	(role concrete))

(defclass ProWimV1Rules
	(is-a V1RuleClass)
	(role abstract))

(defclass Subprozesse
	(is-a ProWimV1Rules)
	(role abstract))

(defclass CL4_getSubProzesse
	(is-a Subprozesse)
	(role concrete))

(defclass CL4_getSubInput_A
	(is-a Subprozesse)
	(role concrete))

(defclass CL4_getSubInput ";;CL4_getSubInput\n(:NAME ?ROOT ?XX)\n(:BIND ?NAME :NAME)\n(:BIND ?besteht_aus 'besteht_aus')\n(?besteht_aus ?ROOT ?p)\n(:CLASS ?p Produkt)\n(Inputprodukt ?p :TRUE)\n(Bezeichnung ?p ?P)\n(:NAME ?p ?P)"
	(is-a Subprozesse)
	(role concrete))

(defclass CL4_getSubOutput ";;CL4_getSubOutput\n(:NAME ?ROOT ?XX)\n(:BIND ?NAME :NAME)\n(:BIND ?besteht_aus 'besteht_aus')\n(?besteht_aus ?ROOT ?P)\n(:CLASS ?P Produkt)\n(Outputprodukt ?p :TRUE)\n(Bezeichnung ?p ?P)\n(:NAME ?p ?P)"
	(is-a Subprozesse)
	(role concrete))

(defclass CL4_getSubTaetigkeit ";;CL4_getSubTaetigkeit\n(:BIND ?NAME :NAME)\n(:BIND ?besteht_aus besteht_aus )\n(?besteht_aus ?ROOT ?V)\n(setzt_sich_zusammen_aus ?V ?PF)\n(:FAIL (wird_ausgeuebt_durch ?PF ?VI))\n(?NAME ?PF ?PFID)\n(Bezeichnung ?PF ?P)"
	(is-a Subprozesse)
	(role concrete))

(defclass CL4_testSubInput ";;CL4_testSubInput\n(:INSTANCE Produkt ?pf)\n(ist_SubInput ?pf ?PF )\n(konsumiert ?V ?pf)"
	(is-a Subprozesse)
	(role concrete))

(defclass CL4_testSubOutput ";;CL4_testSubOutput\n(:INSTANCE Produkt ?pf)\n(ist_SubOutput ?pf ?PF )\n(generiert ?V ?pf)"
	(is-a Subprozesse)
	(role concrete))

(defclass CL4_testSubTaetigkeit ";;CL4_testSubTaetigkeit\n(:INSTANCE Tätigkeit ?pf)\n(ist_SubTaetigkeit ?pf ?PF )\n(setzt_sich_zusammen_aus ?V ?pf)"
	(is-a Subprozesse)
	(role concrete))

(defclass CL4_getCallprozess ";;CL4_getCallprozess\n(:BIND ?hat_Submodell 'hat_Submodell')\n(:INSTANCE Aktivität ?v)\n(?hat_Submodell ?v ?ID)\n(:BIND ?NAME :NAME)(?NAME ?v ?HP)\n"
	(is-a Subprozesse)
	(role concrete))

(defclass CL4_getsetSubinput
	(is-a Subprozesse)
	(role concrete))

(defclass Rollenbesetzung
	(is-a ProWimV1Rules)
	(role abstract))

(defclass CL4_setRolleStarter ";;CL4_setRolleStarter\n(wurde_gestartet_von ?INS ?s)\n(besetzt ?s ?ROLLE)"
	(is-a Rollenbesetzung)
	(role concrete))

(defclass TEST234 ";;Zweck:\n;;Input:\n;;Output:"
	(is-a Rollenbesetzung)
	(role concrete))

(defclass CL5_getMyActiveActivities ";;Name	CL5_getMyActiveActivities\n(:BIND ?NAME :NAME)\n(:BIND ?VG 'aktiv')\n(besetzt ?pe ?rolle)\n(uebt_aus ?rolle ?taetigkeit)\n(wird_ausgefuehrt_in ?taetigkeit ?v)	(?NAME ?v ?ID)\n(Vorgangstyp ?v ?VT)(:NEQ ?VT 'Teilprozess')\n(:FAIL (wurde_fertig_gesetzt_von ?taetigkeit ?pe)) 	;;NEU\n(Vorgangsstatus ?v ?VG)\n(aus_Template ?v ?bezt) 		(Bezeichnung ?bezt ?BEZT)\n(ist_Teil_von ?v ?PR)		(Bezeichnung ?PR ?PROZESS)\n;;(Subprozess ?PR :FALSE)\n(aus_Template ?PR ?pn)		(Bezeichnung ?pn ?pname)\n\n;;(:OR ((Verweis ?v ?Verweis))((:FAIL (Verweis ?v ?Ver))(:BIND ?Verweis '')))\n(:BIND ?Verweis '')\n(:OR ((Start ?v ?Start))((:FAIL (Start ?v ?x))(:BIND ?Start '')))\n(:BIND ?prozess ?PROZESS);;NEU\n"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_Startrecht ";;Name	CL4_Startrecht\n(:BIND ?NAME :NAME)\n(:SLOT-INVERSE darf_gestartet_werden_von ?islot)\n(besetzt ?Person ?r)\n(?islot ?r ?v)\n(?NAME ?v ?V)\n(:FAIL (aus_Template ?V ?x))\n(Start ?v ?s)\n(?NAME ?v ?ID)\n(Bezeichnung ?v ?BEZEICHNUNG)\n(:OR((Verweis ?v ?Verweis))((:FAIL (Verweis ?v ?Verweis))(:BIND ?Verweis \"kein Verweis\")))"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getWissensObjekt ";;Name	CL4_getWissensObjekt\n(:BIND ?NAME :NAME)\n(hat_Wissensbedarf_an ?INS ?W)\n\n(:OR	(	(angelegt_am ?W ?DT)\n		(:BIND ?ANGELEGT (:JAVA (de.procom.wivu.util.DateUtility.StandardDateToTimestamp ?DT)))\n	)\n	(	(:BIND ?ANGELEGT '')\n	)\n)\n(Bezeichnung ?W ?wissensobjekt)(?NAME ?W ?wissensobjektID)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getWissensInfo ";;Name	CL4_getWissensInfo\n(verweist_ueber ?WO ?w)\n(Bezeichnung ?w ?wissensverw)\n\n;;(:OR (	(angelegt_am ?w ?ANGELEGT))\n;;	((:FAIL (angelegt_am ?w ?A))(:BIND ?ANGELEGT '')))\n\n(:OR	(	(angelegt_am ?w ?DT)\n		(:BIND ?ANGELEGT (:JAVA (de.procom.wivu.util.DateUtility.StandardDateToTimestamp ?DT)))\n	)\n	(	(:BIND ?ANGELEGT '')\n	)\n)\n\n(:OR (	(Hyperlink ?w ?hyperlink))\n         (	(:FAIL (Hyperlink ?w ?y)) (:BIND ?hyperlink '')))\n(:OR (	(verweist_auf ?w ?ws)(Bezeichnung ?ws ?wissensspeicher))\n         (	(:FAIL (verweist_auf ?w ?z)) (:BIND ?wissensspeicher '')))"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getWissenstraeger ";;Name	CL4_getWissenstraeger\n(:BIND ?NAME :NAME)\n(wird_beherrscht_von ?WO ?w)\n(Bezeichnung ?w ?person)(?NAME ?w ?personID)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL5_getObjektrelation ";;Name		CL5_getObjektrelation"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL5_getObjektattribut ";;Name		CL5_getObjektattribu\n(?AT ?ID ?Wert)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getPerson ";;Name:   CL4_getPerson\n;;Zweck:   Liefert Infos zu  einer Person\n;;Input:   ?p : ID der Person\n;;Output	?BEZ: Bezeichnung der Person\n;;             ?Nachname\n;;             ?Vorname\n;;             ?Adresse\n;;             ?Telefon\n;;             ?Beschreibung\n;;             ?Email\n;;             ? Bezeichnung\n;;    Typ:     ASK"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getOrgEbene0 ";;Name:     CL4_getOrgEbene0\n(:BIND ?NAME :NAME)\n(:instance Organisationseinheit ?o)\n(:FAIL (gehoert_zu ?o ?x))\n(?NAME ?o ?ID)\n(Bezeichnung ?o ?ORG)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getOrgMA ";;Name:        CL4_getOrgMA\n;;Zweck:       Liefert die einer Organisationseinheit zugeordneten Personen\n;;Input:       ?ORG ID\n;;Output:    ?ID: der Personen\n;;	   ?MA: Kürzel der Persoon\n;;	   ?NN: Nachname\n;;	   ?VN: Vorname\n;;Typ:         ASK\n\n(:BIND ?NAME :NAME)\n(hat_Mitglied ?ORG ?p)\n(?NAME ?p ?ID)\n(Bezeichnung ?p ?MA)\n(:OR ((Nachname ?p ?NN))((:FAIL (Nachname ?p ?x))(:BIND ?NN '')))\n(:OR ((Vorname ?p ?VN))((:FAIL (Vorname ?p ?x))(:BIND ?VN '')))"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getOrgKinder ";;Name:     CL4_getOrgKinder\n(:BIND ?NAME :NAME)\n(ist_aufgeteilt_in ?Vater ?Kind)\n(?NAME ?Kind ?ID)\n(Bezeichnung ?Kind ?ORG)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL6_genWissensverweis ";;Name	CL6_genWissensverweis\n(:BIND ?DZ (:JAVA	(de.procom.wivu.util.DateUtility.getDateTime)))\n(:BIND ?DT (:JAVA (de.procom.wivu.util.DateUtility.FormatStandardDateTime ?DZ)))\n(:BIND ?WV (:LISP	(concatenate (quote string) 'Wissensverweis_' ?DZ)))\n(:ADD-INSTANCE	(?x Wissensverweis)\n                          	(:NAME ?x ?WV)\n		(Bezeichnung ?x ?Bezeichnung)\n		(angelegt_am ?x ?DT)\n		(verweist_von ?x ?WO)\n		(Hyperlink ?x ?LINK)\n		(verweist_auf ?x ?WS)\n		(Hyperlinktyp ?x ?LINKTYP))"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL6_genWissensobjekt ";;Name	CL6_genWissensobjekt\n(:BIND ?DZ (:JAVA (de.procom.wivu.util.DateUtility.getDateTime)))\n(:BIND ?DT (:JAVA (de.procom.wivu.util.DateUtility.FormatStandardDateTime ?DZ)))\n(:BIND ?WO (:LISP (concatenate (quote string) 'Wissensobjekt_' ?DZ)))\n(:OR((aus_Template ?PE ?TE)) ((:BIND ?TE ?PE)))\n(:ADD-INSTANCE	(?x Wissensobjekt)\n		(:NAME ?x ?WO)\n		(Bezeichnung ?x ?Bezeichnung)\n		(wird_benoetigt_fuer ?x ?TE)\n		(angelegt_am ?x ?DT)\n		(wurde_eingestellt_durch ?x ?Person))"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_addWissenstraeger ";;Name	CL4_addWissenstraeger \n(wird_beherrscht_von ?WO ?Person)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getAlleProzesse ";;Name	CL4_getAlleProzesse\n(:BIND ?NAME :NAME)\n(:BIND ?aus_Template 'aus_Template')\n(:INSTANCE Prozess ?p)\n(Start ?p ?s)\n(:FAIL (?aus_Template ?p ?x))\n(?NAME ?p ?IDp)(Bezeichnung ?p ?BEZp) "
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL7_getWissenselement ";;Name		CL7_getWissenselement\n(:BIND ?N :NAME)\n(:INSTANCE Wissenselement ?I)\n(:NAME ?I ?BEZ)\n(:BIND ?E (:JAVA (de.procom.ws.wivu.algernon.StringService.containsl ?BEZ ?PAT)))\n(:NEQ ?E false)\n(:DIRECT-CLASS ?I ?R)\n(?N ?I ?ID)\n(:OR	(	(Beschreibung ?I ?B)\n	)\n	(	(:FAIL (Beschreibung ?I ?x)))\n	)\n)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL_getActivities ";;Name	CL_getActivities\n(:BIND ?NAME :NAME)\n(besteht_aus ?ID ?BEZA)\n(?NAME ?BEZA ?IDA)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL7_getHyperlink ";;Name		CL7_getHyperlink\n(Hyperlink ?WV ?LINK)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getValue ";;Name	CL4_getValue \n(?AT ?ID ?VALUE)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getActivities ";;Name	CL4_getActivities\n(:BIND ?NAME :NAME)\n(besteht_aus ?ID ?a)\n(:DIRECT-CLASS ?a Aktivität)\n(?NAME ?a ?IDA)\n(Bezeichnung ?a ?BEZA)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL6_getStartProcess ";;Name	CL6_getStartProcess\n(:BIND ?NAME :NAME)\n(startet_mit ?ID ?kf)\n(?NAME ?kf ?NSTART)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL6_getVorgaenger ";;Name	CL6_getVorgaenger\n(:BIND ?NAME :NAME)\n(wird_aktiv_gesetzt_von ?AK ?kf)\n(wird_aktiviert_von ?kf ?nf)\n(?NAME ?nf ?NF)\n(Autovorgang ?NF ?AF)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL6_getVorgaengerStart ";;Name	CL6_getVorgaengerStart\n(:BIND ?NAME :NAME)\n(ist_Startaktivitaet_von ?AK ?kf)\n(?NAME ?kf ?NF)\n(Vorgangstyp ?kf ?Typ)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL6_getNachfolger ";;Name	CL6_getNachfolger\n(:BIND ?NAME :NAME)\n(aktiviert ?AK ?kf)\n(setzt_aktiv ?kf ?vg)\n(?NAME ?vg ?VG)\n(Autovorgang ?VG ?AF)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getActiveProcesses ";;Name	CL4_getActiveProcesses\n(:BIND ?NAME :NAME)\n(:BIND ?VG 'aktiv')\n(:INSTANCE Prozess ?ID1)\n(:BIND ?P ?ID1)\n(hat_Template ?P ?V)\n(:CLASS ?V Prozess)\n(?NAME ?V ?VID)\n(:OR 	(	(Subprozess ?VID :FALSE)		)\n	(	(Subprozess ?VID :TRUE)\n		(:FAIL (ist_Submodell_von ?VID ?TP))	)\n)\n(Vorgangsstatus ?VID ?VG)\n(:OR ((Start ?VID ?Start))((:FAIL (Start ?VID ?x))(:BIND ?Start '')))\n(:OR ((Ende ?VID ?Ende))((:FAIL (Ende ?VID ?y))(:BIND ?Ende '')))\n(wurde_gestartet_von ?VID ?S)(?NAME ?S ?Starter)(Bezeichnung ?S ?SBEZ)\n(:BIND ?vv ?V)\n(?NAME ?V ?INS)\n(?NAME ?vv ?ID) (Bezeichnung ?vv ?v)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL5_getActiveActivities ";;CL5_getActiveActivities\n(:BIND ?N :NAME)\n(:BIND ?VS 'aktiv')\n(:CLASS ?INS Prozess)\n(besteht_aus ?INS ?activity)\n(:CLASS ?activity Aktivität)\n(?N ?activity ?A)\n(Vorgangstyp ?A ?VT)(:NEQ ?VT 'Teilprozess')\n(Vorgangsstatus ?A ?VS)\n(Autovorgang ?A ?AUTO)\n(:OR  (	(:NEQ ?AUTO :FALSE))\n          (	(:NEQ ?AUTO :TRUE)\n	(setzt_sich_zusammen_aus ?A ?T)\n	(wird_ausgeuebt_durch ?T ?role)\n	(wird_besetzt_durch ?role ?person)\n	(?N ?person ?per)\n	(:OR ( 	(wurde_fertig_gesetzt_von ?T ?per)\n		;;(:FAIL (:NEQ ?person ?xx))\n		(:BIND ?fertiggesetzt 'ja'))\n	         ( 	(:BIND ?fertiggesetzt 'nein'))\n	)\n))\n(aus_Template ?A ?BEZT)\n(:OR ((Verweis ?A ?Verweis))((:FAIL (Verweis ?A ?Ver))(:BIND ?Verweis '')))\n(:OR ((Start ?A ?Start))((:FAIL (Start ?A ?x))(:BIND ?Start '')))\n(:OR ((Ende ?A ?Ende))((:FAIL (Ende ?A ?y))(:BIND ?Ende '')))"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL5_getPendingProcesses ";;Name	CL5_getPendingProcesses \n(:BIND ?NAME :NAME)\n(:BIND ?VG 'ruht')\n(:INSTANCE Prozess ?ID1)\n(:BIND ?P ?ID1)\n(hat_Template ?P ?V)\n(:CLASS ?V Prozess)\n(?NAME ?V ?VID)\n(:OR 	(	(Subprozess ?VID :FALSE)		)\n	(	(Subprozess ?VID :TRUE)\n		(:FAIL (ist_Submodell_von ?VID ?TP))	)\n)\n(Vorgangsstatus ?VID ?VG)\n(:OR ((Start ?VID ?Start))((:FAIL (Start ?VID ?x))(:BIND ?Start '')))\n(:OR ((Ende ?VID ?Ende))((:FAIL (Ende ?VID ?y))(:BIND ?Ende '')))\n(:OR ( (wurde_gestartet_von ?VID ?S)(?NAME ?S ?Starter)(Bezeichnung ?S ?SBEZ))((:BIND ?SBEZ '')))\n(:BIND ?vv ?V)\n(?NAME ?V ?INS)\n(?NAME ?vv ?ID) (Bezeichnung ?vv ?v)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL6_getReadyProcesses ";;Name	CL6_getReadyProcesses \n(:BIND ?NAME :NAME)\n(:BIND ?VG 'fertig')\n(:INSTANCE Prozess ?ID1)\n(:BIND ?P ?ID1)\n(hat_Template ?P ?V)\n(:CLASS ?V Prozess)\n(?NAME ?V ?VID)\n(:OR 	(	(Subprozess ?VID :FALSE)		)\n	(	(Subprozess ?VID :TRUE)\n		(:FAIL (ist_Submodell_von ?VID ?TP))	)\n)\n(Vorgangsstatus ?VID ?VG)\n(:OR ((Start ?VID ?Start))((:FAIL (Start ?VID ?x))(:BIND ?Start '')))\n(:OR ((Ende ?VID ?Ende))((:FAIL (Ende ?VID ?y))(:BIND ?Ende '')))\n(:OR ( (wurde_gestartet_von ?VID ?S)(?NAME ?S ?Starter)(Bezeichnung ?S ?SBEZ))((:BIND ?SBEZ '')))\n(:BIND ?vv ?V)\n(?NAME ?V ?INS)\n(?NAME ?vv ?ID) (Bezeichnung ?vv ?v)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getOutputProducts ";;Name:		CL4_getOutputProducts\n(generiert ?AKT ?p)\n(:BIND ?NAME :NAME)(?NAME ?p ?ID)\n(Bezeichnung ?p ?BEZ)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getInputProducts ";;Name:    	CL4_getInputProducts\n(konsumiert ?AKT ?p)\n(:BIND ?NAME :NAME)(?NAME ?p ?ID)\n(Bezeichnung ?p ?BEZ)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL8_getProzessParameter ";;Name:    	CL8_getProzessParameter"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL8_getInstanceParameter ";;Name		CL8_getInstanceParamete"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL8_chgInstanceParameter ";;Name:   		CL8_chgInstanceParameter\n(hat_Prozessinformation ?ID ?PI)\n(Bezeichnung ?PI ?PARA)\n\n(:OR 	(	(Inhalt_String ?PI ?Wertalt )\n		(:DELETE (Inhalt_String ?PI ?Wertalt))\n		(Inhalt_String ?PI ?WERTNEU)\n	)\n\n	(	(Inhalt_String ?PI ?WERTNEU)\n	)\n)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getActivityDescription ";;Name: CL4_getActivityDescription\n(Beschreibung ?ID ?B)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL6_getClass ";;Name	CL6_getClass \n(:DIRECT-CLASS ?ID ?CLASS)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getProzesswissenVonAktivitaet ";;Name:	CL4_getProzesswissenVonAktivitaet\n(:BIND ?NAME :NAME)\n;;(gehoert_zur_Instanz ?AKT ?INS)\n(ist_Teil_von ?AKT ?PRO)\n(aus_Template ?PRO ?tem)\n(hat_Wissensbedarf_an ?tem ?bez)\n\n(:OR	(	(angelegt_am  ?bez ?DT)\n		(:BIND ?ANGELEGT (:JAVA (de.procom.wivu.util.DateUtility.StandardDateToTimestamp ?DT)))\n	)\n	(	(:BIND ?ANGELEGT '')\n	)\n)\n(Bezeichnung ?bez ?BEZ)(?NAME ?bez ?ID)\n(Bezeichnung ?tem ?TEM)(?NAME ?tem ?TID)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getProzessfachdomaeneVonAktivitaet ";;Name:	CL4_getProzessfachdomaeneVonAktivitaet\n(:BIND ?NAME :NAME)\n(ist_Teil_von ?AKT ?PRO)\n(befasst_sich_fachlich_mit ?PRO ?DOM)\n(Bezeichnung ?DOM ?BEZ)(?NAME ?DOM ?ID)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getVorgangsfachdomaene ";;Name:	CL4_getVorgangsfachdomaene\n(:BIND ?NAME :NAME)\n(aus_Template ?AKT ?TEM)\n(:CLASS ?TEM Aktivität)\n(?NAME ?TEM ?x)\n(befasst_sich_fachlich_mit ?x ?DOM)\n(Bezeichnung ?DOM ?BEZ)(?NAME ?DOM ?ID)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL6_getKontextWissen ";;Name	CL6_getKontextWissen\n(:NEQ '1' 1)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL5_getFreigabetyp ";;Name	CL5_getFreigabetyp\n(Freigabetyp ?ID ?Typ)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getPersonenVonAktivitaet ";;Name: 	CL4_getPersonenVonAktivitaet\n(setzt_sich_zusammen_aus ?AKT ?T)\n(wird_ausgeuebt_durch ?T ?R)\n(wird_besetzt_durch ?R ?Psoll)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass _CL4_RGA_Standardaktivierung ";;Name:    CL4_RGA_Standardaktivierung\n(:NAME ?v ?V)\n(:BIND ?NAME :NAME)\n(aktiviert ?v ?kf)\n(Vorgangsstatus ?v ?FERTIG)\n(?NAME ?kf ?KF)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getFertigPersonen ";;Name: 	CL4_getFertigPersonen\n(setzt_sich_zusammen_aus ?AKT ?T)\n(wird_ausgeuebt_durch ?T ?R)\n(wird_besetzt_durch ?R ?Psoll)\n(wurde_fertig_gesetzt_von ?T ?Pist)\n(:FAIL (:NEQ ?Psoll ?Pist))"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_setActivityState "(:BIND ?DZ (:JAVA (de.procom.wivu.util.DateUtility.getDateTime)))\n(:CLEAR-RELATION ?AKT Vorgangsstatus)\n(Vorgangsstatus ?AKT ?STATUS)\n\n(:BIND ?NAME :NAME)\n(:BIND ?FERTIG 'fertig')\n\n(:OR (         (:FAIL (:NEQ ?STATUS ?FERTIG))	\n	   (:CLEAR-RELATION ?AKT Ende)(Ende ?AKT ?DZ)\n	   (:OR   (	(ist_Endaktivitaet_von ?AKT ?P)\n		(:CLEAR-RELATION ?P Vorgangsstatus)\n		(Vorgangsstatus ?P ?STATUS)\n	   	(:CLEAR-RELATION ?P Ende)(Ende ?P ?DZ)\n		(:BIND ?DEB '1')\n		(?NAME ?P ?ID)\n	             )\n                             (	(:FAIL (ist_Endaktivitaet_von ?AKT ?P1))\n		(:BIND ?DEB '2')\n                             )\n                   )\n         )\n         (         (:NEQ ?STATUS ?FERTIG)\n	   (:CLEAR-RELATION ?AKT Start)(Start ?AKT ?DZ)\n	   (:BIND ?DEB '3')\n         )\n)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL6_clearFertiggesetzt ";;Name:	CL6_clearFertiggesetzt\n(setzt_sich_zusammen_aus ?V ?T)\n(:CLEAR-RELATION ?T wurde_fertig_gesetzt_von)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_setTaetigkeitFertig ";;Name:    CL4_setTaetigkeitFertig\n(:BIND ?NAME :NAME)\n(:NAME ?Per ?Person)\n(setzt_sich_zusammen_aus ?AKT ?TAE)\n(wird_ausgeuebt_durch ?TAE ?ROL)\n(wird_besetzt_durch ?ROL ?PER)\n(?NAME ?PER ?P)\n(:FAIL (:NEQ ?PER ?Per))\n(:OR (	(:FAIL (wurde_fertig_gesetzt_von ?TAE ?y))\n         )\n         (	(wurde_fertig_gesetzt_von ?TAE ?x)\n	(:NEQ ?x ?Per)\n         )\n)\n(wurde_fertig_gesetzt_von ?TAE ?PER)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL6_getFertigRegel ";;Name:   CL6_getFertigRegel\n(hat_Fertigregel ?VG ?AR)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getAKRegel ";;Name:   CL4_getAKRegel\n(hat_Aktivierungsregel ?VG ?AR)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getActiveAutoActivities ";;Name	CL4_getActiveAutoActivities\n(:BIND ?NAME :NAME)\n(:BIND ?VS 'aktiv')\n(:instance Aktivität ?r)\n(Autovorgang ?r :TRUE)\n(Vorgangsstatus ?r ?VS)\n(?NAME ?r ?ID)\n(aus_Template ?r ?bezt)\n(Bezeichnung ?bezt ?BEZT)\n(:OR ((Verweis ?r ?Verweis))((:FAIL (Verweis ?r ?Ver))(:BIND ?Verweis '')))\n(:OR ((Start ?r ?Start))((:FAIL (Start ?r ?x))(:BIND ?Start '')))\n(:OR ((Ende ?r ?Ende))((:FAIL (Ende ?r ?y))(:BIND ?Ende '')))"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass _CL4_Standard_AND ";;Name:    _CL4_Standard_AND\n(:NAME ?kf ?KF)\n(:BIND ?NAME :NAME)\n(:BIND ?FERTIG 'fertig')\n(wird_aktiviert_von ?kf ?v)\n(setzt_aktiv ?kf ?n)\n(Vorgangsstatus ?v ?VG)\n(:FAIL (:NEQ ?VG ?FERTIG))\n(?NAME ?n ?ID)\n(:COUNT ?ANZ ?iv (wird_aktiviert_von ?kf ?iv))"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_setKFaktiv ";;Name:	CL4_setKFaktiv\n(:CLEAR-RELATION ?KF ist_aktiviert)\n(ist_aktiviert ?KF :TRUE)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getKFRegel ";;Name:    CL4_getKFRegel\n(hat_Verknüpfungsregel ?KF ?VR)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_TemplateDescr ";;Name	CL4_TemplateDescr"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_Prozessrollen ";;CL4_Prozessrollen"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getInsID ";;CL4_getInsID"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_setKFinaktiv ";;CL4_setKFinaktiv\n(:clear-relation ?KF ist_aktiviert)\n(ist_aktiviert ?KF :FALSE)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_sendArbeitsauftrag ";;CL4_sendArbeitsauftrag\n(:BIND ?NAME :NAME)\n(setzt_sich_zusammen_aus ?AKT ?t)\n(aus_Template ?t ?T)\n(Bezeichnung ?AKT ?akt)\n(aus_Template ?AKT ?AA)(Bezeichnung ?AA ?A)\n(wird_ausgeuebt_durch ?t ?r)\n\n(:OR ((aus_Template ?r ?R))((:FAIL (aus_Template ?r ?x))(:BIND ?R ?r)))\n(Bezeichnung ?R ?RR)\n(wird_besetzt_durch ?r ?p)\n(wird_benachrichtigt ?p :TRUE)\n\n(?NAME ?p ?ID)\n(Bezeichnung ?p ?BEZ)\n\n(ist_Teil_von ?AKT ?PI)\n(Bezeichnung ?PI ?PROZESS)\n\n(ProWimPortal Standard-KB ?Portal)\n(Email ?p ?to)\n(:BIND ?subject (:LISP (concatenate (quote string) 'Arbeitsauftrag: ' ?PROZESS)))\n(:BIND ?from 'ProWim')\n(:BIND ?BL ' ')\n(:BIND ?A0 'Liebe')\n(:BIND ?A1 'Lieber')\n\n(:OR	( 	(:FAIL (Anrede ?p ?kA))(:BIND ?T0 'Sehr geehrter ProWim Benutzer'))\n\n         	(	(Anrede ?p '$')\n		(:OR	( 	(Vorname ?p ?VN)\n				(:BIND ?T0 (:LISP (concatenate (quote string) ?A0  ?BL ?VN))))\n	         		(	(:FAIL (Vorname ?p ?mm))\n				(:BIND ?T0 'Sehr geehrter ProWim Benutzer'))))\n\n        	(	(Anrede ?p '%')\n		(:OR	( 	(Vorname ?p ?VNm)\n				(:BIND ?T0 (:LISP (concatenate (quote string)  ?A1  ?BL ?VNm))))\n	         		(	(:FAIL (Vorname ?p ?mmm))\n				(:BIND ?T0 'Sehr geehrter ProWim Benutzer'))))\n         	\n	(	(Anrede ?p ?Anrede)\n		(:OR 	(	(Nachname ?p ?NN)\n				(:BIND ?T0 (:LISP (concatenate (quote string) ?Anrede  ?BL ?NN))))\n	         		(	(:FAIL (Nachname ?p ?nn))\n				(:BIND ?T0 'Sehr geehrter ProWim Benutzer')))))\n\n(:BIND ?T1 ',\n\ndies ist eine automatische Benachrichtigung über einen Arbeitsauftrag im Prozess: \n\n ')\n\n\n(:BIND ?T2 '\n \nBitte führen Sie in Ihrer Rolle als:\n\n ')\n\n(:BIND ?T3 '\n \nfolgenden Vorgang aus:\n\n ')\n\n(:BIND ?T4 '.\n\nVielen Dank! \n \n\n\nAlles Wissenswerte zum Vorgang finden Sie im ProWim-Portal! \n ')\n\n(:BIND ?msgtext (:LISP (concatenate (quote string) ?T0 ?T1 ?PROZESS ?T2 ?RR ?T3 ?A ?T4 ?Portal)))\n(:BIND ?DZ (:JAVA (de.procom.wivu.util.MailUtility.sendmail ?subject ?from ?to ?msgtext)))\n)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getSubprozessA ";;CL4_getSubprozessA\n(hat_Submodell ?ID ?SUB)\n(:BIND ?NAME :NAME)(?NAME ?SUB ?NSUB)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL8_getTimedProcesses ";;CL8_getTimedProcesses"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getTerminActivities ";;CL4_getTerminActivities (07.09.2006 RT)\n\n(:BIND ?NAME :NAME)\n(:BIND ?VS 'aktiv')\n(:instance Aktivität ?r)\n(Autovorgang ?r :TRUE)\n(Vorgangsstatus ?r ?VS)\n(Verweis ?r 'Timer')\n(?NAME ?r ?ID)\n(:OR ((SETermin ?r ?Termin ))((:FAIL (SETermin ?r ?T ))(:BIND ?Termin '')))"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getRolesWithStaff ";;CL4_getRolesWithStaff"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL8_getStartParameter ";;CL8_getStartParameter\n(:BIND ?r ?INS)\n(hat_Prozessinformation ?r ?PI)\n(:CLASS ?PI Prozessinformation)\n(Bezeichnung ?PI ?Name)\n(Folge ?PI ?Folge)\n(:OR ((Inhalt_String ?PI ?Wert ))((:BIND ?Wert'')))\n(Informationstyp ?PI ?Typ)\n(:BIND ?S  (:LISP	(concatenate (quote string) '{' ?Name '}{' ?Wert '}{'  ?Typ '}'))) \n(:OR	(	(Auswahlliste ?PI ?Liste)\n		(:BIND ?PARAMETERSTRING (:LISP	(concatenate (quote string)  ?S '{' ?Liste '}')))\n	)\n	(	(:FAIL (Auswahlliste ?PI ?x))\n		(:BIND ?Liste '')\n		(:BIND ?PARAMETERSTRING ?S)\n	)\n)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getProcessStartEnd ";;CL4_getProcessStartEnd\n(Bezeichnung  ?ID ?BEZT)\n(:BIND ?EndeS 'Ende')\n(:BIND ?StartS 'Start')\n(:OR ((?StartS ?ID ?Start))((:FAIL (?StartS ?ID ?x))(:BIND ?Start '')))\n(:OR ((?EndeS ?ID ?Ende))((:FAIL (?EndeS ?ID ?y))(:BIND ?Ende '')))"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getDmsSchlagworte ";;CL4_getDmsSchlagworte\n(:BIND ?p ?INS) \n(:OR ((:CLASS ?p Aktivität))((:CLASS ?p Prozess)))	\n(DMS_Schlagworte ?p ?DMSContext)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL6_getKontextWissenOW " ;;CL6_getKontextWissenOW\n(:BIND ?n :NAME) \n(:DIRECT-CLASS ?ID ?c)\n(:template-relation ?c ?rel)\n(:SLOT-VALUE-TYPE ?rel ?x)\n(:FAIL(:NEQ ?x 'Instance'))\n(:NEQ ?x 'Class')\n(?rel ?ID ?Wert)\n(:OR	 ( 	(:DIRECT-CLASS ?Wert Tätigkeit))\n	 ( 	(:DIRECT-CLASS ?Wert Ablage))\n	 ( 	(:DIRECT-CLASS ?Wert Produkt))\n	 ( 	(:DIRECT-CLASS ?Wert Prozess))\n	 ( 	(:DIRECT-CLASS ?Wert Funktion))\n	 ( 	(:DIRECT-CLASS ?Wert Aktivität))\n)\n(:OR        	 (	(:BIND ?w ?Wert)\n		(wird_unterstuetzt_von ?ID ?w)\n		(wird_ausgefuehrt_von ?w ?W)\n		(:BIND ?WERT ?W)\n		(:BIND ?REL 'Mittel'))\n\n        	(	(:BIND ?w0 ?Wert)\n		(setzt_sich_zusammen_aus ?ID ?w0)\n		(wird_ausgeuebt_durch ?w0 ?W0)\n		(:BIND ?WERT ?W0)\n		(:BIND ?REL 'Rollen'))\n\n\n        	(	(:BIND ?wbA ?Wert) (ist_Teil_von ?ID ?wbA)\n		(:BIND ?WERT ?ID)\n		(:TEST (:LISP (eql (quote ?rel) (quote IST_TEIL_VON))))\n		(:BIND ?REL ?rel))\n\n       	(	(:BIND ?REL ?rel)\n		(:BIND ?WERT ?Wert)\n 		;;(:FAIL (:DIRECT-CLASS ?WERT Produktfluss))\n 		(:FAIL (:DIRECT-CLASS ?WERT Aktivität)))\n)\n(:OR 	(	(aus_Template ?WERT ?TEMP)\n		(?n ?TEMP ?TID)\n		(Bezeichnung ?TEMP ?BEZ)\n	)\n	(	(:FAIL (aus_Template ?WERT ?x))\n		(?n ?WERT ?TID)\n		(Bezeichnung ?WERT ?BEZ)\n	)\n)\n\n(:DIRECT-CLASS ?WERT ?TYP)\n(:FAIL (:DIRECT-CLASS ?WERT Prozess))\n\n(?n ?WERT ?OID)\n(:OR 	( 	(:TEST (:LISP (eql (quote ?REL) (quote GENERIERT))))\n		(:BIND ?ART 'Ausgang'))\n         	(	(:TEST (:LISP (eql (quote ?REL) (quote KONSUMIERT))))\n		(:BIND ?ART 'Eingang'))\n         	(	(:TEST (:LISP (eql (quote ?REL) (quote IST_TEIL_VON))))\n		(:BIND ?ART 'Aktivität'))\n         	(	(:BIND ?ART ?TYP))\n)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass Instanzbildung
	(is-a ProWimV1Rules)
	(role abstract))

(defclass CL4_StartaktivitaetAktivieren "(:BIND ?NAME :NAME)\n(:BIND ?DZ (:JAVA (de.procom.wivu.util.DateUtility.getDateTime)))\n(startet_mit ?INS ?a)\n(:BIND ?R aktiv)\n(:clear-relation ?a Vorgangsstatus)(Vorgangsstatus ?a ?R) \n(:CLEAR-RELATION ?a Start)(Start ?a ?DZ)\n(:clear-relation ?INS Vorgangsstatus)(Vorgangsstatus ?INS ?R)\n(:CLEAR-RELATION ?INS Start)(Start ?INS ?DZ)\n(?NAME ?a ?ID)"
	(is-a Instanzbildung)
	(role concrete))

(defclass CL4_getInstanzbezeichnung ";;CL4_getInstanzbezeichnung\n(Bezeichnung ?ID ?ident)"
	(is-a Instanzbildung)
	(role concrete))

(defclass CL6_getPersonenOderOrg ";;CL6_getPersonenOderOrg\n(:BIND ?NAME :NAME)\n(:INSTANCE Organisationselement ?p)\n(Bezeichnung ?p ?BEZ)\n(:DIRECT-CLASS ?p ?KLASSE)\n(:OR ((Beschreibung ?p ?Beschreibung ))((:BIND ?Beschreibung '')))\n(?NAME ?p ?ID)\n\n\n(:OR 	(\n	(:CLASS ?p Person)\n	(?NAME ?p ?ID)\n	(:OR ((Nachname ?p ?Nachname))((:BIND ?Nachname '')))\n	(:OR ((Vorname ?p ?Vorname))((:BIND ?Vorname '')))\n	(:OR ((Adresse ?p ?Adresse))((:BIND ?Adresse '')))\n	(:OR ((Email ?p ?Email ))((:BIND ?Email '')))\n	(:OR ((Beschreibung ?p ?Beschreibung ))((:BIND ?Beschreibung '')))\n	(:OR ((Telefon ?p ?Telefon ))((:BIND ?Telefon '')))\n	(:OR ((Funktionsberechtigungsstufe ?p ?Funktionsberechtigungsstufe ))((:BIND ?Funktionsberechtigungsstufe '')))\n	(:OR ((ist_Mitglied_von ?p ?ist_Mitglied_von))((:BIND ?ist_Mitglied_von '')))\n	)\n	(\n	(:CLASS ?p Organisationselement)\n	)\n)"
	(is-a Instanzbildung)
	(role concrete))

(defclass CL4_setInstanzbezeichnung ";:CL4_setInstanzbezeichnung\n(:CLEAR-RELATION ?ID Bezeichnung)\n(Bezeichnung ?ID ?BEZ)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL8_chgStartParameter ";;CL8_chgStartParameter\n(:BIND ?ID ?INS)\n(hat_Prozessinformation ?ID ?PI)\n(Bezeichnung ?PI ?PARA)\n\n(:OR 	(	(Inhalt_String ?PI ?Wertalt )\n		(:DELETE (Inhalt_String ?PI ?Wertalt))\n		(Inhalt_String ?PI ?WERTNEU)\n	)\n\n	(	(Inhalt_String ?PI ?WERTNEU)\n	)\n)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_setDmsSchlagworte ";;CL4_setDmsSchlagworte\n(:BIND ?PI ?INS)\n(:CLEAR-RELATION ?PI DMS_Schlagworte)\n(DMS_Schlagworte ?PI ?DMSContext)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_chgStaffbyID ";;CL4_chgStaffbyID\n(:CLEAR-RELATION ?ROLLE wird_besetzt_durch)\n(wird_besetzt_durch ?ROLLE ?ID)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_setStarter ";;CL4_setStarter\n(wurde_gestartet_von ?VORGANG ?PERSON)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL5_addObjekteigenschaft ";;CL5_addObjekteigenschaft \n(?AT ?ID ?Wert)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL5_addWissensobjekt ";;CL5_addWissensobjekt\n(hat_Wissensbedarf_an ?PE ?WO)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_getTemplateID ";;CL4_getTemplateID\n(:BIND ?NAME :NAME)\n(aus_Template ?INS ?t)\n(Bezeichnung ?t ?BEZ)(?NAME ?t ?T_INS)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL6_getContext ";;CL6_getContext\n(:DIRECT-CLASS ?ID ?c)\n(:template-relation ?c ?rel)\n(?rel ?ID ?Wert)\n(:SLOT-VALUE-TYPE ?rel ?x)\n(:FAIL(:NEQ ?x 'Instance'))\n(:NEQ ?x 'Class')\n\n(:OR (	(aktiviert ?ID ?Wert)\n	(setzt_aktiv ?Wert ?WERT)\n	(:BIND ?REL 'hat_Nachfolgeaktivitaet'))\n\n        (	(wird_aktiv_gesetzt_von ?ID ?Wert)\n	(wird_aktiviert_von ?Wert ?WERT)\n	(:BIND ?REL 'hat_Vorgaengeraktivitaet'))\n\n        (	(:BIND ?w ?Wert)\n	(wird_unterstuetzt_von ?ID ?w)\n	(wird_ausgefuehrt_von ?w ?W)\n	(:BIND ?WERT ?W)\n	(:BIND ?REL 'setzt_folgende_Mittel_ein'))\n\n\n        (	(:BIND ?w0 ?Wert)\n	(setzt_sich_zusammen_aus ?ID ?w0)\n	(wird_ausgeuebt_durch ?w0 ?W0)\n	(:BIND ?WERT ?W0)\n	(:BIND ?REL 'setzt_folgende_Rollen_ein'))\n\n        (	(:BIND ?wa ?Wert) (generiert ?ID ?wa)\n	(wird_konsumiert_von ?wa ?WA)\n	(:BIND ?WERT ?WA)\n	(:BIND ?REL 'transferiert_Produkte_nach'))\n\n        (	(:BIND ?wb ?Wert) (konsumiert ?ID ?wb)\n	(wird_konsumiert_von ?wb ?WB)\n	(:BIND ?WERT ?WB)\n	(:BIND ?REL 'transferiert_Produkte_von'))\n\n        (	(:BIND ?REL ?rel)\n	(:BIND ?WERT ?Wert))\n)\n\n(:BIND ?wc ?Wert) (:FAIL (aus_Template ?ID ?wc))\n(:BIND ?wd ?Wert) (:FAIL (hat_Template ?ID ?wd))\n\n(:OR (	(:CLASS ?Wert Prozesselement)\n	(:OR 	(	(aus_Template ?WERT ?TEMP)\n			;;(gehoert_zur_Instanz ?WERT ?I)\n			;;(Bezeichnung ?I ?IBEZ)\n			;;(Bezeichnung ?TEMP ?OBE)\n			;;(:BIND ?BL1 ' (')(:BIND ?BL2 ')')\n			;;(:BIND ?OBEZ  (:LISP (concatenate (quote string) ?OBE ?BL1 ?IBEZ ?BL2)))\n			(Bezeichnung ?WERT ?OBEZ)\n		)\n		(	(:FAIL (aus_Template ?WERT ?x))\n			(Bezeichnung ?WERT ?OBEZ))))\n        (	(:CLASS ?WERT Wissenselement)\n	(Bezeichnung ?WERT ?OBEZ)))\n\n(:DIRECT-CLASS ?WERT ?TYP)\n(:BIND ?n :Name)(?n ?WERT ?OID)\n"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass Autostarter
	(is-a ProWimV1Rules)
	(role abstract))

(defclass CL4_getStarterAktProzess ";;CL4_getStarterAktProzess\n(:BIND ?NAME :Name)\n(ist_Teil_von ?AKT ?p)\n(Bezeichnung ?p ?PName)\n(wurde_gestartet_von ?p ?s)\n(Bezeichnung ?s ?SName)\n(?NAME ?p ?PID)\n(?NAME ?s ?SID)"
	(is-a Autostarter)
	(role concrete))

(defclass CL9_setStartparameter ";;CL9_setStartparameter\n(:BIND ?NAME :NAME)\n(:BIND ?P ?INS)\n\n(konsumiert ?V ?D)\n(Bezeichnung ?D ?xx)(:FAIL (:NEQ ?xx 'Startparameter'))\n(hat_Prozessinformation ?D ?ALT)\n(Bezeichnung ?ALT ?BEZALT)\n\n(:BIND ?TS (:JAVA (de.procom.wivu.util.DateUtility.getDateTime)))\n(:BIND ?DA (:JAVA (de.procom.wivu.util.DateUtility.FormatStandardDateTime ?TS)))\n\n(:ADD-INSTANCE	(?x Prozessinformation)\n		;;(:NAME ?x ?ID)\n		(Bezeichnung ?x ?BEZALT)\n		(ist_Teil_von ?x ?P)\n		(ist_Prozessinformation_von ?x ?P)\n		(angelegt_am ?x ?DA))\n\n(:TEMPLATE-RELATION Prozessinformation ?slot)\n(?NAME ?slot ?a)\n\n(:NEQ ?a ':NAME') \n(:NEQ ?a 'angelegt_am') \n(:NEQ ?a 'ist_Prozessinformation_von')\n(:NEQ ?a 'Bezeichnung')\n(:NEQ ?a 'ist_Teil_von')\n\n(:SLOT-VALUE-TYPE ?slot ?d)\n\n(:FAIL	(:NEQ ?d 'Instance')\n	(:NEQ ?d 'String')\n	(:NEQ ?d 'Symbol')\n	(:NEQ ?d 'Integer')\n	(:NEQ ?d 'Float')\n	(:NEQ ?d 'Boolean'))\n\n(?slot ?ALT ?PROP)\n\n(:OR	(	(:FAIL(:NEQ ?d 'Instance'))\n		(?NAME ?PROP ?WERT)\n	)\n	(	(:BIND ?WERT ?PROP)\n	)\n)\n\n(:CLEAR-RELATION ?x ?slot)\n(?slot ?x ?WERT)"
	(is-a Autostarter)
	(role concrete))

(defclass CL8_getIDForTemplate ";;CL8_getIDForTemplate\n(:BIND ?NAME :NAME)\n(:INSTANCE PROCESS-CLASS  ?v)\n(:DIRECT-CLASS ?v ?c)\n(?NAME ?c ?cc)\n(:FAIL	(:NEQ ?cc 'Prozess')(:NEQ ?cc 'Aktivität'))\n(Bezeichnung ?v ?TName)\n(:FAIL (aus_Template ?v ?x))\n(?NAME ?v ?T_INS)"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass CL4_genWissensobjektDomaene ";;Name	CL4_genWissensobjektDomaene (06.09.2006 RT)\n;;Zweck	Generiert Wissensobjekt und ordnet es einer Domäne zu\n;;Input	?Bezeichnung des Wissensobjektes\n;;	?Person: ID der Person, die Wissensobjekt einstellt\n;;	?DO: ID einer Domäne, zu dem das Wissensobjekt gehört\n;;Output	?WO: ID des Wissensobjekts\n;;Typ	ASK\n;;Test	06.09.06 RT\n\n\n(:BIND ?DZ (:JAVA (de.procom.wivu.util.DateUtility.getDateTime)))\n(:BIND ?DT (:JAVA (de.procom.wivu.util.DateUtility.FormatStandardDateTime ?DZ)))\n(:BIND ?WO (:LISP (concatenate (quote string) 'Wissensobjekt_' ?DZ)))\n(:ADD-INSTANCE	(?x Wissensobjekt)\n		(:NAME ?x ?WO)\n		(Bezeichnung ?x ?Bezeichnung)\n		(gehoert_zur_Domaene ?x ?DO)\n		(angelegt_am ?x ?DT)\n		(wurde_eingestellt_durch ?x ?Person))"
	(is-a ProWimV1Rules)
	(role concrete))

(defclass OntologyManagement
	(is-a V1RuleClass)
	(role abstract))

(defclass GenCore
	(is-a OntologyManagement)
	(role abstract))

(defclass RL_01_delInstances
	(is-a GenCore)
	(role concrete))

(defclass RL_02_delExpertClasses
	(is-a GenCore)
	(role concrete))

(defclass RL_03_delMainExpertClass
	(is-a GenCore)
	(role concrete))

(defclass RL_04_delOwnSystemClasses
	(is-a GenCore)
	(role concrete))

(defclass RL_05_delSlotsWithoutDomain
	(is-a GenCore)
	(role concrete))

(defclass RL_06_delWithoutIsShapeOf
	(is-a GenCore)
	(role concrete))

(defclass RL_07_delWithoutDescriptionOf
	(is-a GenCore)
	(role concrete))

(defclass TestOntology
	(is-a OntologyManagement)
	(role abstract))

(defclass RL_getSlotsWithoutDomain
	(is-a TestOntology)
	(role concrete))

(defclass RL_getClasseWithoutDescription
	(is-a TestOntology)
	(role concrete))

(defclass RL_getSlotsWithoutDescription
	(is-a TestOntology)
	(role concrete))

(defclass RL_getAllModelInstances ";;Name	CL6_getReadyProcesses \n(:BIND ?NAME :NAME)\n(:BIND ?VG 'fertig')\n(:INSTANCE Prozess ?ID1)\n(:BIND ?P ?ID1)\n(hat_Template ?P ?V)\n(:CLASS ?V Prozess)\n(?NAME ?V ?VID)\n(:OR 	(	(Subprozess ?VID :FALSE)		)\n	(	(Subprozess ?VID :TRUE)\n		(ist_Submodell_von ?VID ?TP)	)\n)\n(Vorgangsstatus ?VID ?VG)\n(:OR ((Start ?VID ?Start))((:FAIL (Start ?VID ?x))(:BIND ?Start '')))\n(:OR ((Ende ?VID ?Ende))((:FAIL (Ende ?VID ?y))(:BIND ?Ende '')))\n(:OR ( (wurde_gestartet_von ?VID ?S)(?NAME ?S ?Starter)(Bezeichnung ?S ?SBEZ))((:BIND ?SBEZ '')))\n(:BIND ?vv ?V)\n(?NAME ?V ?INS)\n(?NAME ?vv ?ID) (Bezeichnung ?vv ?v)"
	(is-a TestOntology)
	(role concrete))

(defclass CL_getProWimVersion "(:BIND ?slot 'VERSION')\n(?slot ProWimVersion ?Version)"
	(is-a TestOntology)
	(role concrete))

(defclass OntologyUpdate
	(is-a OntologyManagement)
	(role abstract))

(defclass CL_getPropertiesAsAlgernon
	(is-a OntologyUpdate)
	(role concrete))

(defclass ModelManagement
	(is-a OntologyManagement)
	(role abstract))

(defclass CL_getModels
	(is-a ModelManagement)
	(role concrete))

(defclass CL_getElementrelation
	(is-a ModelManagement)
	(role concrete))

(defclass RL_Name_als_Alias_eintragen
	(is-a OntologyManagement)
	(role concrete))

(defclass UnderConstruction
	(is-a V1RuleClass)
	(role abstract))

(defclass DeleteRules
	(is-a UnderConstruction)
	(role abstract))

(defclass CL_deleteInstance "(:DELETE-INSTANCE ?ClassID)"
	(is-a DeleteRules)
	(role concrete))

(defclass CL_deleteGlobalLocalInstance "(\n;(:BIND ?InstID \"prowim_Instance_240000\")\n;(:BIND ?ModelID \"prowim_Instance_200000\")\n\n(Geltungsbereich ?InstID ?validity)\n(:OR 	(	(:NEQ ?validity \"Local\")\n				(:DELETE (besteht_aus ?ModelID ?InstID))\n			)\n			(	(:NEQ ?validity \"Global\")\n				(:DELETE-INSTANCE ?InstID)\n			)\n)\n)"
	(is-a DeleteRules)
	(role concrete))

(defclass Models
	(is-a UnderConstruction)
	(role abstract))

(defclass CL_getModelClassOfDomain "(:SUBCLASS ?DomainID ?ModelClass)\n(IS-MODEL ?ModelClass :TRUE)\n(:BIND ?N :NAME)\n(DENOTATION ?ModelClass ?ModelClassName)\n(?N ?ModelClass ?ModelClassID)"
	(is-a Models)
	(role concrete))

(defclass CreateRules
	(is-a UnderConstruction)
	(role abstract))

(defclass CL_addInstance "(:BIND ?N :NAME)\n(:ADD-INSTANCE 	(?v  ?ClassID)\n		(Bezeichnung ?v ?Denotation)\n		(DENOTATION ?v ?Denotation)\n   		(angelegt_am ?v  ?Date)\n)\n(?N ?v ?ID)"
	(is-a CreateRules)
	(role concrete))

(defclass CL_setModel "(:DIRECT-CLASS ?ModelID ?ClassID)\n(HAS-ELEMENTRELATION ?ClassID ?slot)\n(?slot ?ModelID ?InsID)"
	(is-a CreateRules)
	(role concrete))

(defclass Relationen
	(is-a UnderConstruction)
	(role abstract))

(defclass CL_getSlots "(:BIND ?n :Name)\n(:DIRECT-TYPE ?InstanceID ?Class)\n(:template-relation ?Class ?Slot)\n(?n ?Slot ?SlotID)\n(?n ?Class ?ClassID)\n\n(:OR	(	(?Slot ?InstanceID ?Value)(:OR ((?n ?Value ?ValueID))((:BIND ?ValueID \"\"))))\n	(	(:FAIL(?Slot ?InstanceID ?u))(:BIND ?Value \"\"))\n)\n(:OR 	(  	(:FAIL (:SLOT-VALUE-TYPE ?Slot ?y))\n		(:BIND ?Type \"Any\"))\n	(	(:SLOT-VALUE-TYPE ?Slot ?Type)\n		(:FAIL 	(:NEQ ?Type \"Boolean\")\n			(:NEQ ?Type \"String\")\n			(:NEQ ?Type \"Symbol\")\n			(:NEQ ?Type \"Float\")\n			(:NEQ ?Type \"Integer\")\n			(:NEQ ?Type \"Instance\")\n			(:NEQ ?Type \"Class\")))\n)\n)"
	(is-a Relationen)
	(role concrete))

(defclass CL_getRelationFromTo "(:BIND ?NAME :NAME)\n(:Template-Relation ?Q ?s)\n(:SLOT-VALUE-TYPE ?s ?t)\n(:IS-CLASS ?t)\n(?NAME ?t ?T)\n(?NAME ?S ?Z)\n(?NAME ?s ?sID)\n(:OR 	(	(:CHILD ?t ?S)) \n	(	(:FAIL (:NEQ ?T ?Z)))\n)"
	(is-a Relationen)
	(role concrete))

(defclass XXX
	(is-a UnderConstruction)
	(role concrete))

(defclass Utilities
	(is-a UnderConstruction)
	(role abstract))

(defclass DateTime
	(is-a Utilities)
	(role abstract))

(defclass CL_DateMToUnixtime
	(is-a DateTime)
	(role concrete))

(defclass CL_DateSToUnixtime
	(is-a DateTime)
	(role concrete))

(defclass CL_UnixtimeToDateM
	(is-a DateTime)
	(role concrete))

(defclass CL_UnixtimeToDateS
	(is-a DateTime)
	(role concrete))

(defclass UnitRules
	(is-a UnderConstruction)
	(role concrete))

(defclass CL_ConvTemperature
	(is-a UnitRules)
	(role concrete))

(defclass ConfigRules
	(is-a UnderConstruction)
	(role abstract))

(defclass ConfigUnits
	(is-a ConfigRules)
	(role abstract))

(defclass RL_presetUnitAttributs "Teil 1"
	(is-a ConfigUnits)
	(role concrete))

(defclass RL_presetUnitAttributs_2 "Teil 2"
	(is-a ConfigUnits)
	(role concrete))

(defclass CL_setModelUnits "Ersetzt die in den Einheiten eigetragenen Einheitslisten durch die in einer Modellinstanz vorgegebenen."
	(is-a ConfigUnits)
	(role concrete))

(defclass CL_getUnits "Zeigt alle in den Einheiten aus :UNIT-SLOT eingetragen Einheitslisten"
	(is-a ConfigUnits)
	(role concrete))

(defclass CL_resetStandardUnits "Setzt alle nicht Standard-Einheitslisten zurück"
	(is-a ConfigUnits)
	(role concrete))

(defclass CL_setStandardUnits "Besetzt alle Einheiten, die nur einen Einheitstypen angegeben haben, mit der Standardliste"
	(is-a ConfigUnits)
	(role concrete))

(defclass CL_setDefaultUnits "Besetzt alle Einheiten mit dem in der Einheitsliste vorgesehenem Default-Wert"
	(is-a ConfigUnits)
	(role concrete))

(defclass CL_setStandardUnit
	(is-a ConfigUnits)
	(role concrete))

(defclass RL_setIcons
	(is-a ConfigRules)
	(role concrete))

(defclass Editor
	(is-a UnderConstruction)
	(role abstract))

(defclass CL_getAvailableModels ";;Liefert alle verfügbaren Modelle\n\n(:BIND ?N :NAME)\n(:DIRECT-SUBCLASS PROWIM-CLASS ?Name)\n(?N ?Name ?ID)\n(:BIND ?State 1)"
	(is-a Editor)
	(role concrete))

(defclass CL_getPaletteElements ";;Liefert Palette Element (Komponente) eines vorgegebenen Modells\n;;((:BIND ?ModelID \"PROCESS-CLASS\")\n\n(:BIND ?yy SHAPEMAP)\n(:BIND ?y1 SHAPEMAP-SMALL)\n(:BIND ?y2 SHAPEMAP-BIG)\n\n(:BIND ?N :NAME)\n(:CHILD ?ModelID ?ElementName)\n(:FAIL (:PARENT ?ElementName ProWim_Class_20000))\n(:FAIL (IS-MODEL ?ElementName :TRUE))\n(:ROLE ?ElementName \"Concrete\")\n(:DIRECT-TYPE ?ElementName  ?y)\n(:SUPERCLASS ?y SYS_COMPONENT-CLASS)\n\n(HAS-SHAPE ?ElementName ?PaletteElementName)\n(:OR ((?yy ?PaletteElementName ?Picture))((:BIND ?Picture \"No Picture\")))\n\n(:OR ((?y1 ?PaletteElementName ?SmallIconPath)) ((:BIND ?SmallIconPath \"No Small Icon Path\")))\n(:OR ((?y2 ?PaletteElementName ?BigIconPath)) ((:BIND ?BigIconPath \"No Big Icon Path\")))\n(:OR ((:DOCUMENTATION ?PaletteElementName ?Description)) ((:BIND ?Description \"No Description\")))\n\n(:PARENT ?ElementName ?x)\n(HAS-SHAPE ?x ?DrawerName)\n(?N ?DrawerName ?DrawerID)\n(?N ?ElementName ?ElementID)\n(?N ?PaletteElementName ?PaletteElementID)\n\n(:OR ( (:DIRECT-SUPERCLASSES ?ElementName ProWim_Class_4_1_15) (:BIND ?Type \"ContainerElement.class\"))((:BIND ?Type \"GenericElement.class\")))"
	(is-a Editor)
	(role concrete))

(defclass CL_getPaletteConnections ";;Liefert Palette Connection zum vorgegebenen Modell\n;;((:BIND ?ModelID \"WIGE-CLASS\")\n\n(:BIND ?slotSMB SHAPEMAP-BIG)\n(:BIND ?slotSMS SHAPEMAP-SMALL)\n\n(:BIND ?N :NAME)\n(:INSTANCE SYS_CONNECTION-CLASS ?ConnectionName)\n(:PARENT ?ConnectionName ?ModelID)\n\n(HAS-SHAPE ?ConnectionName ?PaletteConnectionName)\n\n(:OR (( :DOCUMENTATION ?PaletteConnectionName ?Description))((:BIND ?Description \"No Description\")))\n(:OR ((?slotSMB ?PaletteConnectionName ?BigIconPath))((:BIND ?BigIconPath \"No Big Icon Path\")))\n(:OR ((?slotSMS ?PaletteConnectionName ?SmallIconPath))((:BIND ?SmallIconPath \"No Small Icon Path\")))\n(:PARENT ?ConnectionName ?ModelID)\n\n(?N ?ConnectionName ?ConnectionID)\n(?N ?PaletteConnectionName ?PaletteConnectionID)"
	(is-a Editor)
	(role concrete))

(defclass CL_getPaletteDrawers ";; Liefert Palette Drawer zum vorgegebenen Modell\n;;((:BIND ?ModelID \"WIGE-CLASS\")\n\n(:BIND ?slotSM SHAPEMAP)\n(:BIND ?N :NAME)\n(:OR 	(	(HAS-SHAPE ?ModelID ?x)\n		(:BIND ?SHP ?x)\n		(:NAME ?DS ?ModelID))\n	(	(:CHILD ?ModelID ?DS)\n		(:ROLE ?DS \"Abstract\")\n		(HAS-SHAPE ?DS ?SHP))\n)\n(:DIRECT-SUPERCLASS ?SHP \"SHAPE-GROUP\")\n(:OR ((?slotSM ?SHP ?Picture)) ((:BIND ?Picture \"No Picture\")))\n\n(:BIND ?Name ?SHP)\n(?N ?SHP ?ID)\n(?N ?DS ?CID)"
	(is-a Editor)
	(role concrete))

(defclass CL_getElementConnectors ";;Liefert Input- oder Output- oder None-Anschlüsse eines vorgegebenen Modells\n;;((:BIND ?IO \"input\")\n;;(:BIND ?ModelID \"PROCESS-CLASS\")\n\n(:BIND ?N :NAME)\n(:CHILD ?ModelID ?ElementName)\n(:FAIL (:PARENT ?ElementName ProWim_Class_20000));; TOPO Konfigurationsmrkmale ausschließen\n(:FAIL (IS-MODEL ?ElementName :TRUE))\n(:ROLE ?ElementName \"Concrete\")\n(:DIRECT-TYPE ?ElementName  ?y)\n(:SUPERCLASS ?y SYS_COMPONENT-CLASS)\n\n(:DIRECT-TEMPLATE-SLOTS ?ElementName   ?ConnectorName)\n(DIRECTION ?ConnectorName ?IO)\n(:SLOT-VALUE-TYPE ?ConnectorName ?ConnectionName)(:NEQ ?ConnectionName  \"Instance\")\n\n(?N ?ConnectionName ?ConnectionID)\n(?N ?ConnectorName ?ConnectorID)\n(?N ?ElementName  ?ElementID)"
	(is-a Editor)
	(role concrete))

(defclass CL_getConnectionColor ";;Liefert die Farben zum vorgegebenen Modell: R,G,B\n;;((:BIND ?ModelID \"PROCESS-CLASS\")\n\n(:BIND ?slotRGBR RGB-R)\n(:BIND ?slotRGBG RGB-G)\n(:BIND ?slotRGBB RGB-B)\n\n(:BIND ?N :NAME)\n(:INSTANCE SYS_CONNECTION-CLASS ?ConnectionName)\n(:PARENT ?ConnectionName ?ModelID)\n(HAS-SHAPE ?ConnectionName ?PaletteConnectionName)\n\n(:OR (( ?slotRGBR ?PaletteConnectionName ?Color-R))((:BIND ?Color-R 0)))\n(:OR (( ?slotRGBG ?PaletteConnectionName ?Color-G))((:BIND ?Color-G 0)))\n(:OR (( ?slotRGBB ?PaletteConnectionName ?Color-B))((:BIND ?Color-B 0)))\n\n(?N ?ConnectionName ?ConnectionID)\n(?N ?PaletteConnectionName ?PaletteConnectionID)"
	(is-a Editor)
	(role concrete))

(defclass CL_getConnectorCount ";;Liefer Input- oder Output- oder None-Anschlüsse eines vorgegebenen Modells.\n;;(Die Anzahl selber zählen)\n;;((:BIND ?IO \"input\")\n;;(:BIND ?ElementID ProWim_Class_0)\n\n\n(:BIND ?N :NAME)\n(:DIRECT-TEMPLATE-SLOTS ?ElementID ?ConnectorName)\n(DIRECTION ?ConnectorName ?IO)\n(:SLOT-VALUE-TYPE ?ConnectorName ?ConnectionName)\n(:NEQ ?ConnectionName  \"Instance\")\n(:NEQ ?ConnectionName  \"Float\")\n(HAS-SHAPE ?ConnectionName ?Shape)\n(?N ?Shape ?PaletteConnectionID)\n\n(?N ?ConnectorName ?ConnectorID)\n(?N ?ConnectionName ?ConnectionID)"
	(is-a Editor)
	(role concrete))

(defclass RL_PresetShape
	(is-a Editor)
	(role concrete))

(defclass CL_getPaletteDrawers_ALT
	(is-a Editor)
	(role concrete))

(defclass CL_getIcons
	(is-a Editor)
	(role concrete))

(defclass TEST
	(is-a UnderConstruction)
	(role abstract))

(defclass TESTU
	(is-a TEST)
	(role abstract))

(defclass TEST2 "dd"
	(is-a TESTU)
	(role concrete))

(defclass Kopie_von_TEST2 "dd"
	(is-a TESTU)
	(role concrete))

(defclass TESZ5
	(is-a TEST)
	(role abstract))

(defclass CL4_getDate ";;Name	CL4_getDate (14.09.2006 RT)\n;;Zweck	liefert aktuelles Datum\n;;Input	\n;;Output	?DZ Datumswert\n;;	?Datum Datumstring\n;;Typ	ASK\n;;Test	14.09.06 RT\n\n(:BIND ?DZ (:JAVA (de.procom.wivu.util.DateUtility.getDateTime)))\n(:BIND ?Datum (:JAVA (de.procom.wivu.util.DateUtility.formatDateTime ?DZ)))"
	(is-a TEST)
	(role concrete))

(defclass CL4_getPersonen ";;Name:   CL4_getPersonen\n;;Zweck:   Liefert Infos zu  Person(en)\n;;Input:   ?BEZ : Bezeichnung der Person (ohne Input werden alle Personen geliefert)\n;;Output:  ?ID: ID der Person\n;;             ?BEZ: Bezeichnung der Person\n;;             ?Nachname\n;;             ?Vorname\n;;             ?Adresse\n;;             ?Telefon\n;;             ?Beschreibung\n;;             ?Email\n;;	?ist_Mitglied_von\n;;    Typ:     ASK\n\n\n(:instance Person ?p)\n(:BIND ?NAME :NAME)\n(?NAME ?p ?ID)\n(Bezeichnung ?p ?BEZ)\n(:OR ((Nachname ?p ?Nachname))((:FAIL (Nachname ?p ?Nachname))(:BIND ?Nachname '')))\n(:OR ((Vorname ?p ?Vorname))((:FAIL (Vorname ?p ?Vorname))(:BIND ?Vorname '')))\n(:OR ((Adresse ?p ?Adresse))((:FAIL (Adresse ?p ?Adresse))(:BIND ?Adresse '')))\n(:OR ((Email ?p ?Email ))((:FAIL (Email ?p ?Email ))(:BIND ?Email '')))\n(:OR ((Beschreibung ?p ?Beschreibung ))((:FAIL (Beschreibung ?p ?Beschreibung ))(:BIND ?Beschreibung '')))\n(:OR ((Telefon ?p ?Telefon ))((:FAIL (Telefon ?p ?Telefon ))(:BIND ?Telefon '')))\n(:OR ((Funktionsberechtigungsstufe ?p ?Funktionsberechtigungsstufe ))((:FAIL (Funktionsberechtigungsstufe ?p ?Funktionsberechtigungsstufe ))(:BIND ?Funktionsberechtigungsstufe '')))\n(:OR ((ist_Mitglied_von ?p ?ist_Mitglied_von))((:FAIL (ist_Mitglied_von ?p ?ist_Mitglied_von ))(:BIND ?ist_Mitglied_von '')))\n)"
	(is-a TEST)
	(role concrete))

(defclass CL4_getToplevelDomaenen ";;Name	CL4_getToplevelDomaenen (06.09.2006 RT)\n;;Zweck	Liefert alle Top Level Domänen der KB\n;;Input	-\n;;Output	?ID: ID einer Top Level Domäne\n;;	?BEZ: Bezeichnung der Top Level Domänen\n;;	?anzsub: Anzahl von Subdomänen zu einer Top Level Domäne\n;;	?anzwob: Anzahl von Wissensobjekten zu einer Top Level Domäne\n;;Typ:	ASK\n;;Test	06.09.06 RT\n\n(:BIND ?NAME :NAME)\n(:instance Wissensdomaene ?wd)\n(:FAIL (ist_Teil_der_Domaene ?wd ?x ))\n(Bezeichnung ?wd ?BEZ)(?NAME ?wd ?ID)\n(:COUNT ?anzsub ?x (besteht_aus_Domaene ?wd ?x))\n(:COUNT ?anzwob ?y (mit_Wissen ?wd ?y))\n(:BIND ?NAME :NAME)\n(?NAME ?wd ?wdID)\n(:BIND ?ANGELEGT_AM angelegt_am)\n(?ANGELEGT_AM ?wdID ?createTime)"
	(is-a TEST)
	(role concrete))

(defclass CL4_getSubdomaenen ";;Name:	CL4_getSubdomaenen  (06.09.2006 RT)\n;;Zweck	Liefert die Subdomaenen einer Vaterdomäne\n;;Input	?DOM: ID der Vaterdomäne\n;;Output	?ID: ID einer Subdomäne\n;;	?BEZ: Bezeichnung derSubdomäne\n;;	?anzsub: Anzahl von weiteren Subdomänen zu einer Subdomäne\n;;	?anzwob: Anzahl von Wissensobjekten zu einer Subdomäne\n;;Typ:	ASK\n;;Test	06.09.06 RT\n\n(:BIND ?NAME :NAME)\n(besteht_aus_Domaene ?DOM ?wd)\n(Bezeichnung ?wd ?BEZ)(?NAME ?wd ?ID)\n(:COUNT ?anzsub ?x (besteht_aus_Domaene ?wd ?x))\n(:COUNT ?anzwob ?y (mit_Wissen ?wd ?y))\n(:BIND ?NAME :NAME)\n(?NAME ?wd ?wdID)\n(:BIND ?ANGELEGT_AM angelegt_am)\n(?ANGELEGT_AM ?wdID ?createTime)"
	(is-a TEST)
	(role concrete))

(defclass CL4_getWissensobjekteDomaene ";;Name	CL4_getWissensobjekteDomaene (06.09.2005 RT)\n(:BIND ?NAME :NAME)\n(mit_Wissen ?DOM ?wo)\n(:BIND ?ANGELEGT '')\n\n(:OR	(	(angelegt_am ?wo ?DT)\n		(:BIND ?ANGELEGT (:JAVA (de.procom.wivu.util.DateUtility.StandardDateToTimestamp ?DT)))\n	)\n	(	(:BIND ?ANGELEGT '')\n	)\n)\n\n(Bezeichnung ?wo ?BEZ)(?NAME ?wo ?ID)"
	(is-a TEST)
	(role concrete))

(defclass CL4_getWissensspeicher ";;Name	CL4_getWissensspeicher (13.09.2006 RT)\n;;Zweck	Liefert alle Wissensspeicher\n;;Input	-\n;;Output	?BEZ:  Bezeichnung des Wissensspeichers\n;;	?ID: ID des Wissensspeichers\n;;	?ORT: Ablageort des Wisssensspeichers (LINK)\n;;Typ	ASK\n;;Test	13.09.06 RT\n\n(:BIND ?NAME :NAME)\n(:INSTANCE Wissensspeicher ?wsp)\n(Ablageort ?wsp ?ORT)\n(Bezeichnung ?wsp ?BEZ)(?NAME ?wsp ?ID)"
	(is-a TEST)
	(role concrete))

(defclass CL4_getRelation
	(is-a TEST)
	(role concrete))

(defclass CL4_getRelationParent
	(is-a TEST)
	(role concrete))

(defclass CL_getAlgRelation
	(is-a TEST)
	(role concrete))

(defclass CLTEST "'AAA'ggggg"
	(is-a TEST)
	(role concrete))

(defclass TESTR
	(is-a TEST)
	(role abstract))

(defclass Constraints
	(is-a UnderConstruction)
	(role abstract))

(defclass tstProduktAusAblage "Ein Produkt kann nur dann von einer Ablage bereitgestellt werden, wenn die Ablage dieses Produkt auch enthält."
	(is-a Constraints)
	(role concrete))

(defclass tstActor "Wenn ein Akteur einem Anwendungsfall zugeordnet ist, dann muss  er gleichzeigtig dem Anforderungsbereich zugeodnet sein\n\nBei ASK: liefert SUCCEDDED, wenn dem so ist, anderenfalls FAILED oder ERROR\n\nBei TELL: Ordnet dem Akteur den Anforderungsbereich zu."
	(is-a Constraints)
	(role concrete))

(defclass tstGlobalProzesszuordnung_A "Global Elemente dürfen keinem Prozess zugeodnet werden (ist_Teil_von)"
	(is-a Constraints)
	(role concrete))

(defclass tstGlobalProzesszuordnung_B "Global Elemente dürfen keinem Prozess zugeodnet werden (besteht_aus)"
	(is-a Constraints)
	(role concrete))

(defclass tstControlFlow "Ein Vorgang kann nur von einem Kontollfluss aktiv gesetzt werde."
	(is-a Constraints)
	(role concrete))

(defclass tstBesetzeRolle "Wenn die Regel succeeded, dann darf die Person in ?p die Rolle in ?roleID NICHT besetzen, sonst darf die Person ?p die Rolle besetzen."
	(is-a Constraints)
	(role concrete))

(defclass tstControlFlowOUT "Verknüpfungen können nur eine einzigen Kontollfluss als Ouput haben"
	(is-a Constraints)
	(role concrete))

(defclass tstBenutzernameUnique "Chechs ob ein Benutzername schon existiert. Wenn die Regel mit SUCCEDDED status bendet iwrd -> Der Benutzername existiert bereits."
	(is-a Constraints)
	(role concrete))

(defclass ConnectionRules
	(is-a UnderConstruction)
	(role abstract))

(defclass getConnectorsOfComponent "Liefert die Anschlüsse mit Richtung und Anschlusstyp (Verbindung) einer Komponente\nACHTUNG: Die Vorgabe einer Bezeichnung für die Komponente ist nicht eindeuteutig -> mehrere Ergebniss können geliefert werden."
	(is-a ConnectionRules)
	(role concrete))

(defclass getConnector
	(is-a ConnectionRules)
	(role concrete))

(defclass ExpertRules
	(is-a UnderConstruction)
	(role abstract))

(defclass AdminRules
	(is-a UnderConstruction)
	(role abstract))

(defclass PresetLanguage
	(is-a AdminRules)
	(role concrete))

(defclass RL_Utilities
	(is-a AdminRules)
	(role abstract))

(defclass RL_setCONNECTIONS
	(is-a RL_Utilities)
	(role concrete))

(defclass RL_setEmptySlotDenotation "Besetzt alle leeren :DENOTATION-Attribute ab  :MODEL-SLOT mit dem Namen (:NAME) des Slots"
	(is-a RL_Utilities)
	(role concrete))

(defclass RL_setEmptyProWimClassDenotation "Besetzt alle leeren :DENOTATION-Attribute ab  :PROWIM-CLASS mit dem Namen (:NAME) der Klasse"
	(is-a RL_Utilities)
	(role concrete))

(defclass LanguageRule
	(is-a AdminRules)
	(role abstract))

(defclass CL_setLanguage_english
	(is-a LanguageRule)
	(role concrete))

(defclass CL_setLanguage_german
	(is-a LanguageRule)
	(role concrete))

(defclass CL_setLanguage_french
	(is-a LanguageRule)
	(role concrete))

(defclass CL_setInstanceLanguage_english
	(is-a LanguageRule)
	(role concrete))

(defclass CL_setInstanceLanguage_german
	(is-a LanguageRule)
	(role concrete))

(defclass CL_setInstanceLanguage_french
	(is-a LanguageRule)
	(role concrete))

(defclass ProcessRules
	(is-a UnderConstruction)
	(role abstract))

(defclass Instantiate
	(is-a ProcessRules)
	(role abstract))

(defclass createProcess
	(is-a Instantiate)
	(role concrete))

(defclass Shaps
	(is-a ProcessRules)
	(role abstract))

(defclass getConnectionX "Liefert den Slot einer Verbindung"
	(is-a Shaps)
	(role concrete))

(defclass testConnecton "Testet, ob ein Verbinder an beiden Seiten richtig verbunden ist."
	(is-a Shaps)
	(role concrete))

(defclass getShapeType
	(is-a Shaps)
	(role concrete))

(defclass ProcessInformationen
	(is-a ProcessRules)
	(role abstract))

(defclass getInformationParameter "Liefert die Prozessinformationen eines Prozesselements"
	(is-a ProcessInformationen)
	(role concrete))

(defclass Workflow
	(is-a V1RuleClass)
	(role abstract))

(defclass CL_createInstanceRelations ";;((:BIND ?PINS 'prowim_Instance_40014')\n\n(:NAME ?PINS ?pins)\n(:BIND ?besteht_aus 'besteht_aus')\n(:BIND ?n :NAME)\n(aus_Template ?PINS ?PTEM)\n(?besteht_aus ?PINS ?EINS)\n(aus_Template ?EINS ?ETEM)\n\n(:DIRECT-TYPE ?ETEM ?Class)\n(:TEMPLATE-RELATION ?Class ?Slot)\n\n\n(?n ?Slot ?SlotID)\n(?n ?Class ?ClassID)\n(:NEQ ?SlotID  ':NAME')\n(:NEQ ?SlotID  'ist_Teil_von')\n(:NEQ ?SlotID  'hat_Template')\n(:NEQ ?SlotID  'Geltungsbereich')\n(:NEQ ?SlotID  'angelegt_am')\n(:NEQ ?SlotID  'Bezeichnung')\n(:NEQ ?SlotID  'Vorgangsstatus')\n(:NEQ ?SlotID  'Vorgangstyp')\n\n(:SLOT-VALUE-TYPE ?SlotID ?Type)\n\n\n(:OR	(	(:FAIL 	(:NEQ ?Type 'Boolean')\n			(:NEQ ?Type 'String')\n			(:NEQ ?Type 'Symbol')\n			(:NEQ ?Type 'Float')\n			(:NEQ ?Type 'Integer'))\n\n		(?SlotID ?ETEM ?ValueWER)\n		(?SlotID ?EINS ?ValueWER)\n	)\n	(	(:FAIL (:NEQ ?Type 'Instance'))\n		(?SlotID ?ETEM ?ValueREL)\n		(?n ?ValueREL ?x)\n		(:OR ((Geltungsbereich ?x ?GB))((:BIND ?GB 'Global')))\n\n		(:OR 	(	(:NEQ ?GB 'Local') \n				(?SlotID ?EINS ?x)	\n			)\n			(\n				(:NEQ ?GB 'Global')\n				(:BIND ?hat_Template 'hat_Template')\n				(?hat_Template ?x ?i)\n				(ist_Teil_von ?i ?y)\n				(?n ?y ?z)\n				(:FAIL (:NEQ ?z ?PINS))\n				(?n ?i ?ii)\n				(?SlotID ?EINS ?ii)	\n			)\n		)\n			\n\n	)\n)"
	(is-a Workflow)
	(role concrete))

(defclass CL_createProcessRelations ";;((:BIND ?PINS 'prowim_Instance_20000')\n(:NAME ?PINS ?pins)\n(:BIND ?besteht_aus 'besteht_aus')\n(:BIND ?n :NAME)\n(aus_Template ?PINS ?PTEM)\n\n(:DIRECT-TYPE ?PTEM ?Class)\n(:TEMPLATE-RELATION ?Class ?Slot)(?n ?Slot ?SlotID)\n\n(:NEQ ?SlotID  ':NAME')\n(:NEQ ?SlotID  'besteht_aus')\n(:NEQ ?SlotID  'hat_Template')\n(:NEQ ?SlotID  'Start')\n(:NEQ ?SlotID  'DENOTATION')\n(:NEQ ?SlotID  'Geltungsbereich')\n(:NEQ ?SlotID  'angelegt_am')\n(:NEQ ?SlotID  'Bezeichnung')\n(:NEQ ?SlotID  'Vorgangsstatus')\n(:NEQ ?SlotID  'Vorgangstyp')\n(:NEQ ?SlotID  'hat_Wissensbedarf_an')\n\n(:SLOT-VALUE-TYPE ?Slot ?Type)\n\n(:OR	(	(:FAIL 	(:NEQ ?Type 'Boolean')\n			(:NEQ ?Type 'String')\n			(:NEQ ?Type 'Symbol')\n			(:NEQ ?Type 'Float')\n			(:NEQ ?Type 'Integer'))\n\n		(?Slot ?PTEM ?ValueWER)\n;;(:CLEAR-RELATION ?PINS ?Slot)\n		(?Slot ?PINS ?ValueWER)\n	)\n	(	(:FAIL (:NEQ ?Type 'Instance'))\n		(?Slot ?PTEM ?ValueREL)\n		(?n ?ValueREL ?x)\n		(:OR ((Geltungsbereich ?ValueREL ?GB))((:BIND ?GB 'Global')))\n\n		(:NEQ ?GB 'Local') \n		(?Slot ?PINS ?ValueREL)\n	)\n)"
	(is-a Workflow)
	(role concrete))

(defclass CL_createInstanceElements ";;((:BIND ?PINS Prozess_200923114458143_200923155247687_)\n\n(:BIND ?TS (:JAVA (de.procom.wivu.util.DateUtility.getDateTime)))\n(:BIND ?DA (:JAVA (de.procom.wivu.util.DateUtility.FormatStandardDateTime ?TS)))\n\n(:BIND ?slot 'besteht_aus')\n(:BIND ?NAME :NAME)\n(aus_Template ?PINS ?PTEMP)\n(?slot ?PTEMP ?ETEMP)\n(:DIRECT-CLASS ?ETEMP ?class)\n(Bezeichnung ?ETEMP ?BEZ)\n(Geltungsbereich ?ETEMP ?GB)\n(:ADD-INSTANCE  	(?x ?class)        \n		(Bezeichnung ?x ?BEZ)        \n		(ist_Teil_von ?x ?PINS)        \n		(angelegt_am ?x ?DA)        \n		(Geltungsbereich ?x ?GB)        \n		(aus_Template ?x ?ETEMP))"
	(is-a Workflow)
	(role concrete))

(defclass CL_createInstanceProcess ";;CL_createInstanceProcess\n(:BIND ?N :NAME)\n(:BIND ?TS (:JAVA (de.procom.wivu.util.DateUtility.getDateTime)))\n(:BIND ?DA (:JAVA (de.procom.wivu.util.DateUtility.FormatStandardDateTime ?TS)))\n\n(:ADD-INSTANCE  	(?x  Prozess)        \n		(Bezeichnung ?x ?BEZ)        \n		(angelegt_am ?x ?DA)      \n		(aus_Template ?x ?PTEM))\n(?N ?x ?PINS)\n\n(:CLEAR-RELATION ?PINS Subprozess)\n(Subprozess ?PTEM ?SB)\n(Subprozess ?x ?SB)"
	(is-a Workflow)
	(role concrete))

(defclass CL_createInstanceRelationsLocal ";;((:BIND ?PINS 'prowim_Instance_20000')\n;;TODO: Anschlussslots nur für Verbinder setzen (sonst doppelt)\n(:BIND ?n :NAME)\n(:BIND ?besteht_aus 'besteht_aus')\n(:BIND ?aus_Template 'aus_Template')\n(:BIND ?hat_Template 'hat_Template')\n\n(?aus_Template ?PINS ?PTEM)\n(?besteht_aus ?PINS ?EINS)\n(?aus_Template ?EINS ?ETEM)\n\n(:DIRECT-TYPE ?ETEM ?Class)\n(:TEMPLATE-RELATION ?Class ?Slot)(?n ?Slot ?SlotID)\n\n(:SLOT-VALUE-TYPE ?Slot ?Type)\n\n(:FAIL (:NEQ ?Type 'Instance'))\n(:NEQ ?SlotID  'ist_Teil_von')\n(:NEQ ?SlotID  'hat_Template')\n\n(?Slot ?ETEM ?ValueREL)\n(:OR ((Geltungsbereich ?ValueREL ?GB))((:BIND ?GB 'Global')))\n\n(:FAIL (:NEQ ?GB 'Local'))\n(?hat_Template ?ValueREL ?i)(?n ?i ?ii)\n(:OR ((ist_Teil_von ?i ?y)(?n ?y ?z))( (:FAIL (:NEQ ?ii ?PINS))(:BIND ?z ?PINS ) ))\n(:FAIL (:NEQ ?z ?PINS))\n(?Slot ?EINS ?ii)"
	(is-a Workflow)
	(role concrete))

(defclass CL_createInstanceRelationsGlobalAndAttribut ";;((:BIND ?PINS 'prowim_Instance_20000')\n\n(:NAME ?PINS ?pins)\n(:BIND ?besteht_aus 'besteht_aus')\n(:BIND ?n :NAME)\n(aus_Template ?PINS ?PTEM)\n(?besteht_aus ?PINS ?EINS)\n(aus_Template ?EINS ?ETEM)\n\n(:DIRECT-TYPE ?ETEM ?Class)\n(:TEMPLATE-RELATION ?Class ?Slot)(?n ?Slot ?SlotID)\n\n(:NEQ ?SlotID  ':NAME')\n(:NEQ ?SlotID  'Geltungsbereich')\n(:NEQ ?SlotID  'angelegt_am')\n(:NEQ ?SlotID  'Bezeichnung')\n(:NEQ ?SlotID  'Vorgangsstatus')\n(:NEQ ?SlotID  'hat_Wissensbedarf_an')\n\n(:SLOT-VALUE-TYPE ?SlotID ?Type)\n\n\n(:OR	(	(:FAIL 	(:NEQ ?Type 'Boolean')\n			(:NEQ ?Type 'String')\n			(:NEQ ?Type 'Symbol')\n			(:NEQ ?Type 'Float')\n			(:NEQ ?Type 'Integer'))\n\n(:CLEAR-RELATION ?EINS ?SlotID)\n		(?SlotID ?ETEM ?ValueWER)\n;;(:CLEAR-RELATION ?EINS ?SlotID) 3.0.2  Nach oben geschoben. Problem gelöst: Übernahme von Multiple Attributen\n		(?SlotID ?EINS ?ValueWER)\n	)\n	(	(:FAIL (:NEQ ?Type 'Instance') (:NEQ ?Type 'Class'))\n		(?SlotID ?ETEM ?ValueREL)\n		(?n ?ValueREL ?x)\n		(:OR ((Geltungsbereich ?x ?GB))((:BIND ?GB 'Global')))\n		(:NEQ ?GB 'Local') \n		(?SlotID ?EINS ?x)	\n	)\n)"
	(is-a Workflow)
	(role concrete))

(defclass CL_deleteProcess ";;CL_deleteProcess\n(:BIND ?hat_Submodell 'hat_Submodell')\n(:BIND ?aus_Template 'aus_Template')\n(:OR	(	(besteht_aus ?PR ?PE)\n		(:OR ( (?hat_Submodell ?PE ?SUB)(?aus_Template ?SUB ?TEMP)(:DELETE-INSTANCE ?SUB))((:BIND ?x 'weiter')))\n		(:DELETE-INSTANCE ?PE)\n		(:DELETE-INSTANCE ?PR)\n	)\n	(	(:DELETE-INSTANCE ?PR)\n	)\n)"
	(is-a Workflow)
	(role concrete))

(defclass CL_getSubprozesse ";;CL_getSubprozesse\n(:BIND ?ID :NAME)\n(:BIND ?besteht_aus 'besteht_aus')\n(:BIND ?aus_Template 'aus_Template')\n\n(?aus_Template ?PINS ?PTEM)\n(?besteht_aus ?PTEM ?Teilprozess)\n(:CLASS ?Teilprozess Aktivität)\n(:BIND ?TP 'Teilprozess')\n(Vorgangstyp ?Teilprozess ?TP)\n(hat_Submodell ?Teilprozess ?Subprozess)\n(?ID ?Teilprozess ?TeilprozessID)\n(?ID ?Subprozess ?SubprozessID)\n"
	(is-a Workflow)
	(role concrete))

(defclass CL_connectSubprozess "(:BIND ?ID :NAME)\n(:BIND ?hat_Instanz 'hat_Template')\n(:BIND ?hat_Submodell 'hat_Submodell')\n(:BIND ?besteht_aus 'besteht_aus')\n\n(?hat_Instanz ?TeilTempID ?TeilIns)\n(ist_Teil_von ?TeilIns ?px)(?ID ?px ?pxID)\n(:FAIL (:NEQ ?pxID ?InsID))\n(?hat_Submodell ?TeilIns ?SubInsID)\n(?ID ?TeilIns ?TeilInsID)"
	(is-a Workflow)
	(role concrete))

(defclass CL_connectSubInput ";;CL_connectSubInput\n(:BIND ?ID :NAME)\n(:BIND ?hat_Instanz 'hat_Template')\n(:BIND ?hat_Submodell 'hat_Submodell')\n(:BIND ?ist_SubInput 'ist_SubInput')\n(:BIND ?besteht_aus 'besteht_aus')\n\n(:BIND ?ID :NAME)\n(:BIND ?hat_Instanz 'hat_Template')\n(:BIND ?hat_Submodell 'hat_Submodell')\n(:BIND ?ist_SubInput 'ist_SubInput')\n(:BIND ?besteht_aus 'besteht_aus')\n\n(konsumiert ?TeilInsID ?Produkt)\n(aus_Template ?Produkt ?PT)\n(?ist_SubInput ?PT ?PSUB)\n(?hat_Instanz ?PSUB ?ISUB)\n(ist_Teil_von ?ISUB ?x)(?ID ?x ?xID)(:FAIL (:NEQ ?xID ?SubInsID))\n(?ist_SubInput ?Produkt ?ISUB)\n\n(hat_Prozessinformation ?Produkt ?PARA)\n(ist_Prozessinformation_von ?PARA ?ISUB)\n"
	(is-a Workflow)
	(role concrete))

(defclass CL_connectSubOutput "(:BIND ?ID :NAME)\n(:BIND ?hat_Instanz 'hat_Template')\n(:BIND ?hat_Submodell 'hat_Submodell')\n(:BIND ?ist_SubOutput 'ist_SubOutput')\n(:BIND ?besteht_aus 'besteht_aus')\n\n(generiert ?TeilInsID ?Produkt)\n(aus_Template ?Produkt ?PT)\n;;CL_connectSubOutput\n(?ist_SubOutput ?PT ?PSUB)\n(?hat_Instanz ?PSUB ?ISUB)\n(ist_Teil_von ?ISUB ?x)(?ID ?x ?xID)(:FAIL (:NEQ ?xID ?SubInsID))\n(?ist_SubOutput ?Produkt ?ISUB)\n\n(hat_Prozessinformation ?Produkt ?PARA)\n(ist_Prozessinformation_von ?PARA ?ISUB)"
	(is-a Workflow)
	(role concrete))

(defclass CL_connectSubRolle ";;CL_connectSubRolle\n(:BIND ?ID :NAME)\n(:BIND ?hat_Instanz 'hat_Template')\n(:BIND ?hat_Submodell 'hat_Submodell')\n(:BIND ?besteht_aus 'besteht_aus')\n(:BIND ?wird_ausgeuebt_durch 'wird_ausgeuebt_durch')\n(:BIND ?uebt_aus 'uebt_aus')\n(:BIND ?subslot 'ist_SubTaetigkeit')\n\n(setzt_sich_zusammen_aus ?TeilInsID ?Taetigkeit)\n(aus_Template ?Taetigkeit ?PT)\n(?subslot ?PT ?PSUB)\n(?hat_Instanz ?PSUB ?ISUB)\n(ist_Teil_von ?ISUB ?x)(?ID ?x ?xID)(:FAIL (:NEQ ?xID ?SubInsID))\n\n(?subslot ?Taetigkeit ?ISUB)\n(?wird_ausgeuebt_durch ?Taetigkeit ?TROLLE)\n(?uebt_aus ?TROLLE ?ISUB)\n"
	(is-a Workflow)
	(role concrete))

(defclass CL4_StartaktivitaetSUBAktivieren ";;CL4_StartaktivitaetSUBAktivieren\n(:BIND ?DZ (:JAVA (de.procom.wivu.util.DateUtility.getDateTime)))\n(startet_mit ?P ?a)\n(:BIND ?R aktiv)\n(:clear-relation ?a Vorgangsstatus)(Vorgangsstatus ?a ?R) \n(:CLEAR-RELATION ?a Start)(Start ?a ?DZ)\n\n(:clear-relation ?P Vorgangsstatus)(Vorgangsstatus ?P ?R)\n(:CLEAR-RELATION ?P Start)(Start ?P ?DZ)\n\n(:BIND ?NAME :NAME)\n(?NAME ?a ?ID)"
	(is-a Workflow)
	(role concrete))

(defclass CL_connectSubelements ";;CL_connectSubelements\n(besteht_aus ?SUB ?PE)\n(ist_Teil_von ?PE ?MAIN)"
	(is-a Workflow)
	(role concrete))

(defclass CL5_addStaffbyID
	(is-a Workflow)
	(role concrete))

(defclass PDMSProperties
	(is-a ModelRules V1RuleClass)
	(role abstract))

(defclass CL_getProperty
	(is-a PDMSProperties)
	(role concrete))

(defclass CL_getPropertyWikilink
	(is-a PDMSProperties)
	(role concrete))

(defclass getDocumentIdentification
	(is-a PDMSProperties)
	(role concrete))

(defclass getDocumentIdentificationForPI "Liefert die ID in alfresco DMS."
	(is-a PDMSProperties)
	(role concrete))

(defclass M_Security "Regel für das Rechtesystem"
	(is-a ModelRules)
	(role abstract))

(defclass getUserRightRoles
	(is-a M_Security)
	(role concrete))

(defclass getRoleAuthorization
	(is-a M_Security)
	(role concrete))

(defclass getPossibleModifier "(:BIND ?NAME :NAME)\n(:BIND ?darf_geaendert_werden_von darf_geaendert_werden_von)\n(:BIND ?USER_ID 'Person_1267106841969')\n(?darf_geaendert_werden_von ?USER_ID ?obj)\n(:DIRECT-CLASS ?obj ?class)\n(?NAME ?obj ?objectID)\n\n\n(:OR    (    (:NEQ ?class Person)  \n                (:OR (      (:NEQ ?class Organisationseinheit)  \n                               (:BIND ?wird_besetzt_durch wird_besetzt_durch)\n	                         (?wird_besetzt_durch ?objectID ?user)\n                              (?NAME ?user ?userID)\n                              (:FAIL (:NEQ ?userID ?USER_ID)) \n	                         \n                        )   \n	                  (       (:BIND ?ist_Mitglied_von ist_Mitglied_von)\n	                          (?ist_Mitglied_von ?objectID ?oe)\n                        )      \n	            )\n             )  \n               \n        )\n       ;; (    \n           \n	     \n        ;;)\n)"
	(is-a M_Security)
	(role concrete))

(defclass getUserPassword
	(is-a M_Security)
	(role concrete))

(defclass checkPersonCanModifyEntity "Checks ob bestimmte Benutzer Änderungen auf Entitäten durchführen dürfen."
	(is-a M_Security)
	(role concrete))

(defclass setPersonCanModifyEntity "Setzt die Person, die eine Entität ändern darf."
	(is-a M_Security)
	(role concrete))

(defclass checkUserEntityAccess "Checks ob ein Benutzer die Zugriffsrechte auf einer Entität besitzt."
	(is-a M_Security)
	(role concrete))

(defclass getRightsRolesAssignedToUser "Liefert die Rechterollen zu einem Benutzer."
	(is-a M_Security)
	(role concrete))

(defclass getRightsRoles "Liefert alle vorhandenen Rechtrollen."
	(is-a M_Security)
	(role concrete))

(defclass isPersonModeler
	(is-a M_Security)
	(role concrete))

(defclass isPersonAdmin
	(is-a M_Security)
	(role concrete))

(defclass getPersonCanModifyEntity "Liefert die Personen, die ein entity ändern dürfen."
	(is-a M_Security)
	(role concrete))

(defclass checkCallAllowed
	(is-a M_Security)
	(role concrete))

(defclass getOrganizationsCanModifyEntity
	(is-a M_Security)
	(role concrete))

(defclass isPersonReader "Succedded wenn der Benutzer die Rechtrolle Leser hat."
	(is-a M_Security)
	(role concrete))

(defclass getPersonsOfRightRoles "Returns a list og person ids, which have the given right role"
	(is-a M_Security)
	(role concrete))

(defclass M_Versioning "Alles, was zur Versionisierung benötigt wird.\n\nWenn die Versionisierung initial implementiert wird in der Ontologie muss einmalig folgende Query ausgeführt werden:\n\n(\n(:BIND ?activeVersionSlot ist_aktive_Version)\n(:BIND ?aus_Template aus_Template)\n(:BIND ?active :TRUE)\n(:INSTANCE Prozess ?process)\n(:FAIL (?aus_Template ?process ?x))\n(:CLEAR-RELATION ?process ?activeVersionSlot)\n(?activeVersionSlot ?process ?active)\n)"
	(is-a ModelRules)
	(role abstract))

(defclass cloneProcessTemplate "Clones a workflow template.\n\nIMPORTANT: The \"aus_Template\" slot is filled and cleared by Java code. This is not an error because the slot has to be filled to resolve the relations when cloning."
	(is-a M_Versioning)
	(role concrete))

(defclass setAsActiveVersion "Sets the given processID to active (:TRUE) Version."
	(is-a M_Versioning)
	(role concrete))

(defclass getTemplateVersions "Gibt alle Versionen des gegebenen Templates zurück."
	(is-a M_Versioning)
	(role concrete))

(defclass getInitialTemplate
	(is-a M_Versioning)
	(role concrete))

(defclass setAsInactiveVersion "Sets the given processID to inactive (:FALSe) Version."
	(is-a M_Versioning)
	(role concrete))

(defclass getInitialVersion "Returns the ID of the instance which is the initial version of the given instance ID"
	(is-a M_Versioning)
	(role concrete))

(defclass InstanceRules
	(is-a RULE-CLASS)
	(role concrete)
	(multislot %3ADOCUMENTATION
		(type STRING)
		(create-accessor read-write))
	(single-slot %3ANAME
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot RuleBody
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot RuleDenotation
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot RuleType
		(type SYMBOL)
		(allowed-values ASK TELL)
		(default ASK)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot RuleSubject
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot RuleCreator
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot RuleOutput
		(type STRING)
		(create-accessor read-write))
	(multislot RuleInput
		(type STRING)
		(create-accessor read-write))
	(single-slot RuleCreationDate
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot IS-CORE
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass ChainingRules
	(is-a InstanceRules)
	(role concrete))

(defclass BusinessRules
	(is-a InstanceRules)
	(role concrete))

(defclass ActivityRules
	(is-a BusinessRules)
	(role concrete)
	(multislot ist_Startregel_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozess Aktivit%C3%A4t)
		(create-accessor read-write))
	(multislot ist_Zwischenregel_von
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t)
		(create-accessor read-write))
	(multislot ist_Fertigregel_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Prozess Aktivit%C3%A4t)
		(create-accessor read-write)))

(defclass ActivationRules
	(is-a BusinessRules)
	(role concrete)
	(multislot ist_Aktivierungsregel_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Aktivit%C3%A4t Entscheidung)
		(create-accessor read-write)))

(defclass CombinationRule
	(is-a BusinessRules)
	(role concrete)
	(multislot ist_Verkn%C3%BCpfungsregel_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes Kontrollfluss Verkn%C3%BCpfung)
		(create-accessor read-write)))

(defclass INFORMATION-CLASS
	(is-a GENERAL-PURPOSE-CLASS)
	(role abstract))

(defclass Informationtyp "Wenn Änderungen vorgenomen werden, muss die Java Klasse: org.prowim.datamodel.prowim.InformationTypesConstants\n\nangepasst werden!"
	(is-a INFORMATION-CLASS)
	(role abstract))

(defclass ShortText "Alphanumerische Zeichenkette\n\nWenn Änderungen vorgenomen werden, muss die Java Klasse: org.prowim.datamodel.prowim.InformationTypesConstants\n\nangepasst werden!"
	(is-a Informationtyp)
	(role concrete))

(defclass LongText "Alphanumerische Zeichenkette mit Umbruch\n\nWenn Änderungen vorgenomen werden, muss die Java Klasse: org.prowim.datamodel.prowim.InformationTypesConstants\n\nangepasst werden!"
	(is-a Informationtyp)
	(role concrete))

(defclass Integer "Numerischer Wert ohne Nachkommastelle\n\nWenn Änderungen vorgenomen werden, muss die Java Klasse: org.prowim.datamodel.prowim.InformationTypesConstants\n\nangepasst werden!"
	(is-a Informationtyp)
	(role concrete))

(defclass Float "Numerischer Wert mit Nachkommastelle\n\nWenn Änderungen vorgenomen werden, muss die Java Klasse: org.prowim.datamodel.prowim.InformationTypesConstants\n\nangepasst werden!"
	(is-a Informationtyp)
	(role concrete))

(defclass SingleList "Liste mit einer einfachen Auswahl\nWenn Änderungen vorgenomen werden, muss die Java Klasse: org.prowim.datamodel.prowim.InformationTypesConstants\n\nangepasst werden!"
	(is-a Informationtyp)
	(role concrete))

(defclass MultiList "Liste mit  mehreren Auswahlen\nWenn Änderungen vorgenomen werden, muss die Java Klasse: org.prowim.datamodel.prowim.InformationTypesConstants\n\nangepasst werden!"
	(is-a Informationtyp)
	(role concrete))

(defclass ComboBox "Liste mit einer einfachen Auswahl\nWenn Änderungen vorgenomen werden, muss die Java Klasse: org.prowim.datamodel.prowim.InformationTypesConstants\n\nangepasst werden!"
	(is-a Informationtyp)
	(role concrete))

(defclass Document "Verweis auf DMS-ID\nWenn Änderungen vorgenomen werden, muss die Java Klasse: org.prowim.datamodel.prowim.InformationTypesConstants\n\nangepasst werden!"
	(is-a Informationtyp)
	(role concrete))

(defclass Personen "Relation auf Person\nWenn Änderungen vorgenomen werden, muss die Java Klasse: org.prowim.datamodel.prowim.InformationTypesConstants\n\nangepasst werden!"
	(is-a Informationtyp)
	(role concrete))

(defclass Date "z.B. 18.06.2009\nWenn Änderungen vorgenomen werden, muss die Java Klasse: org.prowim.datamodel.prowim.InformationTypesConstants\n\nangepasst werden!"
	(is-a Informationtyp)
	(role concrete))

(defclass TimeStamp "Format: 18.06.2009 17:25\nWenn Änderungen vorgenomen werden, muss die Java Klasse: org.prowim.datamodel.prowim.InformationTypesConstants\n\nangepasst werden!"
	(is-a Informationtyp)
	(role concrete))

(defclass Link "Verweis auf URL\nWenn Änderungen vorgenomen werden, muss die Java Klasse: org.prowim.datamodel.prowim.InformationTypesConstants\n\nangepasst werden!"
	(is-a Informationtyp)
	(role concrete))

(defclass ComboBoxControlFlow "Der Informationstyp Kontrollliste bietet die Ausgangskontrollflüsss einer Aktiviät in einer Combobox zur Auswahl an. Die ID des ausgewählten Kontollflusses wird wir in Inhalt_Relationder zugeordneten Prozessinformation abgelegt. das Ganze dient zur Ermittlung einer Nachfolgeaktivität.\n\n\nWenn Änderungen vorgenomen werden, muss die Java Klasse: org.prowim.datamodel.prowim.InformationTypesConstants\n\nangepasst werden!"
	(is-a Informationtyp)
	(role concrete))

(defclass MultiListControlFlow "Wenn Änderungen vorgenomen werden, muss die Java Klasse: org.prowim.datamodel.prowim.InformationTypesConstants\n\nangepasst werden!"
	(is-a Informationtyp)
	(role concrete))

(defclass OrganizationalUnit "Relation auf Organisationseinheit\nWenn Änderungen vorgenomen werden, muss die Java Klasse: org.prowim.datamodel.prowim.InformationTypesConstants\n\nangepasst werden!"
	(is-a Informationtyp)
	(role concrete))

(defclass TYPE-CLASS
	(is-a GENERAL-PURPOSE-CLASS)
	(role abstract))

(defclass ProcessType
	(is-a TYPE-CLASS)
	(role concrete)
	(multislot ist_Unterkategorie_von
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes ProcessType)
		(create-accessor read-write))
	(single-slot Beschreibung
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ist_Prozesstyp_von
		(type INSTANCE)
;+		(allowed-classes Prozess)
		(create-accessor read-write))
	(multislot hat_Unterkategorien
;+		(comment "--")
		(type INSTANCE)
;+		(allowed-classes ProcessType)
		(create-accessor read-write))
	(single-slot Bezeichnung
;+		(comment "--")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ANAME
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Webservice
	(is-a GENERAL-PURPOSE-CLASS)
	(role concrete)
	(single-slot angelegt_am
;+		(comment "--")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot DENOTATION
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot Beschreibung
;+		(comment "--")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot Bezeichnung
;+		(comment "--")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ANAME
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot VERSION
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))